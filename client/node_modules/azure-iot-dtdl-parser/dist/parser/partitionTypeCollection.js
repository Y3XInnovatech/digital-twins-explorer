"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
/* eslint-disable valid-jsdoc */
/* eslint-disable guard-for-in */
/* eslint-disable no-empty */
/* eslint-disable no-empty-function */
/* eslint-disable no-unused-vars */
/* eslint-disable sort-imports */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PartitionTypeCollection = void 0;
const TYPE_KEYWORD = "@type";
/**
 * A collection of JSON partitions of a DTDL model.
 **/
class PartitionTypeCollection {
    static initialize() {
        this._partitionTypeStrings = new Set();
        this._partitionTypeStrings.add("Interface");
        Array.from(this._partitionTypeStrings.values())
            .map((s) => `'${s}'`)
            .join(" or ");
    }
    // codegen-outline-begin methods
    static get partitionTypeDescription() {
        return this._partitionTypeDescription;
    }
    static hasPartitionType(obj) {
        if (!Object.prototype.hasOwnProperty.call(obj, TYPE_KEYWORD)) {
            return false;
        }
        const typeToken = obj[TYPE_KEYWORD];
        if (typeof typeToken === "string") {
            return this._partitionTypeStrings.has(typeToken);
        }
        if (Array.isArray(typeToken)) {
            for (const subToken of typeToken) {
                if (typeof subToken !== "string") {
                    return false;
                }
                if (this._partitionTypeStrings.has(subToken)) {
                    return true;
                }
            }
            return false;
        }
        return false;
    }
}
exports.PartitionTypeCollection = PartitionTypeCollection;
PartitionTypeCollection.initialize();
//# sourceMappingURL=partitionTypeCollection.js.map