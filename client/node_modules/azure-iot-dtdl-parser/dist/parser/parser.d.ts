import { ParsingError } from "./parsingError";
import { AggregateContext } from "./aggregateContext";
import { Model } from "./model";
import { ParsedObjectPropertyInfo } from "./parsedObjectPropertyInfo";
import { ElementPropertyConstraint } from "./type";
import { ValueConstraint } from "./type/valueConstraint";
export interface Parser {
    parseObject(model: Model, objectPropertyInfoList: ParsedObjectPropertyInfo[], elementPropertyConstraints: ElementPropertyConstraint[], valueConstraints: ValueConstraint[], aggregateContext: AggregateContext, parsingErrors: ParsingError[], object: {
        [index: string]: any;
    }, parentId: string | undefined, definedIn: string | undefined, propName: string | undefined, dtmiSeg: string | undefined, keyProp: string | undefined, idRequired: boolean, typeRequired: boolean, allowIdReferenceSyntax: boolean, allowedVersions: Set<number>): any;
    parseToken(model: Model, objectPropertyInfoList: ParsedObjectPropertyInfo[], elementPropertyConstraints: ElementPropertyConstraint[], valueConstraints: ValueConstraint[], aggregateContext: AggregateContext, parsingErrors: ParsingError[], token: any, parentId: string | undefined, definedIn: string | undefined, propName: string | undefined, dtmiSeg: string | undefined, keyProp: string | undefined, idRequired: boolean, typeRequired: boolean, allowIdReferenceSyntax: boolean, allowedVersions: Set<number>): number;
    parsePropertiesV2?(model: Model, elementInfoAsAny: any, objectPropertyInfoList: ParsedObjectPropertyInfo[], elementPropertyConstraints: ElementPropertyConstraint[], aggregateContext: AggregateContext, parsingErrors: ParsingError[], object: {
        [index: string]: any;
    }, definedIn: string | undefined, allowIdReferenceSyntax: boolean): void;
    parsePropertiesV3?(model: Model, elementInfoAsAny: any, objectPropertyInfoList: ParsedObjectPropertyInfo[], elementPropertyConstraints: ElementPropertyConstraint[], aggregateContext: AggregateContext, parsingErrors: ParsingError[], object: {
        [index: string]: any;
    }, definedIn: string | undefined, allowIdReferenceSyntax: boolean): void;
}
//# sourceMappingURL=parser.d.ts.map