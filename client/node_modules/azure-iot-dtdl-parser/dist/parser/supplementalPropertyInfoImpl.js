"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
/* eslint-disable valid-jsdoc */
/* eslint-disable guard-for-in */
/* eslint-disable no-empty */
/* eslint-disable no-empty-function */
/* eslint-disable no-unused-vars */
/* eslint-disable sort-imports */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SupplementalPropertyInfoImpl = void 0;
const aggregateContext_1 = require("./aggregateContext");
/**
 * Class that provides information about a property that can be applied to a DTDL element that has a supplemental type.
 **/
class SupplementalPropertyInfoImpl {
    constructor(type, isPlural, isOptional, minCount, maxCount, dictionaryKey, instanceProperty, valueConstraint) {
        // codegen-outline-begin constructor
        this.type = type;
        this.minCount = minCount;
        this.maxCount = maxCount;
        this.isPlural = isPlural;
        this.isOptional = isOptional;
        this.dictionaryKey = dictionaryKey;
        this.instanceProperty = instanceProperty;
        this.valueConstraint = valueConstraint;
        if (type.includes("dtmi:")) {
            this.valueConstraint = {
                requiredTypes: [type],
                requiredTypesString: aggregateContext_1.AggregateContext.getTermOrUri(type),
            };
        }
        // codegen-outline-end
    }
}
exports.SupplementalPropertyInfoImpl = SupplementalPropertyInfoImpl;
//# sourceMappingURL=supplementalPropertyInfoImpl.js.map