"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.DTMI = void 0;
const internalDtmi_1 = require("./internalDtmi");
const parsingErrorImpl_1 = require("./parsingErrorImpl");
class DTMI extends internalDtmi_1.InDTMI {
    constructor(value) {
        if (internalDtmi_1.InDTMI.createDtmi(value) === undefined) {
            throw DTMI._getInvalidIdException(value);
        }
        super(value);
    }
    static _getInvalidIdException(val) {
        return (0, parsingErrorImpl_1.createParsingError)("dtmi:dtdl:parsingError:invalidDtmi", {
            cause: `${val} is not a legal DTMI.`,
            action: "Replace the identifier with a string that conforms to the DTMI syntax -- see https://github.com/Azure/digital-twin-model-identifier.",
            primaryId: val,
        });
    }
}
exports.DTMI = DTMI;
//# sourceMappingURL=dtmi.js.map