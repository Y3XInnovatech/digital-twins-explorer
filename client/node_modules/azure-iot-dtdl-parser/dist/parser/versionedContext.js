"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.VersionedContext = void 0;
class VersionedContext {
    constructor(majorVersion, minorVersion) {
        this._termDict = {};
        this._reverseTermDict = {};
        this._majorVersion = majorVersion;
        this._minorVersion = minorVersion;
    }
    get majorVersion() {
        return this._majorVersion;
    }
    get minorVersion() {
        return this._minorVersion;
    }
    addDefinition(term, dtmi) {
        this._termDict[term] = dtmi;
        this._reverseTermDict[dtmi.value] = term;
    }
    getDtmi(term) {
        if (Object.prototype.hasOwnProperty.call(this._termDict, term)) {
            return this._termDict[term];
        }
        else {
            return undefined;
        }
    }
    getTerm(uriString) {
        if (Object.prototype.hasOwnProperty.call(this._reverseTermDict, uriString)) {
            return this._reverseTermDict[uriString];
        }
        else {
            return undefined;
        }
    }
    isTermInContext(term) {
        return Object.prototype.hasOwnProperty.call(this._termDict, term);
    }
    isIdentifierInContext(uriString) {
        return Object.prototype.hasOwnProperty.call(this._reverseTermDict, uriString);
    }
}
exports.VersionedContext = VersionedContext;
//# sourceMappingURL=versionedContext.js.map