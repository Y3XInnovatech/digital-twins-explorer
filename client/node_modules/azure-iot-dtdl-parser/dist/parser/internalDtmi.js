"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.InDTMI = void 0;
const SEPARATORS = new RegExp(":|;");
const DTMI_REGEX = new RegExp("^dtmi:(?:_+[A-Za-z0-9]|[A-Za-z])(?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::(?:_+[A-Za-z0-9]|[A-Za-z])(?:[A-Za-z0-9_]*[A-Za-z0-9])?)*(?:;[1-9][0-9]{0,8}(?:\\.[1-9][0-9]{0,5})?)?(?:#(?:(?:_+[A-Za-z0-9]|[A-Za-z])(?:[A-Za-z0-9_]*[A-Za-z0-9])?)?)?$");
const DTMIPREFIX = "dtmi:";
class InDTMI {
    constructor(value) {
        this._value = "";
        this._autogenned = false;
        this._majorVersion = -1;
        this._minorVersion = -1;
        this._completeVersion = -1;
        this._versionless = "";
        this._isReserved = false;
        this._absolutePath = "";
        this._fragment = "";
        this._value = value;
        const semicolonSeparator = this._value.lastIndexOf(";");
        const hashSeparator = this._value.indexOf("#");
        this._fragment = hashSeparator < 0 ? "" : this._value.substring(hashSeparator);
        if (semicolonSeparator < 0) {
            this._majorVersion = 0;
            this._minorVersion = 0;
            this._completeVersion = 0.0;
            this._versionless = this._value;
        }
        else {
            const dotSeparator = this._value.indexOf(".");
            const verEndIx = hashSeparator < 0 ? this._value.length : hashSeparator;
            const majorEndIx = dotSeparator < 0 ? verEndIx : dotSeparator;
            this._majorVersion = Number(this._value.substring(semicolonSeparator + 1, majorEndIx));
            this._minorVersion = dotSeparator < 0 ? 0 : Number(this._value.substring(dotSeparator + 1, verEndIx));
            this._completeVersion = this._majorVersion + this._minorVersion * 0.000001;
            this._versionless = this._value.substring(0, semicolonSeparator) + this._fragment;
        }
        if (this._value.includes(":_") || this._fragment.startsWith("#_")) {
            this._isReserved = true;
        }
        if (this._fragment) {
            this._absolutePath = this._value.substring(DTMIPREFIX.length, hashSeparator);
        }
        else {
            this._absolutePath = this._value.substring(DTMIPREFIX.length);
        }
        this._labels = this._absolutePath.split(SEPARATORS);
        if (this._absolutePath.includes(";")) {
            this._labels.pop();
        }
    }
    static createDtmi(value) {
        if (DTMI_REGEX.test(value)) {
            return new InDTMI(value);
        }
        else {
            return undefined;
        }
    }
    get value() {
        return this._value;
    }
    get autogenned() {
        return this._autogenned;
    }
    get majorVersion() {
        return this._majorVersion;
    }
    get minorVersion() {
        return this._minorVersion;
    }
    get completeVersion() {
        return this._completeVersion;
    }
    get versionless() {
        return this._versionless;
    }
    get labels() {
        return this._labels;
    }
    get isReserved() {
        return this._isReserved;
    }
    get absolutePath() {
        return this._absolutePath;
    }
    get fragment() {
        return this._fragment;
    }
}
exports.InDTMI = InDTMI;
//# sourceMappingURL=internalDtmi.js.map