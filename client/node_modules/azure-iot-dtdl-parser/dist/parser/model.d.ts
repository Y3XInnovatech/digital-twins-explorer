import { ParsingError } from "./parsingError";
import { ParsedObjectPropertyInfo } from "./parsedObjectPropertyInfo";
import { ModelDict } from "./modelDict";
import { SupplementalTypeInfo } from "./supplementalTypeInfo";
import { EntityKinds } from "./entityKinds";
/**
 * A DTDL model.
 **/
export declare class Model {
    dict: ModelDict;
    constructor();
    isPartition(elementId: string): boolean;
    addType(elementId: string, supplementalTypeId: any, supplementalType: SupplementalTypeInfo): void;
    doesPropertyDictContainKey(elementId: string, propertyName: string, key?: string): boolean;
    trySetObjectProperty(elementId: string, propertyName: string, referencedElementId: string, key?: string): boolean;
    isKindInSet(elementId: string, kindSet: EntityKinds[]): boolean;
    getKindString(elementId: string): string;
    checkRestrictions(parsingErrors: ParsingError[]): void;
    applyTransformations(parsingErrors: ParsingError[]): void;
    hasElementWithId(elementId: string): boolean;
    /**
     * Set the object properties from objectPropertyInfoList on elements in this Model.
     * @param objectPropertyInfoList - Object property information for the this.
     * @param parsingErrors - A list of ParsingErrors to which any parsing error is added.
     */
    setObjectProperties(objectPropertyInfoList: ParsedObjectPropertyInfo[], parsingErrors: ParsingError[]): void;
}
//# sourceMappingURL=model.d.ts.map