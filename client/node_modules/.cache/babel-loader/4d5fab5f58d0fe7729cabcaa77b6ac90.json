{"ast":null,"code":"var _jsxFileName = \"/home/saharsh/digital-twins-explorer/client/src/components/ModelGraphViewerComponent/ModelGraphViewerComponent.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React from \"react\";\nimport { ModelGraphViewerCytoscapeComponent, ModelGraphViewerCytoscapeLayouts } from \"./ModelGraphViewerCytoscapeComponent/ModelGraphViewerCytoscapeComponent\";\nimport ModelGraphViewerFilteringComponent from \"./ModelGraphViewerFilteringComponent/ModelGraphViewerFilteringComponent\";\nimport ModelGraphViewerRelationshipsToggle from \"./ModelGraphViewerRelationshipsToggle/ModelGraphViewerRelationshipsToggle\";\nimport LoaderComponent from \"../LoaderComponent/LoaderComponent\";\nimport { eventService } from \"../../services/EventService\";\nimport { ModelService } from \"../../services/ModelService\";\nimport \"./ModelGraphViewerComponent.scss\";\nimport { ModelGraphViewerModelDetailComponent } from \"./ModelGraphViewerModelDetailComponent/ModelGraphViewerModelDetailComponent\";\nimport { Icon } from \"office-ui-fabric-react\";\nimport { withTranslation } from \"react-i18next\";\nimport { DETAIL_MIN_WIDTH } from \"../../services/Constants\";\nimport ModelGraphViewerCommandBarComponent from \"./ModelGraphViewerCommandBarComponent/ModelGraphViewerCommandBarComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TAB_KEY_CODE = 9;\nconst ENTER_KEY_CODE = 13;\nclass ModelGraphViewerComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialize = async () => {\n      if (!this.isInitialized) {\n        this.isInitialized = true;\n        eventService.subscribeModelIconUpdate(modelId => this.cyRef.current.updateModelIcon(modelId));\n        eventService.subscribeDeleteModel(this.removeModel);\n        eventService.subscribeCreateModel(this.addModels);\n        eventService.subscribeConfigure(evt => {\n          if (evt.type === \"end\" && evt.config) {\n            this.modelService = new ModelService();\n            this.cyRef.current.clearNodes();\n            this.setState({\n              isLoading: false\n            });\n            this.retrieveModels();\n          }\n        });\n        eventService.subscribeClearModelsData(() => {\n          this.modelService = new ModelService();\n          this.cyRef.current.clearNodes();\n          this.setState({\n            isLoading: false\n          });\n        });\n        eventService.subscribeModelsUpdate(() => {\n          this.modelService = new ModelService();\n          this.cyRef.current.clearNodes();\n          this.setState({\n            isLoading: false\n          });\n          this.retrieveModels();\n        });\n        eventService.subscribeFocusModel(model => {\n          this.cyRef.current.emitNodeEvent(model, \"mouseover\");\n        });\n        eventService.subscribeBlurModel(model => {\n          this.cyRef.current.emitNodeEvent(model, \"mouseout\");\n        });\n        eventService.subscribeFocusRelationshipsToggle(e => {\n          e.preventDefault();\n          this.relationshipsToggle.focus();\n        });\n        eventService.subscribeSelectModel(item => {\n          if (item) {\n            this.setState({\n              selectedModel: item\n            }, () => {\n              this.highlightNodes();\n              this.modelDetail.current.loadModel(item.key);\n            });\n          } else {\n            this.setState({\n              selectedModel: null\n            }, () => {\n              this.cyRef.current.clearHighlighting();\n              this.modelDetail.current.clear();\n            });\n          }\n        });\n        eventService.subscribeModelSelectionUpdatedInGraph(this.deselectModel);\n        await this.retrieveModels();\n      }\n    };\n    this.addModels = async models => {\n      this.updateProgress(0);\n      await this.modelService.addModels(models);\n      const mapped = await this.modelService.getModels(models.map(m => m[\"@id\"]));\n      const modelNodes = this.getNodes(mapped);\n      const componentRelationships = this.getComponentRelationships(mapped);\n      const extendRelationships = this.getExtendRelationships(mapped);\n      const relationships = this.getRelationships(mapped);\n      this.allNodes.push(modelNodes);\n      this.componentRelationships.push(componentRelationships);\n      this.extendRelationships.push(extendRelationships);\n      this.relationships.push(relationships);\n      this.cyRef.current.addNodes(modelNodes);\n      this.cyRef.current.addRelationships(relationships, \"related\");\n      this.cyRef.current.addRelationships(componentRelationships, \"component\");\n      this.cyRef.current.addRelationships(extendRelationships, \"extends\");\n      await this.cyRef.current.doLayout(this.progressCallback);\n      this.setState({\n        isLoading: false\n      });\n      this.updateProgress(100);\n      this.canDeselect = true;\n    };\n    this.removeModel = id => {\n      if (id) {\n        this.modelService.removeModel(id);\n        this.cyRef.current.removeNodes([id]);\n      }\n    };\n    this.getNodes = list => list.map(i => ({\n      id: i.id,\n      label: i.displayName ? i.displayName : i.id\n    }));\n    this.getComponentRelationships = list => list.flatMap(m => m.components.filter(c => !c.isExtended).map(c => ({\n      sourceId: m.id,\n      targetId: c.schema,\n      relationshipName: c.name,\n      relationshipId: c.name\n    })));\n    this.getExtendRelationships = list => list.flatMap(m => m.rootBases.map(b => ({\n      sourceId: m.id,\n      targetId: b,\n      relationshipName: \"Extends\",\n      relationshipId: \"extends\"\n    })));\n    this.getRelationships = list => list.flatMap(m => m.relationships.filter(r => {\n      let parentHasSameRelationship = false;\n      if (m.bases && m.bases.length > 0) {\n        m.bases.forEach(base => {\n          const baseModel = list.find(i => i.id === base);\n          if (baseModel) {\n            const hasSameRel = baseModel.relationships.some(br => br.name === r.name);\n            if (hasSameRel) {\n              parentHasSameRelationship = true;\n            }\n          }\n        });\n      }\n      return !parentHasSameRelationship;\n    }).map(r => ({\n      sourceId: m.id,\n      targetId: r.target,\n      relationshipName: r.name,\n      relationshipId: r.name\n    })));\n    this.toggleFilter = () => {\n      const {\n        filterIsOpen\n      } = this.state;\n      this.setState({\n        filterIsOpen: !filterIsOpen\n      });\n    };\n    this.onZoomIn = () => {\n      this.cyRef.current.zoomIn();\n    };\n    this.onZoomOut = () => {\n      this.cyRef.current.zoomOut();\n    };\n    this.onZoomToFit = () => {\n      this.cyRef.current.zoomToFit();\n    };\n    this.progressCallback = progress => {\n      this.updateProgress(progress * 100);\n    };\n    this.deselectModel = () => {\n      if (this.canDeselect) {\n        var _this$modelDetail$cur;\n        (_this$modelDetail$cur = this.modelDetail.current) === null || _this$modelDetail$cur === void 0 ? void 0 : _this$modelDetail$cur.clear();\n        const {\n          selectedModel\n        } = this.state;\n        if (selectedModel) {\n          this.cyRef.current.emitNodeEvent(selectedModel.key, \"unselect\");\n          this.cyRef.current.clearHighlighting();\n          this.setState({\n            selectedModel: null\n          });\n        }\n      } else {\n        this.canDeselect = true;\n      }\n    };\n    this.onRelationshipsToggleChange = async () => {\n      const {\n        showRelationships\n      } = this.state;\n      if (!this.relationships) {\n        return;\n      }\n      this.updateProgress(0);\n      if (showRelationships) {\n        this.cyRef.current.removeRelationships(this.relationships);\n        await this.cyRef.current.doLayout(this.progressCallback);\n      } else {\n        this.cyRef.current.addRelationships(this.relationships, \"related\");\n        await this.cyRef.current.doLayout(this.progressCallback);\n      }\n      this.setState({\n        showRelationships: !showRelationships,\n        isLoading: false\n      });\n      this.updateProgress(100);\n    };\n    this.onInheritancesToggleChange = async () => {\n      const {\n        showInheritances\n      } = this.state;\n      if (!this.extendRelationships) {\n        return;\n      }\n      this.updateProgress(0);\n      if (showInheritances) {\n        this.cyRef.current.removeRelationships(this.extendRelationships);\n        await this.cyRef.current.doLayout(this.progressCallback);\n      } else {\n        this.cyRef.current.addRelationships(this.extendRelationships, \"extends\");\n        await this.cyRef.current.doLayout(this.progressCallback);\n      }\n      this.setState({\n        showInheritances: !showInheritances,\n        isLoading: false\n      });\n      this.updateProgress(100);\n    };\n    this.onComponentsToggleChange = async () => {\n      const {\n        showComponents\n      } = this.state;\n      if (!this.componentRelationships) {\n        return;\n      }\n      this.updateProgress(0);\n      if (showComponents) {\n        this.cyRef.current.removeRelationships(this.componentRelationships);\n        await this.cyRef.current.doLayout(this.progressCallback);\n      } else {\n        this.cyRef.current.addRelationships(this.componentRelationships, \"component\");\n        await this.cyRef.current.doLayout(this.progressCallback);\n      }\n      this.setState({\n        showComponents: !showComponents,\n        isLoading: false\n      });\n      this.updateProgress(100);\n    };\n    this.onNodeMouseEnter = async modelId => {\n      const properties = await this.modelService.getProperties(modelId);\n      const telemetries = await this.modelService.getTelemetries(modelId);\n      return {\n        properties,\n        telemetries\n      };\n    };\n    this.onEdgeMouseEnter = async (source, relationshipId) => {\n      const model = await this.modelService.getModel(source);\n      const componentEdge = this.componentRelationships.find(cr => cr.sourceId === source);\n      if (componentEdge) {\n        return {\n          name: model.components[0].displayName,\n          componentModel: model.components[0].schema\n        };\n      }\n      const inheritanceEdge = this.extendRelationships.find(er => er.sourceId === source);\n      if (inheritanceEdge) {\n        return {\n          baseModel: model.bases[0]\n        };\n      }\n      return model.relationships.find(r => r.name === relationshipId);\n    };\n    this.onNodeUnhover = () => {\n      const activePopper = document.querySelector(\"#cy-popper\");\n      if (activePopper) {\n        activePopper.parentNode.removeChild(activePopper);\n      }\n    };\n    this.onNodeClicked = modelId => {\n      this.modelDetail.current.loadModel(modelId);\n      this.canDeselect = false;\n      eventService.publishModelSelectionUpdatedInGraph(modelId);\n      const {\n        highlightingTerms\n      } = this.state;\n      if (highlightingTerms.length > 0) {\n        const newTerms = highlightingTerms.map(t => ({\n          ...t,\n          isActive: false\n        }));\n        this.setState({\n          highlightingTerms: newTerms\n        });\n      }\n      this.setState({\n        selectedModel: modelId\n      });\n    };\n    this.onControlClicked = () => {\n      this.modelDetail.current.clear();\n      this.canDeselect = false;\n      eventService.publishModelSelectionUpdatedInGraph();\n      const {\n        highlightingTerms,\n        filteringTerms\n      } = this.state;\n      if (highlightingTerms.length > 0) {\n        const newTerms = highlightingTerms.map(t => ({\n          ...t,\n          isActive: false\n        }));\n        this.setState({\n          highlightingTerms: newTerms\n        });\n      }\n      if (filteringTerms.length > 0) {\n        const newTerms = filteringTerms.map(t => ({\n          ...t,\n          isActive: false\n        }));\n        if (this.cyRef.current) {\n          this.cyRef.current.showAllNodes();\n        }\n        this.setState({\n          filteringTerms: newTerms\n        });\n      }\n    };\n    this.onAddFilteringTerm = term => {\n      const {\n        filteringTerms\n      } = this.state;\n      filteringTerms.push(term);\n      this.setState({\n        filteringTerms\n      }, () => {\n        this.filterNodes();\n      });\n    };\n    this.onRemoveFilteringTerm = term => {\n      const {\n        filteringTerms\n      } = this.state;\n      filteringTerms.splice(filteringTerms.map(t => t.text).indexOf(term.text), 1);\n      this.setState({\n        filteringTerms\n      }, () => {\n        this.filterNodes();\n      });\n    };\n    this.onAddHighlightingTerm = term => {\n      const {\n        highlightingTerms\n      } = this.state;\n      highlightingTerms.push(term);\n      this.setState({\n        highlightingTerms\n      }, () => {\n        this.highlightNodes();\n      });\n    };\n    this.onRemoveHighlightingTerm = term => {\n      const {\n        highlightingTerms\n      } = this.state;\n      highlightingTerms.splice(highlightingTerms.map(t => t.text).indexOf(term.text), 1);\n      this.setState({\n        highlightingTerms\n      }, () => {\n        this.highlightNodes();\n      });\n    };\n    this.getNodeSuperTypes = node => {\n      const superTypes = [];\n      const nodeRels = this.extendRelationships.filter(rel => rel.sourceId === node.id);\n      if (nodeRels.length > 0) {\n        nodeRels.forEach(rel => {\n          superTypes.push(this.allNodes.find(n => n.id === rel.targetId));\n        });\n      }\n      return superTypes;\n    };\n    this.getNodeSubTypes = node => {\n      const subTypes = [];\n      const nodeRels = this.extendRelationships.filter(rel => rel.targetId === node.id);\n      if (nodeRels.length > 0) {\n        nodeRels.forEach(rel => {\n          subTypes.push(this.allNodes.find(n => n.id === rel.sourceId));\n        });\n      }\n      return subTypes;\n    };\n    this.getNodeOutgoingRelationships = node => {\n      const outgoingRels = [];\n      const nodeRels = this.relationships.filter(rel => rel.sourceId === node.id);\n      if (nodeRels.length > 0) {\n        nodeRels.forEach(rel => {\n          const relNode = this.allNodes.find(n => n.id === rel.targetId);\n          if (relNode) {\n            outgoingRels.push(this.allNodes.find(n => n.id === rel.targetId));\n          }\n        });\n      }\n      return outgoingRels;\n    };\n    this.highlightNodes = () => {\n      const {\n        highlightingTerms,\n        selectedModel\n      } = this.state;\n      this.cyRef.current.clearHighlighting();\n      const activeTerms = highlightingTerms.filter(term => term.isActive);\n      const termsHighlightingId = activeTerms.filter(term => term.matchDtmi);\n      const termsHighlightingDisplayName = activeTerms.filter(term => term.matchDisplayName);\n      const selectedModelKey = selectedModel ? selectedModel.key : null;\n      const highlightedNodes = this.getFilteredNodes(termsHighlightingId, termsHighlightingDisplayName, selectedModelKey);\n      const highlight = termsHighlightingId.length > 0 || termsHighlightingDisplayName.length > 0 || selectedModelKey;\n      this.cyRef.current.highlightNodes(highlightedNodes, highlight);\n    };\n    this.filterNodes = () => {\n      const {\n        filteringTerms\n      } = this.state;\n      const activeTerms = filteringTerms.filter(term => term.isActive);\n      const termsFilteringId = activeTerms.filter(term => term.matchDtmi);\n      const termsFilteringDisplayName = activeTerms.filter(term => term.matchDisplayName);\n      const filteredNodes = this.getFilteredNodes(termsFilteringId, termsFilteringDisplayName);\n      if (this.cyRef.current) {\n        this.cyRef.current.showAllNodes();\n        this.cyRef.current.filterNodes(filteredNodes);\n      }\n    };\n    this.getFilteredNodes = (termsFilteringId, termsFilteringDisplayName, selectedModelKey) => {\n      if (!this.allNodes) {\n        eventService.publishModelSelectionUpdatedInGraph();\n        return [];\n      }\n      let superTypes = [];\n      let subTypes = [];\n      let outgoingRels = [];\n      let filteredNodes = this.allNodes.filter(node => {\n        if (termsFilteringId.length === 0 && termsFilteringDisplayName.length === 0 && !selectedModelKey) {\n          return true;\n        }\n        const matchesId = termsFilteringId.some(term => {\n          const matches = node.id.toLowerCase().includes(term.text.toLowerCase());\n          if (matches) {\n            if (term.addSuperTypes) {\n              superTypes = [...new Set([...superTypes, ...this.getNodeSuperTypes(node)])];\n            }\n            if (term.addSubTypes) {\n              subTypes = [...new Set([...subTypes, ...this.getNodeSubTypes(node)])];\n            }\n            if (term.addOutgoingRelationships) {\n              outgoingRels = [...new Set([...outgoingRels, ...this.getNodeOutgoingRelationships(node)])];\n            }\n          }\n          return matches;\n        });\n        const matchesDisplayName = termsFilteringDisplayName.some(term => {\n          const matches = node.label.toLowerCase().includes(term.text.toLowerCase());\n          if (matches) {\n            if (term.addSuperTypes) {\n              superTypes = [...new Set([...superTypes, ...this.getNodeSuperTypes(node)])];\n            }\n            if (term.addSubTypes) {\n              subTypes = [...new Set([...subTypes, ...this.getNodeSubTypes(node)])];\n            }\n            if (term.addOutgoingRelationships) {\n              outgoingRels = [...new Set([...outgoingRels, ...this.getNodeOutgoingRelationships(node)])];\n            }\n          }\n          return matches;\n        });\n        const matchesSelectedNode = selectedModelKey && node.id && node.id.toLowerCase() === selectedModelKey.toLowerCase();\n        return matchesId || matchesDisplayName || matchesSelectedNode;\n      });\n      if (superTypes.length > 0) {\n        filteredNodes = [...new Set([...filteredNodes, ...superTypes])];\n      }\n      if (subTypes.length > 0) {\n        filteredNodes = [...new Set([...filteredNodes, ...subTypes])];\n      }\n      if (outgoingRels.length > 0) {\n        filteredNodes = [...new Set([...filteredNodes, ...outgoingRels])];\n      }\n      return filteredNodes;\n    };\n    this.onSwitchFilters = e => {\n      if (e.key.includes(\"filter\")) {\n        if (this.cyRef.current) {\n          this.cyRef.current.clearHighlighting();\n        }\n        this.filterNodes();\n      } else if (e.key.includes(\"highlight\")) {\n        if (this.cyRef.current) {\n          this.cyRef.current.showAllNodes();\n        }\n      }\n      this.highlightNodes();\n    };\n    this.toggleModelDetail = () => {\n      const {\n        modelDetailIsOpen\n      } = this.state;\n      this.setState({\n        modelDetailIsOpen: !modelDetailIsOpen\n      });\n    };\n    this.onUpdateFilteringTerm = term => {\n      const {\n        filteringTerms\n      } = this.state;\n      filteringTerms[filteringTerms.map(t => t.text).indexOf(term.text)] = term;\n      this.setState({\n        filteringTerms\n      }, () => {\n        this.filterNodes();\n      });\n    };\n    this.onUpdateHighlightingTerm = term => {\n      const {\n        highlightingTerms\n      } = this.state;\n      highlightingTerms[highlightingTerms.map(t => t.text).indexOf(term.text)] = term;\n      this.setState({\n        highlightingTerms\n      }, () => {\n        this.highlightNodes();\n      });\n    };\n    this.handleMouseMove = e => {\n      this.resizeEndX = this.resizeStartX - e.screenX;\n      if (this.resizeEndX >= DETAIL_MIN_WIDTH) {\n        this.setState({\n          modelDetailWidth: DETAIL_MIN_WIDTH + this.resizeEndX * 100 / window.innerWidth\n        });\n      }\n    };\n    this.handleMouseUp = e => {\n      e.preventDefault();\n      window.removeEventListener(\"mousemove\", this.handleMouseMove);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n    };\n    this.handleMouseDown = e => {\n      e.preventDefault();\n      if (this.resizeStartX === 0) {\n        this.resizeStartX = e.screenX;\n      }\n      window.addEventListener(\"mousemove\", this.handleMouseMove);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n    };\n    this.onLayoutChanged = async layout => {\n      this.setState({\n        layout\n      });\n      this.cyRef.current.setLayout(layout);\n      this.updateProgress(0);\n      await this.cyRef.current.doLayout(this.progressCallback);\n      this.updateProgress(100);\n    };\n    this.onRelationshipsToggleKeyDown = e => {\n      if (e.keyCode === TAB_KEY_CODE && e.shiftKey) {\n        eventService.publishFocusModelViewer();\n      }\n    };\n    this.handleToggleModelDetailOnEnter = e => {\n      if (e.keyCode === ENTER_KEY_CODE) {\n        this.toggleModelDetail();\n      }\n    };\n    this.state = {\n      progress: 0,\n      isLoading: false,\n      filterIsOpen: false,\n      modelDetailIsOpen: false,\n      showRelationships: true,\n      showInheritances: true,\n      showComponents: true,\n      highlightingTerms: [],\n      filteringTerms: [],\n      modelDetailWidth: DETAIL_MIN_WIDTH,\n      layout: \"d3Force\",\n      selectedModel: null\n    };\n    this.cyRef = /*#__PURE__*/React.createRef();\n    this.relationshipsToggle = null;\n    this.commandRef = /*#__PURE__*/React.createRef();\n    this.modelDetail = /*#__PURE__*/React.createRef();\n    this.modelService = new ModelService();\n    this.resizeStartX = 0;\n    this.resizeEndX = 0;\n    this.isInitialized = false;\n  }\n  updateProgress(newProgress) {\n    const {\n      progress\n    } = this.state;\n    if (newProgress >= 0 && newProgress > progress) {\n      this.setState({\n        isLoading: newProgress < 100,\n        progress: newProgress >= 100 ? 0 : newProgress\n      });\n    }\n  }\n  async retrieveModels() {\n    const {\n      isLoading\n    } = this.state;\n    if (isLoading) {\n      return;\n    }\n    this.updateProgress(0);\n    if (this.cyRef.current) {\n      let list = [];\n      try {\n        list = await this.modelService.getAllModels();\n      } catch (exc) {\n        exc.customMessage = \"Error fetching models\";\n        eventService.publishError(exc);\n      }\n      this.allNodes = this.getNodes(list);\n      this.componentRelationships = this.getComponentRelationships(list);\n      this.extendRelationships = this.getExtendRelationships(list);\n      this.relationships = this.getRelationships(list);\n      this.cyRef.current.addNodes(this.allNodes);\n      this.cyRef.current.addRelationships(this.relationships, \"related\");\n      this.cyRef.current.addRelationships(this.componentRelationships, \"component\");\n      this.cyRef.current.addRelationships(this.extendRelationships, \"extends\");\n      await this.cyRef.current.doLayout(this.progressCallback);\n    }\n    this.updateProgress(100);\n  }\n  render() {\n    const {\n      isLoading,\n      progress,\n      filterIsOpen,\n      showRelationships,\n      showInheritances,\n      showComponents,\n      highlightingTerms,\n      modelDetailIsOpen,\n      modelDetailWidth,\n      filteringTerms,\n      layout\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mgv-wrap ${modelDetailIsOpen ? \"md-open\" : \"md-closed\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `model-graph gc-grid ${filterIsOpen ? \"open\" : \"closed\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gc-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(ModelGraphViewerRelationshipsToggle, {\n            setFirstItemRef: ref => this.relationshipsToggle = ref,\n            onKeyDown: () => null,\n            onRelationshipsToggleChange: this.onRelationshipsToggleChange,\n            onInheritancesToggleChange: this.onInheritancesToggleChange,\n            onComponentsToggleChange: this.onComponentsToggleChange,\n            showRelationships: showRelationships,\n            showInheritances: showInheritances,\n            showComponents: showComponents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gc-toolbar\",\n            children: /*#__PURE__*/_jsxDEV(ModelGraphViewerCommandBarComponent, {\n              className: \"gc-commandbar\",\n              buttonClass: \"gc-toolbarButtons\",\n              layouts: Object.keys(ModelGraphViewerCytoscapeLayouts),\n              layout: layout,\n              onLayoutChanged: this.onLayoutChanged\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModelGraphViewerCytoscapeComponent, {\n            onNodeClicked: this.onNodeClicked,\n            layout: layout,\n            onControlClicked: this.onControlClicked,\n            onNodeMouseEnter: this.onNodeMouseEnter,\n            onEdgeMouseEnter: this.onEdgeMouseEnter,\n            isHighlighting: highlightingTerms && highlightingTerms.length > 0,\n            highlightFilteredNodes: this.highlightFilteredNodes,\n            ref: this.cyRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gc-filter\",\n          children: /*#__PURE__*/_jsxDEV(ModelGraphViewerFilteringComponent, {\n            toggleFilter: this.toggleFilter,\n            onZoomIn: this.onZoomIn,\n            onZoomOut: this.onZoomOut,\n            onZoomToFit: this.onZoomToFit,\n            onAddHighlightingTerm: this.onAddHighlightingTerm,\n            onRemoveHighlightingTerm: this.onRemoveHighlightingTerm,\n            onAddFilteringTerm: this.onAddFilteringTerm,\n            onRemoveFilteringTerm: this.onRemoveFilteringTerm,\n            onUpdateFilteringTerm: this.onUpdateFilteringTerm,\n            onUpdateHighlightingTerm: this.onUpdateHighlightingTerm,\n            highlightingTerms: highlightingTerms,\n            filteringTerms: filteringTerms,\n            onSwitchFilters: this.onSwitchFilters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(LoaderComponent, {\n          message: `${Math.round(progress)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-detail\",\n        style: {\n          width: modelDetailIsOpen ? `${modelDetailWidth}%` : 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-toggle\",\n          onClick: this.toggleModelDetail,\n          tabIndex: \"0\",\n          onKeyDown: this.handleToggleModelDetailOnEnter,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"toggle-icon\",\n            iconName: modelDetailIsOpen ? \"DoubleChevronRight\" : \"DoubleChevronLeft\",\n            \"aria-label\": this.props.t(\"modelGraphViewerComponent.toggleIcon\"),\n            role: \"button\",\n            title: \"Expand/Collapse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModelGraphViewerModelDetailComponent, {\n          ref: this.modelDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this), modelDetailIsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dragable\",\n          onMouseDown: this.handleMouseDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default withTranslation(\"translation\", {\n  withRef: true\n})(ModelGraphViewerComponent);","map":{"version":3,"names":["React","ModelGraphViewerCytoscapeComponent","ModelGraphViewerCytoscapeLayouts","ModelGraphViewerFilteringComponent","ModelGraphViewerRelationshipsToggle","LoaderComponent","eventService","ModelService","ModelGraphViewerModelDetailComponent","Icon","withTranslation","DETAIL_MIN_WIDTH","ModelGraphViewerCommandBarComponent","jsxDEV","_jsxDEV","TAB_KEY_CODE","ENTER_KEY_CODE","ModelGraphViewerComponent","Component","constructor","props","initialize","isInitialized","subscribeModelIconUpdate","modelId","cyRef","current","updateModelIcon","subscribeDeleteModel","removeModel","subscribeCreateModel","addModels","subscribeConfigure","evt","type","config","modelService","clearNodes","setState","isLoading","retrieveModels","subscribeClearModelsData","subscribeModelsUpdate","subscribeFocusModel","model","emitNodeEvent","subscribeBlurModel","subscribeFocusRelationshipsToggle","e","preventDefault","relationshipsToggle","focus","subscribeSelectModel","item","selectedModel","highlightNodes","modelDetail","loadModel","key","clearHighlighting","clear","subscribeModelSelectionUpdatedInGraph","deselectModel","models","updateProgress","mapped","getModels","map","m","modelNodes","getNodes","componentRelationships","getComponentRelationships","extendRelationships","getExtendRelationships","relationships","getRelationships","allNodes","push","addNodes","addRelationships","doLayout","progressCallback","canDeselect","id","removeNodes","list","i","label","displayName","flatMap","components","filter","c","isExtended","sourceId","targetId","schema","relationshipName","name","relationshipId","rootBases","b","r","parentHasSameRelationship","bases","length","forEach","base","baseModel","find","hasSameRel","some","br","target","toggleFilter","filterIsOpen","state","onZoomIn","zoomIn","onZoomOut","zoomOut","onZoomToFit","zoomToFit","progress","_this$modelDetail$cur","onRelationshipsToggleChange","showRelationships","removeRelationships","onInheritancesToggleChange","showInheritances","onComponentsToggleChange","showComponents","onNodeMouseEnter","properties","getProperties","telemetries","getTelemetries","onEdgeMouseEnter","source","getModel","componentEdge","cr","componentModel","inheritanceEdge","er","onNodeUnhover","activePopper","document","querySelector","parentNode","removeChild","onNodeClicked","publishModelSelectionUpdatedInGraph","highlightingTerms","newTerms","t","isActive","onControlClicked","filteringTerms","showAllNodes","onAddFilteringTerm","term","filterNodes","onRemoveFilteringTerm","splice","text","indexOf","onAddHighlightingTerm","onRemoveHighlightingTerm","getNodeSuperTypes","node","superTypes","nodeRels","rel","n","getNodeSubTypes","subTypes","getNodeOutgoingRelationships","outgoingRels","relNode","activeTerms","termsHighlightingId","matchDtmi","termsHighlightingDisplayName","matchDisplayName","selectedModelKey","highlightedNodes","getFilteredNodes","highlight","termsFilteringId","termsFilteringDisplayName","filteredNodes","matchesId","matches","toLowerCase","includes","addSuperTypes","Set","addSubTypes","addOutgoingRelationships","matchesDisplayName","matchesSelectedNode","onSwitchFilters","toggleModelDetail","modelDetailIsOpen","onUpdateFilteringTerm","onUpdateHighlightingTerm","handleMouseMove","resizeEndX","resizeStartX","screenX","modelDetailWidth","window","innerWidth","handleMouseUp","removeEventListener","handleMouseDown","addEventListener","onLayoutChanged","layout","setLayout","onRelationshipsToggleKeyDown","keyCode","shiftKey","publishFocusModelViewer","handleToggleModelDetailOnEnter","createRef","commandRef","newProgress","getAllModels","exc","customMessage","publishError","render","className","children","setFirstItemRef","ref","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","buttonClass","layouts","Object","keys","isHighlighting","highlightFilteredNodes","message","Math","round","style","width","onClick","tabIndex","iconName","role","title","onMouseDown","withRef"],"sources":["/home/saharsh/digital-twins-explorer/client/src/components/ModelGraphViewerComponent/ModelGraphViewerComponent.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React from \"react\";\n\nimport { ModelGraphViewerCytoscapeComponent, ModelGraphViewerCytoscapeLayouts } from \"./ModelGraphViewerCytoscapeComponent/ModelGraphViewerCytoscapeComponent\";\nimport ModelGraphViewerFilteringComponent from \"./ModelGraphViewerFilteringComponent/ModelGraphViewerFilteringComponent\";\nimport ModelGraphViewerRelationshipsToggle from \"./ModelGraphViewerRelationshipsToggle/ModelGraphViewerRelationshipsToggle\";\nimport LoaderComponent from \"../LoaderComponent/LoaderComponent\";\nimport { eventService } from \"../../services/EventService\";\nimport { ModelService } from \"../../services/ModelService\";\n\nimport \"./ModelGraphViewerComponent.scss\";\nimport { ModelGraphViewerModelDetailComponent } from \"./ModelGraphViewerModelDetailComponent/ModelGraphViewerModelDetailComponent\";\nimport { Icon } from \"office-ui-fabric-react\";\nimport { withTranslation } from \"react-i18next\";\nimport { DETAIL_MIN_WIDTH } from \"../../services/Constants\";\nimport ModelGraphViewerCommandBarComponent from \"./ModelGraphViewerCommandBarComponent/ModelGraphViewerCommandBarComponent\";\n\nconst TAB_KEY_CODE = 9;\nconst ENTER_KEY_CODE = 13;\n\nclass ModelGraphViewerComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: 0,\n      isLoading: false,\n      filterIsOpen: false,\n      modelDetailIsOpen: false,\n      showRelationships: true,\n      showInheritances: true,\n      showComponents: true,\n      highlightingTerms: [],\n      filteringTerms: [],\n      modelDetailWidth: DETAIL_MIN_WIDTH,\n      layout: \"d3Force\",\n      selectedModel: null\n    };\n    this.cyRef = React.createRef();\n    this.relationshipsToggle = null;\n    this.commandRef = React.createRef();\n    this.modelDetail = React.createRef();\n    this.modelService = new ModelService();\n    this.resizeStartX = 0;\n    this.resizeEndX = 0;\n    this.isInitialized = false;\n  }\n\n  initialize = async () => {\n    if (!this.isInitialized) {\n      this.isInitialized = true;\n      eventService.subscribeModelIconUpdate(modelId => this.cyRef.current.updateModelIcon(modelId));\n      eventService.subscribeDeleteModel(this.removeModel);\n      eventService.subscribeCreateModel(this.addModels);\n      eventService.subscribeConfigure(evt => {\n        if (evt.type === \"end\" && evt.config) {\n          this.modelService = new ModelService();\n          this.cyRef.current.clearNodes();\n          this.setState({ isLoading: false });\n          this.retrieveModels();\n        }\n      });\n      eventService.subscribeClearModelsData(() => {\n        this.modelService = new ModelService();\n        this.cyRef.current.clearNodes();\n        this.setState({ isLoading: false });\n      });\n      eventService.subscribeModelsUpdate(() => {\n        this.modelService = new ModelService();\n        this.cyRef.current.clearNodes();\n        this.setState({ isLoading: false });\n        this.retrieveModels();\n      });\n      eventService.subscribeFocusModel(model => {\n        this.cyRef.current.emitNodeEvent(model, \"mouseover\");\n      });\n      eventService.subscribeBlurModel(model => {\n        this.cyRef.current.emitNodeEvent(model, \"mouseout\");\n      });\n      eventService.subscribeFocusRelationshipsToggle(e => {\n        e.preventDefault();\n        this.relationshipsToggle.focus();\n      });\n      eventService.subscribeSelectModel(item => {\n        if (item) {\n          this.setState({ selectedModel: item }, () => {\n            this.highlightNodes();\n            this.modelDetail.current.loadModel(item.key);\n          });\n        } else {\n          this.setState({ selectedModel: null }, () => {\n            this.cyRef.current.clearHighlighting();\n            this.modelDetail.current.clear();\n          });\n        }\n      });\n      eventService.subscribeModelSelectionUpdatedInGraph(this.deselectModel);\n      await this.retrieveModels();\n    }\n  }\n\n  updateProgress(newProgress) {\n    const { progress } = this.state;\n    if (newProgress >= 0 && newProgress > progress) {\n      this.setState({ isLoading: newProgress < 100, progress: newProgress >= 100 ? 0 : newProgress });\n    }\n  }\n\n  async retrieveModels() {\n    const { isLoading } = this.state;\n    if (isLoading) {\n      return;\n    }\n\n    this.updateProgress(0);\n\n    if (this.cyRef.current) {\n      let list = [];\n      try {\n        list = await this.modelService.getAllModels();\n      } catch (exc) {\n        exc.customMessage = \"Error fetching models\";\n        eventService.publishError(exc);\n      }\n      this.allNodes = this.getNodes(list);\n      this.componentRelationships = this.getComponentRelationships(list);\n      this.extendRelationships = this.getExtendRelationships(list);\n      this.relationships = this.getRelationships(list);\n      this.cyRef.current.addNodes(this.allNodes);\n      this.cyRef.current.addRelationships(this.relationships, \"related\");\n      this.cyRef.current.addRelationships(this.componentRelationships, \"component\");\n      this.cyRef.current.addRelationships(this.extendRelationships, \"extends\");\n      await this.cyRef.current.doLayout(this.progressCallback);\n    }\n\n    this.updateProgress(100);\n  }\n\n  addModels = async models => {\n    this.updateProgress(0);\n    await this.modelService.addModels(models);\n\n    const mapped = await this.modelService.getModels(models.map(m => m[\"@id\"]));\n    const modelNodes = this.getNodes(mapped);\n    const componentRelationships = this.getComponentRelationships(mapped);\n    const extendRelationships = this.getExtendRelationships(mapped);\n    const relationships = this.getRelationships(mapped);\n\n    this.allNodes.push(modelNodes);\n    this.componentRelationships.push(componentRelationships);\n    this.extendRelationships.push(extendRelationships);\n    this.relationships.push(relationships);\n\n    this.cyRef.current.addNodes(modelNodes);\n    this.cyRef.current.addRelationships(relationships, \"related\");\n    this.cyRef.current.addRelationships(componentRelationships, \"component\");\n    this.cyRef.current.addRelationships(extendRelationships, \"extends\");\n    await this.cyRef.current.doLayout(this.progressCallback);\n    this.setState({ isLoading: false });\n    this.updateProgress(100);\n    this.canDeselect = true;\n  }\n\n  removeModel = id => {\n    if (id) {\n      this.modelService.removeModel(id);\n      this.cyRef.current.removeNodes([ id ]);\n    }\n  }\n\n  getNodes = list =>\n    list.map(i => ({\n      id: i.id,\n      label: i.displayName ? i.displayName : i.id\n    }));\n\n  getComponentRelationships = list =>\n    list.flatMap(m =>\n      m.components.filter(c => !c.isExtended).map(c => ({\n        sourceId: m.id,\n        targetId: c.schema,\n        relationshipName: c.name,\n        relationshipId: c.name\n      }))\n    );\n\n  getExtendRelationships = list =>\n    list.flatMap(m =>\n      m.rootBases.map(b => ({\n        sourceId: m.id,\n        targetId: b,\n        relationshipName: \"Extends\",\n        relationshipId: \"extends\"\n      }))\n    );\n\n  getRelationships = list =>\n    list.flatMap(m =>\n      m.relationships\n        .filter(r => {\n          let parentHasSameRelationship = false;\n          if (m.bases && m.bases.length > 0) {\n            m.bases.forEach(base => {\n              const baseModel = list.find(i => i.id === base);\n              if (baseModel) {\n                const hasSameRel = baseModel.relationships.some(br => br.name === r.name);\n                if (hasSameRel) {\n                  parentHasSameRelationship = true;\n                }\n              }\n            });\n          }\n          return !parentHasSameRelationship;\n        })\n        .map(r => ({\n          sourceId: m.id,\n          targetId: r.target,\n          relationshipName: r.name,\n          relationshipId: r.name\n        }))\n    );\n\n  toggleFilter = () => {\n    const { filterIsOpen } = this.state;\n    this.setState({ filterIsOpen: !filterIsOpen });\n  }\n\n  onZoomIn = () => {\n    this.cyRef.current.zoomIn();\n  }\n\n  onZoomOut = () => {\n    this.cyRef.current.zoomOut();\n  }\n\n  onZoomToFit = () => {\n    this.cyRef.current.zoomToFit();\n  }\n\n  progressCallback = progress => {\n    this.updateProgress(progress * 100);\n  }\n\n  deselectModel = () => {\n    if (this.canDeselect) {\n      this.modelDetail.current?.clear();\n      const { selectedModel } = this.state;\n      if (selectedModel) {\n        this.cyRef.current.emitNodeEvent(selectedModel.key, \"unselect\");\n        this.cyRef.current.clearHighlighting();\n        this.setState({ selectedModel: null });\n      }\n    } else {\n      this.canDeselect = true;\n    }\n  }\n\n  onRelationshipsToggleChange = async () => {\n    const { showRelationships } = this.state;\n    if (!this.relationships) {\n      return;\n    }\n    this.updateProgress(0);\n    if (showRelationships) {\n      this.cyRef.current.removeRelationships(this.relationships);\n      await this.cyRef.current.doLayout(this.progressCallback);\n    } else {\n      this.cyRef.current.addRelationships(this.relationships, \"related\");\n      await this.cyRef.current.doLayout(this.progressCallback);\n    }\n    this.setState({ showRelationships: !showRelationships, isLoading: false });\n    this.updateProgress(100);\n  }\n\n  onInheritancesToggleChange = async () => {\n    const { showInheritances } = this.state;\n    if (!this.extendRelationships) {\n      return;\n    }\n    this.updateProgress(0);\n    if (showInheritances) {\n      this.cyRef.current.removeRelationships(this.extendRelationships);\n      await this.cyRef.current.doLayout(this.progressCallback);\n    } else {\n      this.cyRef.current.addRelationships(this.extendRelationships, \"extends\");\n      await this.cyRef.current.doLayout(this.progressCallback);\n    }\n    this.setState({ showInheritances: !showInheritances, isLoading: false });\n    this.updateProgress(100);\n  }\n\n  onComponentsToggleChange = async () => {\n    const { showComponents } = this.state;\n    if (!this.componentRelationships) {\n      return;\n    }\n    this.updateProgress(0);\n    if (showComponents) {\n      this.cyRef.current.removeRelationships(this.componentRelationships);\n      await this.cyRef.current.doLayout(this.progressCallback);\n    } else {\n      this.cyRef.current.addRelationships(this.componentRelationships, \"component\");\n      await this.cyRef.current.doLayout(this.progressCallback);\n    }\n    this.setState({ showComponents: !showComponents, isLoading: false });\n    this.updateProgress(100);\n  }\n\n  onNodeMouseEnter = async modelId => {\n    const properties = await this.modelService.getProperties(modelId);\n    const telemetries = await this.modelService.getTelemetries(modelId);\n    return {\n      properties,\n      telemetries\n    };\n  }\n\n  onEdgeMouseEnter = async (source, relationshipId) => {\n    const model = await this.modelService.getModel(source);\n\n    const componentEdge = this.componentRelationships.find(cr => cr.sourceId === source);\n    if (componentEdge) {\n      return {\n        name: model.components[0].displayName,\n        componentModel: model.components[0].schema\n      };\n    }\n\n    const inheritanceEdge = this.extendRelationships.find(er => er.sourceId === source);\n    if (inheritanceEdge) {\n      return {\n        baseModel: model.bases[0]\n      };\n    }\n\n    return model.relationships.find(r => r.name === relationshipId);\n  }\n\n  onNodeUnhover = () => {\n    const activePopper = document.querySelector(\"#cy-popper\");\n    if (activePopper) {\n      activePopper.parentNode.removeChild(activePopper);\n    }\n  }\n\n  onNodeClicked = modelId => {\n    this.modelDetail.current.loadModel(modelId);\n    this.canDeselect = false;\n    eventService.publishModelSelectionUpdatedInGraph(modelId);\n    const { highlightingTerms } = this.state;\n    if (highlightingTerms.length > 0) {\n      const newTerms = highlightingTerms.map(t => ({ ...t, isActive: false }));\n      this.setState({ highlightingTerms: newTerms });\n    }\n    this.setState({ selectedModel: modelId });\n  }\n\n  onControlClicked = () => {\n    this.modelDetail.current.clear();\n    this.canDeselect = false;\n    eventService.publishModelSelectionUpdatedInGraph();\n    const { highlightingTerms, filteringTerms } = this.state;\n    if (highlightingTerms.length > 0) {\n      const newTerms = highlightingTerms.map(t => ({ ...t, isActive: false }));\n      this.setState({ highlightingTerms: newTerms });\n    }\n    if (filteringTerms.length > 0) {\n      const newTerms = filteringTerms.map(t => ({ ...t, isActive: false }));\n      if (this.cyRef.current) {\n        this.cyRef.current.showAllNodes();\n      }\n      this.setState({ filteringTerms: newTerms });\n    }\n  }\n\n  onAddFilteringTerm = term => {\n    const { filteringTerms } = this.state;\n    filteringTerms.push(term);\n    this.setState({ filteringTerms }, () => {\n      this.filterNodes();\n    });\n  }\n\n  onRemoveFilteringTerm = term => {\n    const { filteringTerms } = this.state;\n    filteringTerms.splice(filteringTerms.map(t => t.text).indexOf(term.text), 1);\n    this.setState({ filteringTerms }, () => {\n      this.filterNodes();\n    });\n  }\n\n  onAddHighlightingTerm = term => {\n    const { highlightingTerms } = this.state;\n    highlightingTerms.push(term);\n    this.setState({ highlightingTerms }, () => {\n      this.highlightNodes();\n    });\n  }\n\n  onRemoveHighlightingTerm = term => {\n    const { highlightingTerms } = this.state;\n    highlightingTerms.splice(highlightingTerms.map(t => t.text).indexOf(term.text), 1);\n    this.setState({ highlightingTerms }, () => {\n      this.highlightNodes();\n    });\n  }\n\n  getNodeSuperTypes = node => {\n    const superTypes = [];\n    const nodeRels = this.extendRelationships.filter(rel => rel.sourceId === node.id);\n    if (nodeRels.length > 0) {\n      nodeRels.forEach(rel => {\n        superTypes.push(this.allNodes.find(n => n.id === rel.targetId));\n      });\n    }\n    return superTypes;\n  }\n\n  getNodeSubTypes = node => {\n    const subTypes = [];\n    const nodeRels = this.extendRelationships.filter(rel => rel.targetId === node.id);\n    if (nodeRels.length > 0) {\n      nodeRels.forEach(rel => {\n        subTypes.push(this.allNodes.find(n => n.id === rel.sourceId));\n      });\n    }\n    return subTypes;\n  }\n\n  getNodeOutgoingRelationships = node => {\n    const outgoingRels = [];\n    const nodeRels = this.relationships.filter(rel => rel.sourceId === node.id);\n    if (nodeRels.length > 0) {\n      nodeRels.forEach(rel => {\n        const relNode = this.allNodes.find(n => n.id === rel.targetId);\n        if (relNode) {\n          outgoingRels.push(this.allNodes.find(n => n.id === rel.targetId));\n        }\n      });\n    }\n    return outgoingRels;\n  }\n\n  highlightNodes = () => {\n    const { highlightingTerms, selectedModel } = this.state;\n    this.cyRef.current.clearHighlighting();\n    const activeTerms = highlightingTerms.filter(term => term.isActive);\n    const termsHighlightingId = activeTerms.filter(term => term.matchDtmi);\n    const termsHighlightingDisplayName = activeTerms.filter(term => term.matchDisplayName);\n    const selectedModelKey = selectedModel ? selectedModel.key : null;\n    const highlightedNodes = this.getFilteredNodes(termsHighlightingId, termsHighlightingDisplayName, selectedModelKey);\n    const highlight = termsHighlightingId.length > 0 || termsHighlightingDisplayName.length > 0 || selectedModelKey;\n    this.cyRef.current.highlightNodes(highlightedNodes, highlight);\n  }\n\n  filterNodes = () => {\n    const { filteringTerms } = this.state;\n    const activeTerms = filteringTerms.filter(term => term.isActive);\n    const termsFilteringId = activeTerms.filter(term => term.matchDtmi);\n    const termsFilteringDisplayName = activeTerms.filter(term => term.matchDisplayName);\n    const filteredNodes = this.getFilteredNodes(termsFilteringId, termsFilteringDisplayName);\n    if (this.cyRef.current) {\n      this.cyRef.current.showAllNodes();\n      this.cyRef.current.filterNodes(filteredNodes);\n    }\n  }\n\n  getFilteredNodes = (termsFilteringId, termsFilteringDisplayName, selectedModelKey) => {\n    if (!this.allNodes) {\n      eventService.publishModelSelectionUpdatedInGraph();\n      return [];\n    }\n\n    let superTypes = [];\n    let subTypes = [];\n    let outgoingRels = [];\n    let filteredNodes = this.allNodes.filter(node => {\n      if (termsFilteringId.length === 0 && termsFilteringDisplayName.length === 0 && !selectedModelKey) {\n        return true;\n      }\n      const matchesId = termsFilteringId.some(term => {\n        const matches = node.id.toLowerCase().includes(term.text.toLowerCase());\n        if (matches) {\n          if (term.addSuperTypes) {\n            superTypes = [ ...new Set([ ...superTypes, ...this.getNodeSuperTypes(node) ]) ];\n          }\n          if (term.addSubTypes) {\n            subTypes = [ ...new Set([ ...subTypes, ...this.getNodeSubTypes(node) ]) ];\n          }\n          if (term.addOutgoingRelationships) {\n            outgoingRels = [ ...new Set([ ...outgoingRels, ...this.getNodeOutgoingRelationships(node) ]) ];\n          }\n        }\n        return matches;\n      });\n      const matchesDisplayName = termsFilteringDisplayName.some(term => {\n        const matches = node.label.toLowerCase().includes(term.text.toLowerCase());\n        if (matches) {\n          if (term.addSuperTypes) {\n            superTypes = [ ...new Set([ ...superTypes, ...this.getNodeSuperTypes(node) ]) ];\n          }\n          if (term.addSubTypes) {\n            subTypes = [ ...new Set([ ...subTypes, ...this.getNodeSubTypes(node) ]) ];\n          }\n          if (term.addOutgoingRelationships) {\n            outgoingRels = [ ...new Set([ ...outgoingRels, ...this.getNodeOutgoingRelationships(node) ]) ];\n          }\n        }\n        return matches;\n      });\n      const matchesSelectedNode = selectedModelKey && node.id && node.id.toLowerCase() === selectedModelKey.toLowerCase();\n      return matchesId || matchesDisplayName || matchesSelectedNode;\n    });\n    if (superTypes.length > 0) {\n      filteredNodes = [ ...new Set([ ...filteredNodes, ...superTypes ]) ];\n    }\n    if (subTypes.length > 0) {\n      filteredNodes = [ ...new Set([ ...filteredNodes, ...subTypes ]) ];\n    }\n    if (outgoingRels.length > 0) {\n      filteredNodes = [ ...new Set([ ...filteredNodes, ...outgoingRels ]) ];\n    }\n    return filteredNodes;\n  }\n\n  onSwitchFilters = e => {\n    if (e.key.includes(\"filter\")) {\n      if (this.cyRef.current) {\n        this.cyRef.current.clearHighlighting();\n      }\n      this.filterNodes();\n    } else if (e.key.includes(\"highlight\")) {\n      if (this.cyRef.current) {\n        this.cyRef.current.showAllNodes();\n      }\n    }\n    this.highlightNodes();\n  }\n\n  toggleModelDetail = () => {\n    const { modelDetailIsOpen } = this.state;\n    this.setState({ modelDetailIsOpen: !modelDetailIsOpen });\n  }\n\n  onUpdateFilteringTerm = term => {\n    const { filteringTerms } = this.state;\n    filteringTerms[filteringTerms.map(t => t.text).indexOf(term.text)] = term;\n    this.setState({ filteringTerms }, () => {\n      this.filterNodes();\n    });\n  }\n\n  onUpdateHighlightingTerm = term => {\n    const { highlightingTerms } = this.state;\n    highlightingTerms[highlightingTerms.map(t => t.text).indexOf(term.text)] = term;\n    this.setState({ highlightingTerms }, () => {\n      this.highlightNodes();\n    });\n  }\n\n  handleMouseMove = e => {\n    this.resizeEndX = this.resizeStartX - e.screenX;\n    if (this.resizeEndX >= DETAIL_MIN_WIDTH) {\n      this.setState({\n        modelDetailWidth: DETAIL_MIN_WIDTH + ((this.resizeEndX * 100) / window.innerWidth)\n      });\n    }\n  };\n\n  handleMouseUp = e => {\n    e.preventDefault();\n    window.removeEventListener(\"mousemove\", this.handleMouseMove);\n    window.removeEventListener(\"mouseup\", this.handleMouseUp);\n  };\n\n  handleMouseDown = e => {\n    e.preventDefault();\n    if (this.resizeStartX === 0) {\n      this.resizeStartX = e.screenX;\n    }\n    window.addEventListener(\"mousemove\", this.handleMouseMove);\n    window.addEventListener(\"mouseup\", this.handleMouseUp);\n  };\n\n  onLayoutChanged = async layout => {\n    this.setState({ layout });\n    this.cyRef.current.setLayout(layout);\n    this.updateProgress(0);\n    await this.cyRef.current.doLayout(this.progressCallback);\n    this.updateProgress(100);\n  }\n\n  onRelationshipsToggleKeyDown = e => {\n    if (e.keyCode === TAB_KEY_CODE && e.shiftKey) {\n      eventService.publishFocusModelViewer();\n    }\n  }\n\n  handleToggleModelDetailOnEnter = e => {\n    if (e.keyCode === ENTER_KEY_CODE) {\n      this.toggleModelDetail();\n    }\n  }\n\n  render() {\n    const { isLoading, progress, filterIsOpen, showRelationships, showInheritances, showComponents, highlightingTerms, modelDetailIsOpen, modelDetailWidth, filteringTerms, layout } = this.state;\n    return (\n      <div className={`mgv-wrap ${modelDetailIsOpen ? \"md-open\" : \"md-closed\"}`}>\n        <div className={`model-graph gc-grid ${filterIsOpen ? \"open\" : \"closed\"}`}>\n          <div className=\"gc-wrap\">\n            <ModelGraphViewerRelationshipsToggle\n              setFirstItemRef={ref => this.relationshipsToggle = ref}\n              onKeyDown={() => null}\n              onRelationshipsToggleChange={this.onRelationshipsToggleChange}\n              onInheritancesToggleChange={this.onInheritancesToggleChange}\n              onComponentsToggleChange={this.onComponentsToggleChange}\n              showRelationships={showRelationships}\n              showInheritances={showInheritances}\n              showComponents={showComponents} />\n            <div className=\"gc-toolbar\">\n              <ModelGraphViewerCommandBarComponent\n                className=\"gc-commandbar\" buttonClass=\"gc-toolbarButtons\"\n                layouts={Object.keys(ModelGraphViewerCytoscapeLayouts)} layout={layout}\n                onLayoutChanged={this.onLayoutChanged} />\n            </div>\n            <ModelGraphViewerCytoscapeComponent\n              onNodeClicked={this.onNodeClicked}\n              layout={layout}\n              onControlClicked={this.onControlClicked}\n              onNodeMouseEnter={this.onNodeMouseEnter}\n              onEdgeMouseEnter={this.onEdgeMouseEnter}\n              isHighlighting={highlightingTerms && highlightingTerms.length > 0}\n              highlightFilteredNodes={this.highlightFilteredNodes}\n              ref={this.cyRef} />\n          </div>\n          <div className=\"gc-filter\">\n            <ModelGraphViewerFilteringComponent\n              toggleFilter={this.toggleFilter}\n              onZoomIn={this.onZoomIn}\n              onZoomOut={this.onZoomOut}\n              onZoomToFit={this.onZoomToFit}\n              onAddHighlightingTerm={this.onAddHighlightingTerm}\n              onRemoveHighlightingTerm={this.onRemoveHighlightingTerm}\n              onAddFilteringTerm={this.onAddFilteringTerm}\n              onRemoveFilteringTerm={this.onRemoveFilteringTerm}\n              onUpdateFilteringTerm={this.onUpdateFilteringTerm}\n              onUpdateHighlightingTerm={this.onUpdateHighlightingTerm}\n              highlightingTerms={highlightingTerms}\n              filteringTerms={filteringTerms}\n              onSwitchFilters={this.onSwitchFilters} />\n          </div>\n          {isLoading && (\n            <LoaderComponent\n              message={`${Math.round(progress)}%`} />\n          )}\n        </div>\n        <div className=\"model-detail\" style={{width: modelDetailIsOpen ? `${modelDetailWidth}%` : 0}}>\n          <div className=\"detail-toggle\" onClick={this.toggleModelDetail} tabIndex=\"0\" onKeyDown={this.handleToggleModelDetailOnEnter}>\n            <Icon\n              className=\"toggle-icon\"\n              iconName={modelDetailIsOpen ? \"DoubleChevronRight\" : \"DoubleChevronLeft\"}\n              aria-label={this.props.t(\"modelGraphViewerComponent.toggleIcon\")}\n              role=\"button\"\n              title=\"Expand/Collapse\" />\n          </div>\n          <ModelGraphViewerModelDetailComponent ref={this.modelDetail} />\n          {modelDetailIsOpen && (\n            <div\n              className=\"dragable\"\n              onMouseDown={this.handleMouseDown} />\n          )}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withTranslation(\"translation\", { withRef: true })(ModelGraphViewerComponent);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}