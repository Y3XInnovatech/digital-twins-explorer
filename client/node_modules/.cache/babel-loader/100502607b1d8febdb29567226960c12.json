{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '../../Utilities';\nimport { notifyHostChanged } from './Layer.notification';\nvar LayerHost = /** @class */function (_super) {\n  __extends(LayerHost, _super);\n  function LayerHost() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LayerHost.prototype.shouldComponentUpdate = function () {\n    return false;\n  };\n  LayerHost.prototype.componentDidMount = function () {\n    notifyHostChanged(this.props.id);\n  };\n  LayerHost.prototype.componentWillUnmount = function () {\n    notifyHostChanged(this.props.id);\n  };\n  LayerHost.prototype.render = function () {\n    return React.createElement(\"div\", __assign({}, this.props, {\n      className: css('ms-LayerHost', this.props.className)\n    }));\n  };\n  return LayerHost;\n}(React.Component);\nexport { LayerHost };","map":{"version":3,"sources":["components/Layer/LayerHost.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,iBAAiB;AAErC,SAAS,iBAAiB,QAAQ,sBAAsB;AAExD,IAAA,SAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA+B,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;EAA/B,SAAA,SAAA,CAAA,EAAA;;EAgBA;EAfS,SAAA,CAAA,SAAA,CAAA,qBAAqB,GAA5B,YAAA;IACE,OAAO,KAAK;EACd,CAAC;EAEM,SAAA,CAAA,SAAA,CAAA,iBAAiB,GAAxB,YAAA;IACE,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC;EACnC,CAAC;EAEM,SAAA,CAAA,SAAA,CAAA,oBAAoB,GAA3B,YAAA;IACE,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC;EACnC,CAAC;EAEM,SAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACE,OAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,CAAA,CAAA,EAAS,IAAI,CAAC,KAAK,EAAA;MAAE,SAAS,EAAE,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;IAAC,CAAA,CAAA,CAAI;EACtF,CAAC;EACH,OAAA,SAAC;AAAD,CAAC,CAhB8B,KAAK,CAAC,SAAS,CAAA","sourcesContent":["import * as React from 'react';\nimport { css } from '../../Utilities';\nimport { ILayerHostProps } from './LayerHost.types';\nimport { notifyHostChanged } from './Layer.notification';\n\nexport class LayerHost extends React.Component<ILayerHostProps> {\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentDidMount(): void {\n    notifyHostChanged(this.props.id!);\n  }\n\n  public componentWillUnmount(): void {\n    notifyHostChanged(this.props.id!);\n  }\n\n  public render(): JSX.Element {\n    return <div {...this.props} className={css('ms-LayerHost', this.props.className)} />;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}