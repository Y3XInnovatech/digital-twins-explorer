{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar rectangle_1 = require(\"./rectangle\");\nvar vpsc_1 = require(\"./vpsc\");\nvar shortestpaths_1 = require(\"./shortestpaths\");\nvar NodeWrapper = function () {\n  function NodeWrapper(id, rect, children) {\n    this.id = id;\n    this.rect = rect;\n    this.children = children;\n    this.leaf = typeof children === 'undefined' || children.length === 0;\n  }\n  return NodeWrapper;\n}();\nexports.NodeWrapper = NodeWrapper;\nvar Vert = function () {\n  function Vert(id, x, y, node, line) {\n    if (node === void 0) {\n      node = null;\n    }\n    if (line === void 0) {\n      line = null;\n    }\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.node = node;\n    this.line = line;\n  }\n  return Vert;\n}();\nexports.Vert = Vert;\nvar LongestCommonSubsequence = function () {\n  function LongestCommonSubsequence(s, t) {\n    this.s = s;\n    this.t = t;\n    var mf = LongestCommonSubsequence.findMatch(s, t);\n    var tr = t.slice(0).reverse();\n    var mr = LongestCommonSubsequence.findMatch(s, tr);\n    if (mf.length >= mr.length) {\n      this.length = mf.length;\n      this.si = mf.si;\n      this.ti = mf.ti;\n      this.reversed = false;\n    } else {\n      this.length = mr.length;\n      this.si = mr.si;\n      this.ti = t.length - mr.ti - mr.length;\n      this.reversed = true;\n    }\n  }\n  LongestCommonSubsequence.findMatch = function (s, t) {\n    var m = s.length;\n    var n = t.length;\n    var match = {\n      length: 0,\n      si: -1,\n      ti: -1\n    };\n    var l = new Array(m);\n    for (var i = 0; i < m; i++) {\n      l[i] = new Array(n);\n      for (var j = 0; j < n; j++) if (s[i] === t[j]) {\n        var v = l[i][j] = i === 0 || j === 0 ? 1 : l[i - 1][j - 1] + 1;\n        if (v > match.length) {\n          match.length = v;\n          match.si = i - v + 1;\n          match.ti = j - v + 1;\n        }\n        ;\n      } else l[i][j] = 0;\n    }\n    return match;\n  };\n  LongestCommonSubsequence.prototype.getSequence = function () {\n    return this.length >= 0 ? this.s.slice(this.si, this.si + this.length) : [];\n  };\n  return LongestCommonSubsequence;\n}();\nexports.LongestCommonSubsequence = LongestCommonSubsequence;\nvar GridRouter = function () {\n  function GridRouter(originalnodes, accessor, groupPadding) {\n    var _this = this;\n    if (groupPadding === void 0) {\n      groupPadding = 12;\n    }\n    this.originalnodes = originalnodes;\n    this.groupPadding = groupPadding;\n    this.leaves = null;\n    this.nodes = originalnodes.map(function (v, i) {\n      return new NodeWrapper(i, accessor.getBounds(v), accessor.getChildren(v));\n    });\n    this.leaves = this.nodes.filter(function (v) {\n      return v.leaf;\n    });\n    this.groups = this.nodes.filter(function (g) {\n      return !g.leaf;\n    });\n    this.cols = this.getGridLines('x');\n    this.rows = this.getGridLines('y');\n    this.groups.forEach(function (v) {\n      return v.children.forEach(function (c) {\n        return _this.nodes[c].parent = v;\n      });\n    });\n    this.root = {\n      children: []\n    };\n    this.nodes.forEach(function (v) {\n      if (typeof v.parent === 'undefined') {\n        v.parent = _this.root;\n        _this.root.children.push(v.id);\n      }\n      v.ports = [];\n    });\n    this.backToFront = this.nodes.slice(0);\n    this.backToFront.sort(function (x, y) {\n      return _this.getDepth(x) - _this.getDepth(y);\n    });\n    var frontToBackGroups = this.backToFront.slice(0).reverse().filter(function (g) {\n      return !g.leaf;\n    });\n    frontToBackGroups.forEach(function (v) {\n      var r = rectangle_1.Rectangle.empty();\n      v.children.forEach(function (c) {\n        return r = r.union(_this.nodes[c].rect);\n      });\n      v.rect = r.inflate(_this.groupPadding);\n    });\n    var colMids = this.midPoints(this.cols.map(function (r) {\n      return r.pos;\n    }));\n    var rowMids = this.midPoints(this.rows.map(function (r) {\n      return r.pos;\n    }));\n    var rowx = colMids[0],\n      rowX = colMids[colMids.length - 1];\n    var coly = rowMids[0],\n      colY = rowMids[rowMids.length - 1];\n    var hlines = this.rows.map(function (r) {\n      return {\n        x1: rowx,\n        x2: rowX,\n        y1: r.pos,\n        y2: r.pos\n      };\n    }).concat(rowMids.map(function (m) {\n      return {\n        x1: rowx,\n        x2: rowX,\n        y1: m,\n        y2: m\n      };\n    }));\n    var vlines = this.cols.map(function (c) {\n      return {\n        x1: c.pos,\n        x2: c.pos,\n        y1: coly,\n        y2: colY\n      };\n    }).concat(colMids.map(function (m) {\n      return {\n        x1: m,\n        x2: m,\n        y1: coly,\n        y2: colY\n      };\n    }));\n    var lines = hlines.concat(vlines);\n    lines.forEach(function (l) {\n      return l.verts = [];\n    });\n    this.verts = [];\n    this.edges = [];\n    hlines.forEach(function (h) {\n      return vlines.forEach(function (v) {\n        var p = new Vert(_this.verts.length, v.x1, h.y1);\n        h.verts.push(p);\n        v.verts.push(p);\n        _this.verts.push(p);\n        var i = _this.backToFront.length;\n        while (i-- > 0) {\n          var node = _this.backToFront[i],\n            r = node.rect;\n          var dx = Math.abs(p.x - r.cx()),\n            dy = Math.abs(p.y - r.cy());\n          if (dx < r.width() / 2 && dy < r.height() / 2) {\n            p.node = node;\n            break;\n          }\n        }\n      });\n    });\n    lines.forEach(function (l, li) {\n      _this.nodes.forEach(function (v, i) {\n        v.rect.lineIntersections(l.x1, l.y1, l.x2, l.y2).forEach(function (intersect, j) {\n          var p = new Vert(_this.verts.length, intersect.x, intersect.y, v, l);\n          _this.verts.push(p);\n          l.verts.push(p);\n          v.ports.push(p);\n        });\n      });\n      var isHoriz = Math.abs(l.y1 - l.y2) < 0.1;\n      var delta = function (a, b) {\n        return isHoriz ? b.x - a.x : b.y - a.y;\n      };\n      l.verts.sort(delta);\n      for (var i = 1; i < l.verts.length; i++) {\n        var u = l.verts[i - 1],\n          v = l.verts[i];\n        if (u.node && u.node === v.node && u.node.leaf) continue;\n        _this.edges.push({\n          source: u.id,\n          target: v.id,\n          length: Math.abs(delta(u, v))\n        });\n      }\n    });\n  }\n  GridRouter.prototype.avg = function (a) {\n    return a.reduce(function (x, y) {\n      return x + y;\n    }) / a.length;\n  };\n  GridRouter.prototype.getGridLines = function (axis) {\n    var columns = [];\n    var ls = this.leaves.slice(0, this.leaves.length);\n    while (ls.length > 0) {\n      var overlapping = ls.filter(function (v) {\n        return v.rect['overlap' + axis.toUpperCase()](ls[0].rect);\n      });\n      var col = {\n        nodes: overlapping,\n        pos: this.avg(overlapping.map(function (v) {\n          return v.rect['c' + axis]();\n        }))\n      };\n      columns.push(col);\n      col.nodes.forEach(function (v) {\n        return ls.splice(ls.indexOf(v), 1);\n      });\n    }\n    columns.sort(function (a, b) {\n      return a.pos - b.pos;\n    });\n    return columns;\n  };\n  GridRouter.prototype.getDepth = function (v) {\n    var depth = 0;\n    while (v.parent !== this.root) {\n      depth++;\n      v = v.parent;\n    }\n    return depth;\n  };\n  GridRouter.prototype.midPoints = function (a) {\n    var gap = a[1] - a[0];\n    var mids = [a[0] - gap / 2];\n    for (var i = 1; i < a.length; i++) {\n      mids.push((a[i] + a[i - 1]) / 2);\n    }\n    mids.push(a[a.length - 1] + gap / 2);\n    return mids;\n  };\n  GridRouter.prototype.findLineage = function (v) {\n    var lineage = [v];\n    do {\n      v = v.parent;\n      lineage.push(v);\n    } while (v !== this.root);\n    return lineage.reverse();\n  };\n  GridRouter.prototype.findAncestorPathBetween = function (a, b) {\n    var aa = this.findLineage(a),\n      ba = this.findLineage(b),\n      i = 0;\n    while (aa[i] === ba[i]) i++;\n    return {\n      commonAncestor: aa[i - 1],\n      lineages: aa.slice(i).concat(ba.slice(i))\n    };\n  };\n  GridRouter.prototype.siblingObstacles = function (a, b) {\n    var _this = this;\n    var path = this.findAncestorPathBetween(a, b);\n    var lineageLookup = {};\n    path.lineages.forEach(function (v) {\n      return lineageLookup[v.id] = {};\n    });\n    var obstacles = path.commonAncestor.children.filter(function (v) {\n      return !(v in lineageLookup);\n    });\n    path.lineages.filter(function (v) {\n      return v.parent !== path.commonAncestor;\n    }).forEach(function (v) {\n      return obstacles = obstacles.concat(v.parent.children.filter(function (c) {\n        return c !== v.id;\n      }));\n    });\n    return obstacles.map(function (v) {\n      return _this.nodes[v];\n    });\n  };\n  GridRouter.getSegmentSets = function (routes, x, y) {\n    var vsegments = [];\n    for (var ei = 0; ei < routes.length; ei++) {\n      var route = routes[ei];\n      for (var si = 0; si < route.length; si++) {\n        var s = route[si];\n        s.edgeid = ei;\n        s.i = si;\n        var sdx = s[1][x] - s[0][x];\n        if (Math.abs(sdx) < 0.1) {\n          vsegments.push(s);\n        }\n      }\n    }\n    vsegments.sort(function (a, b) {\n      return a[0][x] - b[0][x];\n    });\n    var vsegmentsets = [];\n    var segmentset = null;\n    for (var i = 0; i < vsegments.length; i++) {\n      var s = vsegments[i];\n      if (!segmentset || Math.abs(s[0][x] - segmentset.pos) > 0.1) {\n        segmentset = {\n          pos: s[0][x],\n          segments: []\n        };\n        vsegmentsets.push(segmentset);\n      }\n      segmentset.segments.push(s);\n    }\n    return vsegmentsets;\n  };\n  GridRouter.nudgeSegs = function (x, y, routes, segments, leftOf, gap) {\n    var n = segments.length;\n    if (n <= 1) return;\n    var vs = segments.map(function (s) {\n      return new vpsc_1.Variable(s[0][x]);\n    });\n    var cs = [];\n    for (var i = 0; i < n; i++) {\n      for (var j = 0; j < n; j++) {\n        if (i === j) continue;\n        var s1 = segments[i],\n          s2 = segments[j],\n          e1 = s1.edgeid,\n          e2 = s2.edgeid,\n          lind = -1,\n          rind = -1;\n        if (x == 'x') {\n          if (leftOf(e1, e2)) {\n            if (s1[0][y] < s1[1][y]) {\n              lind = j, rind = i;\n            } else {\n              lind = i, rind = j;\n            }\n          }\n        } else {\n          if (leftOf(e1, e2)) {\n            if (s1[0][y] < s1[1][y]) {\n              lind = i, rind = j;\n            } else {\n              lind = j, rind = i;\n            }\n          }\n        }\n        if (lind >= 0) {\n          cs.push(new vpsc_1.Constraint(vs[lind], vs[rind], gap));\n        }\n      }\n    }\n    var solver = new vpsc_1.Solver(vs, cs);\n    solver.solve();\n    vs.forEach(function (v, i) {\n      var s = segments[i];\n      var pos = v.position();\n      s[0][x] = s[1][x] = pos;\n      var route = routes[s.edgeid];\n      if (s.i > 0) route[s.i - 1][1][x] = pos;\n      if (s.i < route.length - 1) route[s.i + 1][0][x] = pos;\n    });\n  };\n  GridRouter.nudgeSegments = function (routes, x, y, leftOf, gap) {\n    var vsegmentsets = GridRouter.getSegmentSets(routes, x, y);\n    for (var i = 0; i < vsegmentsets.length; i++) {\n      var ss = vsegmentsets[i];\n      var events = [];\n      for (var j = 0; j < ss.segments.length; j++) {\n        var s = ss.segments[j];\n        events.push({\n          type: 0,\n          s: s,\n          pos: Math.min(s[0][y], s[1][y])\n        });\n        events.push({\n          type: 1,\n          s: s,\n          pos: Math.max(s[0][y], s[1][y])\n        });\n      }\n      events.sort(function (a, b) {\n        return a.pos - b.pos + a.type - b.type;\n      });\n      var open = [];\n      var openCount = 0;\n      events.forEach(function (e) {\n        if (e.type === 0) {\n          open.push(e.s);\n          openCount++;\n        } else {\n          openCount--;\n        }\n        if (openCount == 0) {\n          GridRouter.nudgeSegs(x, y, routes, open, leftOf, gap);\n          open = [];\n        }\n      });\n    }\n  };\n  GridRouter.prototype.routeEdges = function (edges, nudgeGap, source, target) {\n    var _this = this;\n    var routePaths = edges.map(function (e) {\n      return _this.route(source(e), target(e));\n    });\n    var order = GridRouter.orderEdges(routePaths);\n    var routes = routePaths.map(function (e) {\n      return GridRouter.makeSegments(e);\n    });\n    GridRouter.nudgeSegments(routes, 'x', 'y', order, nudgeGap);\n    GridRouter.nudgeSegments(routes, 'y', 'x', order, nudgeGap);\n    GridRouter.unreverseEdges(routes, routePaths);\n    return routes;\n  };\n  GridRouter.unreverseEdges = function (routes, routePaths) {\n    routes.forEach(function (segments, i) {\n      var path = routePaths[i];\n      if (path.reversed) {\n        segments.reverse();\n        segments.forEach(function (segment) {\n          segment.reverse();\n        });\n      }\n    });\n  };\n  GridRouter.angleBetween2Lines = function (line1, line2) {\n    var angle1 = Math.atan2(line1[0].y - line1[1].y, line1[0].x - line1[1].x);\n    var angle2 = Math.atan2(line2[0].y - line2[1].y, line2[0].x - line2[1].x);\n    var diff = angle1 - angle2;\n    if (diff > Math.PI || diff < -Math.PI) {\n      diff = angle2 - angle1;\n    }\n    return diff;\n  };\n  GridRouter.isLeft = function (a, b, c) {\n    return (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x) <= 0;\n  };\n  GridRouter.getOrder = function (pairs) {\n    var outgoing = {};\n    for (var i = 0; i < pairs.length; i++) {\n      var p = pairs[i];\n      if (typeof outgoing[p.l] === 'undefined') outgoing[p.l] = {};\n      outgoing[p.l][p.r] = true;\n    }\n    return function (l, r) {\n      return typeof outgoing[l] !== 'undefined' && outgoing[l][r];\n    };\n  };\n  GridRouter.orderEdges = function (edges) {\n    var edgeOrder = [];\n    for (var i = 0; i < edges.length - 1; i++) {\n      for (var j = i + 1; j < edges.length; j++) {\n        var e = edges[i],\n          f = edges[j],\n          lcs = new LongestCommonSubsequence(e, f);\n        var u, vi, vj;\n        if (lcs.length === 0) continue;\n        if (lcs.reversed) {\n          f.reverse();\n          f.reversed = true;\n          lcs = new LongestCommonSubsequence(e, f);\n        }\n        if ((lcs.si <= 0 || lcs.ti <= 0) && (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length)) {\n          edgeOrder.push({\n            l: i,\n            r: j\n          });\n          continue;\n        }\n        if (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length) {\n          u = e[lcs.si + 1];\n          vj = e[lcs.si - 1];\n          vi = f[lcs.ti - 1];\n        } else {\n          u = e[lcs.si + lcs.length - 2];\n          vi = e[lcs.si + lcs.length];\n          vj = f[lcs.ti + lcs.length];\n        }\n        if (GridRouter.isLeft(u, vi, vj)) {\n          edgeOrder.push({\n            l: j,\n            r: i\n          });\n        } else {\n          edgeOrder.push({\n            l: i,\n            r: j\n          });\n        }\n      }\n    }\n    return GridRouter.getOrder(edgeOrder);\n  };\n  GridRouter.makeSegments = function (path) {\n    function copyPoint(p) {\n      return {\n        x: p.x,\n        y: p.y\n      };\n    }\n    var isStraight = function (a, b, c) {\n      return Math.abs((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) < 0.001;\n    };\n    var segments = [];\n    var a = copyPoint(path[0]);\n    for (var i = 1; i < path.length; i++) {\n      var b = copyPoint(path[i]),\n        c = i < path.length - 1 ? path[i + 1] : null;\n      if (!c || !isStraight(a, b, c)) {\n        segments.push([a, b]);\n        a = b;\n      }\n    }\n    return segments;\n  };\n  GridRouter.prototype.route = function (s, t) {\n    var _this = this;\n    var source = this.nodes[s],\n      target = this.nodes[t];\n    this.obstacles = this.siblingObstacles(source, target);\n    var obstacleLookup = {};\n    this.obstacles.forEach(function (o) {\n      return obstacleLookup[o.id] = o;\n    });\n    this.passableEdges = this.edges.filter(function (e) {\n      var u = _this.verts[e.source],\n        v = _this.verts[e.target];\n      return !(u.node && u.node.id in obstacleLookup || v.node && v.node.id in obstacleLookup);\n    });\n    for (var i = 1; i < source.ports.length; i++) {\n      var u = source.ports[0].id;\n      var v = source.ports[i].id;\n      this.passableEdges.push({\n        source: u,\n        target: v,\n        length: 0\n      });\n    }\n    for (var i = 1; i < target.ports.length; i++) {\n      var u = target.ports[0].id;\n      var v = target.ports[i].id;\n      this.passableEdges.push({\n        source: u,\n        target: v,\n        length: 0\n      });\n    }\n    var getSource = function (e) {\n        return e.source;\n      },\n      getTarget = function (e) {\n        return e.target;\n      },\n      getLength = function (e) {\n        return e.length;\n      };\n    var shortestPathCalculator = new shortestpaths_1.Calculator(this.verts.length, this.passableEdges, getSource, getTarget, getLength);\n    var bendPenalty = function (u, v, w) {\n      var a = _this.verts[u],\n        b = _this.verts[v],\n        c = _this.verts[w];\n      var dx = Math.abs(c.x - a.x),\n        dy = Math.abs(c.y - a.y);\n      if (a.node === source && a.node === b.node || b.node === target && b.node === c.node) return 0;\n      return dx > 1 && dy > 1 ? 1000 : 0;\n    };\n    var shortestPath = shortestPathCalculator.PathFromNodeToNodeWithPrevCost(source.ports[0].id, target.ports[0].id, bendPenalty);\n    var pathPoints = shortestPath.reverse().map(function (vi) {\n      return _this.verts[vi];\n    });\n    pathPoints.push(this.nodes[target.id].ports[0]);\n    return pathPoints.filter(function (v, i) {\n      return !(i < pathPoints.length - 1 && pathPoints[i + 1].node === source && v.node === source || i > 0 && v.node === target && pathPoints[i - 1].node === target);\n    });\n  };\n  GridRouter.getRoutePath = function (route, cornerradius, arrowwidth, arrowheight) {\n    var result = {\n      routepath: 'M ' + route[0][0].x + ' ' + route[0][0].y + ' ',\n      arrowpath: ''\n    };\n    if (route.length > 1) {\n      for (var i = 0; i < route.length; i++) {\n        var li = route[i];\n        var x = li[1].x,\n          y = li[1].y;\n        var dx = x - li[0].x;\n        var dy = y - li[0].y;\n        if (i < route.length - 1) {\n          if (Math.abs(dx) > 0) {\n            x -= dx / Math.abs(dx) * cornerradius;\n          } else {\n            y -= dy / Math.abs(dy) * cornerradius;\n          }\n          result.routepath += 'L ' + x + ' ' + y + ' ';\n          var l = route[i + 1];\n          var x0 = l[0].x,\n            y0 = l[0].y;\n          var x1 = l[1].x;\n          var y1 = l[1].y;\n          dx = x1 - x0;\n          dy = y1 - y0;\n          var angle = GridRouter.angleBetween2Lines(li, l) < 0 ? 1 : 0;\n          var x2, y2;\n          if (Math.abs(dx) > 0) {\n            x2 = x0 + dx / Math.abs(dx) * cornerradius;\n            y2 = y0;\n          } else {\n            x2 = x0;\n            y2 = y0 + dy / Math.abs(dy) * cornerradius;\n          }\n          var cx = Math.abs(x2 - x);\n          var cy = Math.abs(y2 - y);\n          result.routepath += 'A ' + cx + ' ' + cy + ' 0 0 ' + angle + ' ' + x2 + ' ' + y2 + ' ';\n        } else {\n          var arrowtip = [x, y];\n          var arrowcorner1, arrowcorner2;\n          if (Math.abs(dx) > 0) {\n            x -= dx / Math.abs(dx) * arrowheight;\n            arrowcorner1 = [x, y + arrowwidth];\n            arrowcorner2 = [x, y - arrowwidth];\n          } else {\n            y -= dy / Math.abs(dy) * arrowheight;\n            arrowcorner1 = [x + arrowwidth, y];\n            arrowcorner2 = [x - arrowwidth, y];\n          }\n          result.routepath += 'L ' + x + ' ' + y + ' ';\n          if (arrowheight > 0) {\n            result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1] + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\n          }\n        }\n      }\n    } else {\n      var li = route[0];\n      var x = li[1].x,\n        y = li[1].y;\n      var dx = x - li[0].x;\n      var dy = y - li[0].y;\n      var arrowtip = [x, y];\n      var arrowcorner1, arrowcorner2;\n      if (Math.abs(dx) > 0) {\n        x -= dx / Math.abs(dx) * arrowheight;\n        arrowcorner1 = [x, y + arrowwidth];\n        arrowcorner2 = [x, y - arrowwidth];\n      } else {\n        y -= dy / Math.abs(dy) * arrowheight;\n        arrowcorner1 = [x + arrowwidth, y];\n        arrowcorner2 = [x - arrowwidth, y];\n      }\n      result.routepath += 'L ' + x + ' ' + y + ' ';\n      if (arrowheight > 0) {\n        result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1] + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\n      }\n    }\n    return result;\n  };\n  return GridRouter;\n}();\nexports.GridRouter = GridRouter;","map":{"version":3,"sources":["../../WebCola/src/gridrouter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar rectangle_1 = require(\"./rectangle\");\r\nvar vpsc_1 = require(\"./vpsc\");\r\nvar shortestpaths_1 = require(\"./shortestpaths\");\r\nvar NodeWrapper = (function () {\r\n    function NodeWrapper(id, rect, children) {\r\n        this.id = id;\r\n        this.rect = rect;\r\n        this.children = children;\r\n        this.leaf = typeof children === 'undefined' || children.length === 0;\r\n    }\r\n    return NodeWrapper;\r\n}());\r\nexports.NodeWrapper = NodeWrapper;\r\nvar Vert = (function () {\r\n    function Vert(id, x, y, node, line) {\r\n        if (node === void 0) { node = null; }\r\n        if (line === void 0) { line = null; }\r\n        this.id = id;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.node = node;\r\n        this.line = line;\r\n    }\r\n    return Vert;\r\n}());\r\nexports.Vert = Vert;\r\nvar LongestCommonSubsequence = (function () {\r\n    function LongestCommonSubsequence(s, t) {\r\n        this.s = s;\r\n        this.t = t;\r\n        var mf = LongestCommonSubsequence.findMatch(s, t);\r\n        var tr = t.slice(0).reverse();\r\n        var mr = LongestCommonSubsequence.findMatch(s, tr);\r\n        if (mf.length >= mr.length) {\r\n            this.length = mf.length;\r\n            this.si = mf.si;\r\n            this.ti = mf.ti;\r\n            this.reversed = false;\r\n        }\r\n        else {\r\n            this.length = mr.length;\r\n            this.si = mr.si;\r\n            this.ti = t.length - mr.ti - mr.length;\r\n            this.reversed = true;\r\n        }\r\n    }\r\n    LongestCommonSubsequence.findMatch = function (s, t) {\r\n        var m = s.length;\r\n        var n = t.length;\r\n        var match = { length: 0, si: -1, ti: -1 };\r\n        var l = new Array(m);\r\n        for (var i = 0; i < m; i++) {\r\n            l[i] = new Array(n);\r\n            for (var j = 0; j < n; j++)\r\n                if (s[i] === t[j]) {\r\n                    var v = l[i][j] = (i === 0 || j === 0) ? 1 : l[i - 1][j - 1] + 1;\r\n                    if (v > match.length) {\r\n                        match.length = v;\r\n                        match.si = i - v + 1;\r\n                        match.ti = j - v + 1;\r\n                    }\r\n                    ;\r\n                }\r\n                else\r\n                    l[i][j] = 0;\r\n        }\r\n        return match;\r\n    };\r\n    LongestCommonSubsequence.prototype.getSequence = function () {\r\n        return this.length >= 0 ? this.s.slice(this.si, this.si + this.length) : [];\r\n    };\r\n    return LongestCommonSubsequence;\r\n}());\r\nexports.LongestCommonSubsequence = LongestCommonSubsequence;\r\nvar GridRouter = (function () {\r\n    function GridRouter(originalnodes, accessor, groupPadding) {\r\n        var _this = this;\r\n        if (groupPadding === void 0) { groupPadding = 12; }\r\n        this.originalnodes = originalnodes;\r\n        this.groupPadding = groupPadding;\r\n        this.leaves = null;\r\n        this.nodes = originalnodes.map(function (v, i) { return new NodeWrapper(i, accessor.getBounds(v), accessor.getChildren(v)); });\r\n        this.leaves = this.nodes.filter(function (v) { return v.leaf; });\r\n        this.groups = this.nodes.filter(function (g) { return !g.leaf; });\r\n        this.cols = this.getGridLines('x');\r\n        this.rows = this.getGridLines('y');\r\n        this.groups.forEach(function (v) {\r\n            return v.children.forEach(function (c) { return _this.nodes[c].parent = v; });\r\n        });\r\n        this.root = { children: [] };\r\n        this.nodes.forEach(function (v) {\r\n            if (typeof v.parent === 'undefined') {\r\n                v.parent = _this.root;\r\n                _this.root.children.push(v.id);\r\n            }\r\n            v.ports = [];\r\n        });\r\n        this.backToFront = this.nodes.slice(0);\r\n        this.backToFront.sort(function (x, y) { return _this.getDepth(x) - _this.getDepth(y); });\r\n        var frontToBackGroups = this.backToFront.slice(0).reverse().filter(function (g) { return !g.leaf; });\r\n        frontToBackGroups.forEach(function (v) {\r\n            var r = rectangle_1.Rectangle.empty();\r\n            v.children.forEach(function (c) { return r = r.union(_this.nodes[c].rect); });\r\n            v.rect = r.inflate(_this.groupPadding);\r\n        });\r\n        var colMids = this.midPoints(this.cols.map(function (r) { return r.pos; }));\r\n        var rowMids = this.midPoints(this.rows.map(function (r) { return r.pos; }));\r\n        var rowx = colMids[0], rowX = colMids[colMids.length - 1];\r\n        var coly = rowMids[0], colY = rowMids[rowMids.length - 1];\r\n        var hlines = this.rows.map(function (r) { return ({ x1: rowx, x2: rowX, y1: r.pos, y2: r.pos }); })\r\n            .concat(rowMids.map(function (m) { return ({ x1: rowx, x2: rowX, y1: m, y2: m }); }));\r\n        var vlines = this.cols.map(function (c) { return ({ x1: c.pos, x2: c.pos, y1: coly, y2: colY }); })\r\n            .concat(colMids.map(function (m) { return ({ x1: m, x2: m, y1: coly, y2: colY }); }));\r\n        var lines = hlines.concat(vlines);\r\n        lines.forEach(function (l) { return l.verts = []; });\r\n        this.verts = [];\r\n        this.edges = [];\r\n        hlines.forEach(function (h) {\r\n            return vlines.forEach(function (v) {\r\n                var p = new Vert(_this.verts.length, v.x1, h.y1);\r\n                h.verts.push(p);\r\n                v.verts.push(p);\r\n                _this.verts.push(p);\r\n                var i = _this.backToFront.length;\r\n                while (i-- > 0) {\r\n                    var node = _this.backToFront[i], r = node.rect;\r\n                    var dx = Math.abs(p.x - r.cx()), dy = Math.abs(p.y - r.cy());\r\n                    if (dx < r.width() / 2 && dy < r.height() / 2) {\r\n                        p.node = node;\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        lines.forEach(function (l, li) {\r\n            _this.nodes.forEach(function (v, i) {\r\n                v.rect.lineIntersections(l.x1, l.y1, l.x2, l.y2).forEach(function (intersect, j) {\r\n                    var p = new Vert(_this.verts.length, intersect.x, intersect.y, v, l);\r\n                    _this.verts.push(p);\r\n                    l.verts.push(p);\r\n                    v.ports.push(p);\r\n                });\r\n            });\r\n            var isHoriz = Math.abs(l.y1 - l.y2) < 0.1;\r\n            var delta = function (a, b) { return isHoriz ? b.x - a.x : b.y - a.y; };\r\n            l.verts.sort(delta);\r\n            for (var i = 1; i < l.verts.length; i++) {\r\n                var u = l.verts[i - 1], v = l.verts[i];\r\n                if (u.node && u.node === v.node && u.node.leaf)\r\n                    continue;\r\n                _this.edges.push({ source: u.id, target: v.id, length: Math.abs(delta(u, v)) });\r\n            }\r\n        });\r\n    }\r\n    GridRouter.prototype.avg = function (a) { return a.reduce(function (x, y) { return x + y; }) / a.length; };\r\n    GridRouter.prototype.getGridLines = function (axis) {\r\n        var columns = [];\r\n        var ls = this.leaves.slice(0, this.leaves.length);\r\n        while (ls.length > 0) {\r\n            var overlapping = ls.filter(function (v) { return v.rect['overlap' + axis.toUpperCase()](ls[0].rect); });\r\n            var col = {\r\n                nodes: overlapping,\r\n                pos: this.avg(overlapping.map(function (v) { return v.rect['c' + axis](); }))\r\n            };\r\n            columns.push(col);\r\n            col.nodes.forEach(function (v) { return ls.splice(ls.indexOf(v), 1); });\r\n        }\r\n        columns.sort(function (a, b) { return a.pos - b.pos; });\r\n        return columns;\r\n    };\r\n    GridRouter.prototype.getDepth = function (v) {\r\n        var depth = 0;\r\n        while (v.parent !== this.root) {\r\n            depth++;\r\n            v = v.parent;\r\n        }\r\n        return depth;\r\n    };\r\n    GridRouter.prototype.midPoints = function (a) {\r\n        var gap = a[1] - a[0];\r\n        var mids = [a[0] - gap / 2];\r\n        for (var i = 1; i < a.length; i++) {\r\n            mids.push((a[i] + a[i - 1]) / 2);\r\n        }\r\n        mids.push(a[a.length - 1] + gap / 2);\r\n        return mids;\r\n    };\r\n    GridRouter.prototype.findLineage = function (v) {\r\n        var lineage = [v];\r\n        do {\r\n            v = v.parent;\r\n            lineage.push(v);\r\n        } while (v !== this.root);\r\n        return lineage.reverse();\r\n    };\r\n    GridRouter.prototype.findAncestorPathBetween = function (a, b) {\r\n        var aa = this.findLineage(a), ba = this.findLineage(b), i = 0;\r\n        while (aa[i] === ba[i])\r\n            i++;\r\n        return { commonAncestor: aa[i - 1], lineages: aa.slice(i).concat(ba.slice(i)) };\r\n    };\r\n    GridRouter.prototype.siblingObstacles = function (a, b) {\r\n        var _this = this;\r\n        var path = this.findAncestorPathBetween(a, b);\r\n        var lineageLookup = {};\r\n        path.lineages.forEach(function (v) { return lineageLookup[v.id] = {}; });\r\n        var obstacles = path.commonAncestor.children.filter(function (v) { return !(v in lineageLookup); });\r\n        path.lineages\r\n            .filter(function (v) { return v.parent !== path.commonAncestor; })\r\n            .forEach(function (v) { return obstacles = obstacles.concat(v.parent.children.filter(function (c) { return c !== v.id; })); });\r\n        return obstacles.map(function (v) { return _this.nodes[v]; });\r\n    };\r\n    GridRouter.getSegmentSets = function (routes, x, y) {\r\n        var vsegments = [];\r\n        for (var ei = 0; ei < routes.length; ei++) {\r\n            var route = routes[ei];\r\n            for (var si = 0; si < route.length; si++) {\r\n                var s = route[si];\r\n                s.edgeid = ei;\r\n                s.i = si;\r\n                var sdx = s[1][x] - s[0][x];\r\n                if (Math.abs(sdx) < 0.1) {\r\n                    vsegments.push(s);\r\n                }\r\n            }\r\n        }\r\n        vsegments.sort(function (a, b) { return a[0][x] - b[0][x]; });\r\n        var vsegmentsets = [];\r\n        var segmentset = null;\r\n        for (var i = 0; i < vsegments.length; i++) {\r\n            var s = vsegments[i];\r\n            if (!segmentset || Math.abs(s[0][x] - segmentset.pos) > 0.1) {\r\n                segmentset = { pos: s[0][x], segments: [] };\r\n                vsegmentsets.push(segmentset);\r\n            }\r\n            segmentset.segments.push(s);\r\n        }\r\n        return vsegmentsets;\r\n    };\r\n    GridRouter.nudgeSegs = function (x, y, routes, segments, leftOf, gap) {\r\n        var n = segments.length;\r\n        if (n <= 1)\r\n            return;\r\n        var vs = segments.map(function (s) { return new vpsc_1.Variable(s[0][x]); });\r\n        var cs = [];\r\n        for (var i = 0; i < n; i++) {\r\n            for (var j = 0; j < n; j++) {\r\n                if (i === j)\r\n                    continue;\r\n                var s1 = segments[i], s2 = segments[j], e1 = s1.edgeid, e2 = s2.edgeid, lind = -1, rind = -1;\r\n                if (x == 'x') {\r\n                    if (leftOf(e1, e2)) {\r\n                        if (s1[0][y] < s1[1][y]) {\r\n                            lind = j, rind = i;\r\n                        }\r\n                        else {\r\n                            lind = i, rind = j;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (leftOf(e1, e2)) {\r\n                        if (s1[0][y] < s1[1][y]) {\r\n                            lind = i, rind = j;\r\n                        }\r\n                        else {\r\n                            lind = j, rind = i;\r\n                        }\r\n                    }\r\n                }\r\n                if (lind >= 0) {\r\n                    cs.push(new vpsc_1.Constraint(vs[lind], vs[rind], gap));\r\n                }\r\n            }\r\n        }\r\n        var solver = new vpsc_1.Solver(vs, cs);\r\n        solver.solve();\r\n        vs.forEach(function (v, i) {\r\n            var s = segments[i];\r\n            var pos = v.position();\r\n            s[0][x] = s[1][x] = pos;\r\n            var route = routes[s.edgeid];\r\n            if (s.i > 0)\r\n                route[s.i - 1][1][x] = pos;\r\n            if (s.i < route.length - 1)\r\n                route[s.i + 1][0][x] = pos;\r\n        });\r\n    };\r\n    GridRouter.nudgeSegments = function (routes, x, y, leftOf, gap) {\r\n        var vsegmentsets = GridRouter.getSegmentSets(routes, x, y);\r\n        for (var i = 0; i < vsegmentsets.length; i++) {\r\n            var ss = vsegmentsets[i];\r\n            var events = [];\r\n            for (var j = 0; j < ss.segments.length; j++) {\r\n                var s = ss.segments[j];\r\n                events.push({ type: 0, s: s, pos: Math.min(s[0][y], s[1][y]) });\r\n                events.push({ type: 1, s: s, pos: Math.max(s[0][y], s[1][y]) });\r\n            }\r\n            events.sort(function (a, b) { return a.pos - b.pos + a.type - b.type; });\r\n            var open = [];\r\n            var openCount = 0;\r\n            events.forEach(function (e) {\r\n                if (e.type === 0) {\r\n                    open.push(e.s);\r\n                    openCount++;\r\n                }\r\n                else {\r\n                    openCount--;\r\n                }\r\n                if (openCount == 0) {\r\n                    GridRouter.nudgeSegs(x, y, routes, open, leftOf, gap);\r\n                    open = [];\r\n                }\r\n            });\r\n        }\r\n    };\r\n    GridRouter.prototype.routeEdges = function (edges, nudgeGap, source, target) {\r\n        var _this = this;\r\n        var routePaths = edges.map(function (e) { return _this.route(source(e), target(e)); });\r\n        var order = GridRouter.orderEdges(routePaths);\r\n        var routes = routePaths.map(function (e) { return GridRouter.makeSegments(e); });\r\n        GridRouter.nudgeSegments(routes, 'x', 'y', order, nudgeGap);\r\n        GridRouter.nudgeSegments(routes, 'y', 'x', order, nudgeGap);\r\n        GridRouter.unreverseEdges(routes, routePaths);\r\n        return routes;\r\n    };\r\n    GridRouter.unreverseEdges = function (routes, routePaths) {\r\n        routes.forEach(function (segments, i) {\r\n            var path = routePaths[i];\r\n            if (path.reversed) {\r\n                segments.reverse();\r\n                segments.forEach(function (segment) {\r\n                    segment.reverse();\r\n                });\r\n            }\r\n        });\r\n    };\r\n    GridRouter.angleBetween2Lines = function (line1, line2) {\r\n        var angle1 = Math.atan2(line1[0].y - line1[1].y, line1[0].x - line1[1].x);\r\n        var angle2 = Math.atan2(line2[0].y - line2[1].y, line2[0].x - line2[1].x);\r\n        var diff = angle1 - angle2;\r\n        if (diff > Math.PI || diff < -Math.PI) {\r\n            diff = angle2 - angle1;\r\n        }\r\n        return diff;\r\n    };\r\n    GridRouter.isLeft = function (a, b, c) {\r\n        return ((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) <= 0;\r\n    };\r\n    GridRouter.getOrder = function (pairs) {\r\n        var outgoing = {};\r\n        for (var i = 0; i < pairs.length; i++) {\r\n            var p = pairs[i];\r\n            if (typeof outgoing[p.l] === 'undefined')\r\n                outgoing[p.l] = {};\r\n            outgoing[p.l][p.r] = true;\r\n        }\r\n        return function (l, r) { return typeof outgoing[l] !== 'undefined' && outgoing[l][r]; };\r\n    };\r\n    GridRouter.orderEdges = function (edges) {\r\n        var edgeOrder = [];\r\n        for (var i = 0; i < edges.length - 1; i++) {\r\n            for (var j = i + 1; j < edges.length; j++) {\r\n                var e = edges[i], f = edges[j], lcs = new LongestCommonSubsequence(e, f);\r\n                var u, vi, vj;\r\n                if (lcs.length === 0)\r\n                    continue;\r\n                if (lcs.reversed) {\r\n                    f.reverse();\r\n                    f.reversed = true;\r\n                    lcs = new LongestCommonSubsequence(e, f);\r\n                }\r\n                if ((lcs.si <= 0 || lcs.ti <= 0) &&\r\n                    (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length)) {\r\n                    edgeOrder.push({ l: i, r: j });\r\n                    continue;\r\n                }\r\n                if (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length) {\r\n                    u = e[lcs.si + 1];\r\n                    vj = e[lcs.si - 1];\r\n                    vi = f[lcs.ti - 1];\r\n                }\r\n                else {\r\n                    u = e[lcs.si + lcs.length - 2];\r\n                    vi = e[lcs.si + lcs.length];\r\n                    vj = f[lcs.ti + lcs.length];\r\n                }\r\n                if (GridRouter.isLeft(u, vi, vj)) {\r\n                    edgeOrder.push({ l: j, r: i });\r\n                }\r\n                else {\r\n                    edgeOrder.push({ l: i, r: j });\r\n                }\r\n            }\r\n        }\r\n        return GridRouter.getOrder(edgeOrder);\r\n    };\r\n    GridRouter.makeSegments = function (path) {\r\n        function copyPoint(p) {\r\n            return { x: p.x, y: p.y };\r\n        }\r\n        var isStraight = function (a, b, c) { return Math.abs((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) < 0.001; };\r\n        var segments = [];\r\n        var a = copyPoint(path[0]);\r\n        for (var i = 1; i < path.length; i++) {\r\n            var b = copyPoint(path[i]), c = i < path.length - 1 ? path[i + 1] : null;\r\n            if (!c || !isStraight(a, b, c)) {\r\n                segments.push([a, b]);\r\n                a = b;\r\n            }\r\n        }\r\n        return segments;\r\n    };\r\n    GridRouter.prototype.route = function (s, t) {\r\n        var _this = this;\r\n        var source = this.nodes[s], target = this.nodes[t];\r\n        this.obstacles = this.siblingObstacles(source, target);\r\n        var obstacleLookup = {};\r\n        this.obstacles.forEach(function (o) { return obstacleLookup[o.id] = o; });\r\n        this.passableEdges = this.edges.filter(function (e) {\r\n            var u = _this.verts[e.source], v = _this.verts[e.target];\r\n            return !(u.node && u.node.id in obstacleLookup\r\n                || v.node && v.node.id in obstacleLookup);\r\n        });\r\n        for (var i = 1; i < source.ports.length; i++) {\r\n            var u = source.ports[0].id;\r\n            var v = source.ports[i].id;\r\n            this.passableEdges.push({\r\n                source: u,\r\n                target: v,\r\n                length: 0\r\n            });\r\n        }\r\n        for (var i = 1; i < target.ports.length; i++) {\r\n            var u = target.ports[0].id;\r\n            var v = target.ports[i].id;\r\n            this.passableEdges.push({\r\n                source: u,\r\n                target: v,\r\n                length: 0\r\n            });\r\n        }\r\n        var getSource = function (e) { return e.source; }, getTarget = function (e) { return e.target; }, getLength = function (e) { return e.length; };\r\n        var shortestPathCalculator = new shortestpaths_1.Calculator(this.verts.length, this.passableEdges, getSource, getTarget, getLength);\r\n        var bendPenalty = function (u, v, w) {\r\n            var a = _this.verts[u], b = _this.verts[v], c = _this.verts[w];\r\n            var dx = Math.abs(c.x - a.x), dy = Math.abs(c.y - a.y);\r\n            if (a.node === source && a.node === b.node || b.node === target && b.node === c.node)\r\n                return 0;\r\n            return dx > 1 && dy > 1 ? 1000 : 0;\r\n        };\r\n        var shortestPath = shortestPathCalculator.PathFromNodeToNodeWithPrevCost(source.ports[0].id, target.ports[0].id, bendPenalty);\r\n        var pathPoints = shortestPath.reverse().map(function (vi) { return _this.verts[vi]; });\r\n        pathPoints.push(this.nodes[target.id].ports[0]);\r\n        return pathPoints.filter(function (v, i) {\r\n            return !(i < pathPoints.length - 1 && pathPoints[i + 1].node === source && v.node === source\r\n                || i > 0 && v.node === target && pathPoints[i - 1].node === target);\r\n        });\r\n    };\r\n    GridRouter.getRoutePath = function (route, cornerradius, arrowwidth, arrowheight) {\r\n        var result = {\r\n            routepath: 'M ' + route[0][0].x + ' ' + route[0][0].y + ' ',\r\n            arrowpath: ''\r\n        };\r\n        if (route.length > 1) {\r\n            for (var i = 0; i < route.length; i++) {\r\n                var li = route[i];\r\n                var x = li[1].x, y = li[1].y;\r\n                var dx = x - li[0].x;\r\n                var dy = y - li[0].y;\r\n                if (i < route.length - 1) {\r\n                    if (Math.abs(dx) > 0) {\r\n                        x -= dx / Math.abs(dx) * cornerradius;\r\n                    }\r\n                    else {\r\n                        y -= dy / Math.abs(dy) * cornerradius;\r\n                    }\r\n                    result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                    var l = route[i + 1];\r\n                    var x0 = l[0].x, y0 = l[0].y;\r\n                    var x1 = l[1].x;\r\n                    var y1 = l[1].y;\r\n                    dx = x1 - x0;\r\n                    dy = y1 - y0;\r\n                    var angle = GridRouter.angleBetween2Lines(li, l) < 0 ? 1 : 0;\r\n                    var x2, y2;\r\n                    if (Math.abs(dx) > 0) {\r\n                        x2 = x0 + dx / Math.abs(dx) * cornerradius;\r\n                        y2 = y0;\r\n                    }\r\n                    else {\r\n                        x2 = x0;\r\n                        y2 = y0 + dy / Math.abs(dy) * cornerradius;\r\n                    }\r\n                    var cx = Math.abs(x2 - x);\r\n                    var cy = Math.abs(y2 - y);\r\n                    result.routepath += 'A ' + cx + ' ' + cy + ' 0 0 ' + angle + ' ' + x2 + ' ' + y2 + ' ';\r\n                }\r\n                else {\r\n                    var arrowtip = [x, y];\r\n                    var arrowcorner1, arrowcorner2;\r\n                    if (Math.abs(dx) > 0) {\r\n                        x -= dx / Math.abs(dx) * arrowheight;\r\n                        arrowcorner1 = [x, y + arrowwidth];\r\n                        arrowcorner2 = [x, y - arrowwidth];\r\n                    }\r\n                    else {\r\n                        y -= dy / Math.abs(dy) * arrowheight;\r\n                        arrowcorner1 = [x + arrowwidth, y];\r\n                        arrowcorner2 = [x - arrowwidth, y];\r\n                    }\r\n                    result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                    if (arrowheight > 0) {\r\n                        result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\r\n                            + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var li = route[0];\r\n            var x = li[1].x, y = li[1].y;\r\n            var dx = x - li[0].x;\r\n            var dy = y - li[0].y;\r\n            var arrowtip = [x, y];\r\n            var arrowcorner1, arrowcorner2;\r\n            if (Math.abs(dx) > 0) {\r\n                x -= dx / Math.abs(dx) * arrowheight;\r\n                arrowcorner1 = [x, y + arrowwidth];\r\n                arrowcorner2 = [x, y - arrowwidth];\r\n            }\r\n            else {\r\n                y -= dy / Math.abs(dy) * arrowheight;\r\n                arrowcorner1 = [x + arrowwidth, y];\r\n                arrowcorner2 = [x - arrowwidth, y];\r\n            }\r\n            result.routepath += 'L ' + x + ' ' + y + ' ';\r\n            if (arrowheight > 0) {\r\n                result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\r\n                    + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return GridRouter;\r\n}());\r\nexports.GridRouter = GridRouter;\r\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"script"}