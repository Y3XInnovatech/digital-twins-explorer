{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function generateClientRequestIdPolicy(requestIdHeaderName) {\n  if (requestIdHeaderName === void 0) {\n    requestIdHeaderName = \"x-ms-client-request-id\";\n  }\n  return {\n    create: function (nextPolicy, options) {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    }\n  };\n}\nvar GenerateClientRequestIdPolicy = /** @class */function (_super) {\n  __extends(GenerateClientRequestIdPolicy, _super);\n  function GenerateClientRequestIdPolicy(nextPolicy, options, _requestIdHeaderName) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n    _this._requestIdHeaderName = _requestIdHeaderName;\n    return _this;\n  }\n  GenerateClientRequestIdPolicy.prototype.sendRequest = function (request) {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, request.requestId);\n    }\n    return this._nextPolicy.sendRequest(request);\n  };\n  return GenerateClientRequestIdPolicy;\n}(BaseRequestPolicy);\nexport { GenerateClientRequestIdPolicy };","map":{"version":3,"sources":["../../../src/policies/generateClientRequestIdPolicy.ts"],"names":[],"mappings":"AAAA;AACA;;AAIA,SACE,iBAAiB,QAIZ,iBAAiB;AAExB,OAAM,SAAU,6BAA6B,CAC3C,mBAA8C,EAAA;EAA9C,IAAA,mBAAA,KAAA,KAAA,CAAA,EAAA;IAAA,mBAAA,GAAA,wBAA8C;EAAA;EAE9C,OAAO;IACL,MAAM,EAAE,SAAA,CAAC,UAAyB,EAAE,OAA6B,EAAA;MAC/D,OAAO,IAAI,6BAA6B,CAAC,UAAU,EAAE,OAAO,EAAE,mBAAmB,CAAC;IACpF;GACD;AACH;AAEA,IAAA,6BAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAmD,SAAA,CAAA,6BAAA,EAAA,MAAA,CAAA;EACjD,SAAA,6BAAA,CACE,UAAyB,EACzB,OAA6B,EACrB,oBAA4B,EAAA;IAHtC,IAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,UAAU,EAAE,OAAO,CAAC,IAAA,IAAA;IAFlB,KAAA,CAAA,oBAAoB,GAApB,oBAAoB;;EAG9B;EAEO,6BAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,UAAmB,OAAwB,EAAA;IACzC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE;MACxD,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,OAAO,CAAC,SAAS,CAAC;IAClE;IACD,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC;EAC9C,CAAC;EACH,OAAA,6BAAC;AAAD,CAAC,CAfkD,iBAAiB,CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function generateClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\"\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    }\n  };\n}\n\nexport class GenerateClientRequestIdPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private _requestIdHeaderName: string\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, request.requestId);\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}