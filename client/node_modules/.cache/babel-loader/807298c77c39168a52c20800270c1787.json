{"ast":null,"code":"var _a;\nimport { KeyCodes } from './KeyCodes';\nvar DirectionalKeyCodes = (_a = {}, _a[KeyCodes.up] = 1, _a[KeyCodes.down] = 1, _a[KeyCodes.left] = 1, _a[KeyCodes.right] = 1, _a[KeyCodes.home] = 1, _a[KeyCodes.end] = 1, _a[KeyCodes.tab] = 1, _a[KeyCodes.pageUp] = 1, _a[KeyCodes.pageDown] = 1, _a);\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\nexport function isDirectionalKeyCode(which) {\n  return !!DirectionalKeyCodes[which];\n}\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function addDirectionalKeyCode(which) {\n  DirectionalKeyCodes[which] = 1;\n}","map":{"version":3,"sources":["keyboard.ts"],"names":[],"mappings":";AAAA,SAAS,QAAQ,QAAQ,YAAY;AAErC,IAAM,mBAAmB,IAAA,EAAA,GAAA,CAAA,CAAA,EACvB,EAAA,CAAC,QAAQ,CAAC,EAAE,CAAA,GAAG,CAAC,EAChB,EAAA,CAAC,QAAQ,CAAC,IAAI,CAAA,GAAG,CAAC,EAClB,EAAA,CAAC,QAAQ,CAAC,IAAI,CAAA,GAAG,CAAC,EAClB,EAAA,CAAC,QAAQ,CAAC,KAAK,CAAA,GAAG,CAAC,EACnB,EAAA,CAAC,QAAQ,CAAC,IAAI,CAAA,GAAG,CAAC,EAClB,EAAA,CAAC,QAAQ,CAAC,GAAG,CAAA,GAAG,CAAC,EACjB,EAAA,CAAC,QAAQ,CAAC,GAAG,CAAA,GAAG,CAAC,EACjB,EAAA,CAAC,QAAQ,CAAC,MAAM,CAAA,GAAG,CAAC,EACpB,EAAA,CAAC,QAAQ,CAAC,QAAQ,CAAA,GAAG,CAAC,E,GACvB;AAED;;AAEG;AACH,OAAM,SAAU,oBAAoB,CAAC,KAAa,EAAA;EAChD,OAAO,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC;AACrC;AAEA;;;;AAIG;AACH,OAAM,SAAU,qBAAqB,CAAC,KAAa,EAAA;EACjD,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC;AAChC","sourcesContent":["import { KeyCodes } from './KeyCodes';\n\nconst DirectionalKeyCodes: { [key: number]: number } = {\n  [KeyCodes.up]: 1,\n  [KeyCodes.down]: 1,\n  [KeyCodes.left]: 1,\n  [KeyCodes.right]: 1,\n  [KeyCodes.home]: 1,\n  [KeyCodes.end]: 1,\n  [KeyCodes.tab]: 1,\n  [KeyCodes.pageUp]: 1,\n  [KeyCodes.pageDown]: 1,\n};\n\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\nexport function isDirectionalKeyCode(which: number): boolean {\n  return !!DirectionalKeyCodes[which];\n}\n\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function addDirectionalKeyCode(which: number): void {\n  DirectionalKeyCodes[which] = 1;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}