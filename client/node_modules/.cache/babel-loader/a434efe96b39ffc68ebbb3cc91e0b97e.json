{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar pqueue_1 = require(\"./pqueue\");\nvar Neighbour = function () {\n  function Neighbour(id, distance) {\n    this.id = id;\n    this.distance = distance;\n  }\n  return Neighbour;\n}();\nvar Node = function () {\n  function Node(id) {\n    this.id = id;\n    this.neighbours = [];\n  }\n  return Node;\n}();\nvar QueueEntry = function () {\n  function QueueEntry(node, prev, d) {\n    this.node = node;\n    this.prev = prev;\n    this.d = d;\n  }\n  return QueueEntry;\n}();\nvar Calculator = function () {\n  function Calculator(n, es, getSourceIndex, getTargetIndex, getLength) {\n    this.n = n;\n    this.es = es;\n    this.neighbours = new Array(this.n);\n    var i = this.n;\n    while (i--) this.neighbours[i] = new Node(i);\n    i = this.es.length;\n    while (i--) {\n      var e = this.es[i];\n      var u = getSourceIndex(e),\n        v = getTargetIndex(e);\n      var d = getLength(e);\n      this.neighbours[u].neighbours.push(new Neighbour(v, d));\n      this.neighbours[v].neighbours.push(new Neighbour(u, d));\n    }\n  }\n  Calculator.prototype.DistanceMatrix = function () {\n    var D = new Array(this.n);\n    for (var i = 0; i < this.n; ++i) {\n      D[i] = this.dijkstraNeighbours(i);\n    }\n    return D;\n  };\n  Calculator.prototype.DistancesFromNode = function (start) {\n    return this.dijkstraNeighbours(start);\n  };\n  Calculator.prototype.PathFromNodeToNode = function (start, end) {\n    return this.dijkstraNeighbours(start, end);\n  };\n  Calculator.prototype.PathFromNodeToNodeWithPrevCost = function (start, end, prevCost) {\n    var q = new pqueue_1.PriorityQueue(function (a, b) {\n        return a.d <= b.d;\n      }),\n      u = this.neighbours[start],\n      qu = new QueueEntry(u, null, 0),\n      visitedFrom = {};\n    q.push(qu);\n    while (!q.empty()) {\n      qu = q.pop();\n      u = qu.node;\n      if (u.id === end) {\n        break;\n      }\n      var i = u.neighbours.length;\n      while (i--) {\n        var neighbour = u.neighbours[i],\n          v = this.neighbours[neighbour.id];\n        if (qu.prev && v.id === qu.prev.node.id) continue;\n        var viduid = v.id + ',' + u.id;\n        if (viduid in visitedFrom && visitedFrom[viduid] <= qu.d) continue;\n        var cc = qu.prev ? prevCost(qu.prev.node.id, u.id, v.id) : 0,\n          t = qu.d + neighbour.distance + cc;\n        visitedFrom[viduid] = t;\n        q.push(new QueueEntry(v, qu, t));\n      }\n    }\n    var path = [];\n    while (qu.prev) {\n      qu = qu.prev;\n      path.push(qu.node.id);\n    }\n    return path;\n  };\n  Calculator.prototype.dijkstraNeighbours = function (start, dest) {\n    if (dest === void 0) {\n      dest = -1;\n    }\n    var q = new pqueue_1.PriorityQueue(function (a, b) {\n        return a.d <= b.d;\n      }),\n      i = this.neighbours.length,\n      d = new Array(i);\n    while (i--) {\n      var node = this.neighbours[i];\n      node.d = i === start ? 0 : Number.POSITIVE_INFINITY;\n      node.q = q.push(node);\n    }\n    while (!q.empty()) {\n      var u = q.pop();\n      d[u.id] = u.d;\n      if (u.id === dest) {\n        var path = [];\n        var v = u;\n        while (typeof v.prev !== 'undefined') {\n          path.push(v.prev.id);\n          v = v.prev;\n        }\n        return path;\n      }\n      i = u.neighbours.length;\n      while (i--) {\n        var neighbour = u.neighbours[i];\n        var v = this.neighbours[neighbour.id];\n        var t = u.d + neighbour.distance;\n        if (u.d !== Number.MAX_VALUE && v.d > t) {\n          v.d = t;\n          v.prev = u;\n          q.reduceKey(v.q, v, function (e, q) {\n            return e.q = q;\n          });\n        }\n      }\n    }\n    return d;\n  };\n  return Calculator;\n}();\nexports.Calculator = Calculator;","map":{"version":3,"sources":["../../WebCola/src/shortestpaths.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA,IAAA,SAAA,GAAA,YAAA;EACI,SAAA,SAAA,CAAmB,EAAU,EAAS,QAAgB,EAAA;IAAnC,IAAA,CAAA,EAAE,GAAF,EAAE;IAAiB,IAAA,CAAA,QAAQ,GAAR,QAAQ;EAAY;EAC9D,OAAA,SAAC;AAAD,CAAC,CAAA,CAAA;AAED,IAAA,IAAA,GAAA,YAAA;EACI,SAAA,IAAA,CAAmB,EAAU,EAAA;IAAV,IAAA,CAAA,EAAE,GAAF,EAAE;IACjB,IAAI,CAAC,UAAU,GAAG,EAAE;EACxB;EAKJ,OAAA,IAAC;AAAD,CAAC,CAAA,CAAA;AAED,IAAA,UAAA,GAAA,YAAA;EACI,SAAA,UAAA,CAAmB,IAAU,EAAS,IAAgB,EAAS,CAAS,EAAA;IAArD,IAAA,CAAA,IAAI,GAAJ,IAAI;IAAe,IAAA,CAAA,IAAI,GAAJ,IAAI;IAAqB,IAAA,CAAA,CAAC,GAAD,CAAC;EAAW;EAC/E,OAAA,UAAC;AAAD,CAAC,CAAA,CAAA;AASD,IAAA,UAAA,GAAA,YAAA;EAGI,SAAA,UAAA,CAAmB,CAAS,EAAS,EAAU,EAAE,cAAmC,EAAE,cAAmC,EAAE,SAA8B,EAAA;IAAtI,IAAA,CAAA,CAAC,GAAD,CAAC;IAAiB,IAAA,CAAA,EAAE,GAAF,EAAE;IACnC,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IACnC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;IAAE,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;IAE5D,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM;IAAE,OAAO,CAAC,EAAE,EAAE;MAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;MAClB,IAAI,CAAC,GAAW,cAAc,CAAC,CAAC,CAAC;QAAE,CAAC,GAAW,cAAc,CAAC,CAAC,CAAC;MAChE,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;MACpB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACvD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1D;EACL;EAUA,UAAA,CAAA,SAAA,CAAA,cAAc,GAAd,YAAA;IACI,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC7B,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACpC;IACD,OAAO,CAAC;EACZ,CAAC;EAQD,UAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,UAAkB,KAAa,EAAA;IAC3B,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;EACzC,CAAC;EAED,UAAA,CAAA,SAAA,CAAA,kBAAkB,GAAlB,UAAmB,KAAa,EAAE,GAAW,EAAA;IACzC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,GAAG,CAAC;EAC9C,CAAC;EAKD,UAAA,CAAA,SAAA,CAAA,8BAA8B,GAA9B,UACI,KAAa,EACb,GAAW,EACX,QAA8C,EAAA;IAE9C,IAAI,CAAC,GAAG,IAAI,QAAA,CAAA,aAAa,CAAa,UAAC,CAAC,EAAE,CAAC,EAAA;QAAK,OAAA,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;MAAV,CAAU,CAAC;MACvD,CAAC,GAAS,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;MAChC,EAAE,GAAe,IAAI,UAAU,CAAC,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC;MACzC,WAAW,GAAG,CAAA,CAAE;IACpB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;IACV,OAAM,CAAC,CAAC,CAAC,KAAK,CAAA,CAAE,EAAE;MACd,EAAE,GAAG,CAAC,CAAC,GAAG,CAAA,CAAE;MACZ,CAAC,GAAG,EAAE,CAAC,IAAI;MACX,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE;QACd;MACH;MACD,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM;MAAE,OAAO,CAAC,EAAE,EAAE;QACrC,IAAI,SAAS,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;UAC3B,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;QAGrC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;QAIzC,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE;QAC9B,IAAG,MAAM,IAAI,WAAW,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EACnD;QAEJ,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;UACxD,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,GAAG,EAAE;QAGtC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC;QACvB,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;MACnC;IACJ;IACD,IAAI,IAAI,GAAY,EAAE;IACtB,OAAO,EAAE,CAAC,IAAI,EAAE;MACZ,EAAE,GAAG,EAAE,CAAC,IAAI;MACZ,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;IACxB;IACD,OAAO,IAAI;EACf,CAAC;EAEO,UAAA,CAAA,SAAA,CAAA,kBAAkB,GAA1B,UAA2B,KAAa,EAAE,IAAiB,EAAA;IAAjB,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA;MAAA,IAAA,GAAA,CAAgB,CAAC;IAAA;IACvD,IAAI,CAAC,GAAG,IAAI,QAAA,CAAA,aAAa,CAAO,UAAC,CAAC,EAAE,CAAC,EAAA;QAAK,OAAA,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;MAAV,CAAU,CAAC;MACjD,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM;MAC1B,CAAC,GAAa,IAAI,KAAK,CAAC,CAAC,CAAC;IAC9B,OAAO,CAAC,EAAE,EAAE;MACR,IAAI,IAAI,GAAS,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;MACnC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,iBAAiB;MACnD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IACxB;IACD,OAAO,CAAC,CAAC,CAAC,KAAK,CAAA,CAAE,EAAE;MAEf,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAA,CAAE;MACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;MACb,IAAI,CAAC,CAAC,EAAE,KAAK,IAAI,EAAE;QACf,IAAI,IAAI,GAAa,EAAE;QACvB,IAAI,CAAC,GAAG,CAAC;QACT,OAAO,OAAO,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE;UAClC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;UACpB,CAAC,GAAG,CAAC,CAAC,IAAI;QACb;QACD,OAAO,IAAI;MACd;MACD,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM;MAAE,OAAO,CAAC,EAAE,EAAE;QACjC,IAAI,SAAS,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ;QAChC,IAAI,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;UACrC,CAAC,CAAC,CAAC,GAAG,CAAC;UACP,CAAC,CAAC,IAAI,GAAG,CAAC;UACV,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,CAAC,EAAC,CAAC,EAAA;YAAG,OAAA,CAAC,CAAC,CAAC,GAAG,CAAC;UAAP,CAAO,CAAC;QACtC;MACJ;IACJ;IACD,OAAO,CAAC;EACZ,CAAC;EACL,OAAA,UAAC;AAAD,CAAC,CAAA,CAAA;AAjIY,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar pqueue_1 = require(\"./pqueue\");\r\nvar Neighbour = (function () {\r\n    function Neighbour(id, distance) {\r\n        this.id = id;\r\n        this.distance = distance;\r\n    }\r\n    return Neighbour;\r\n}());\r\nvar Node = (function () {\r\n    function Node(id) {\r\n        this.id = id;\r\n        this.neighbours = [];\r\n    }\r\n    return Node;\r\n}());\r\nvar QueueEntry = (function () {\r\n    function QueueEntry(node, prev, d) {\r\n        this.node = node;\r\n        this.prev = prev;\r\n        this.d = d;\r\n    }\r\n    return QueueEntry;\r\n}());\r\nvar Calculator = (function () {\r\n    function Calculator(n, es, getSourceIndex, getTargetIndex, getLength) {\r\n        this.n = n;\r\n        this.es = es;\r\n        this.neighbours = new Array(this.n);\r\n        var i = this.n;\r\n        while (i--)\r\n            this.neighbours[i] = new Node(i);\r\n        i = this.es.length;\r\n        while (i--) {\r\n            var e = this.es[i];\r\n            var u = getSourceIndex(e), v = getTargetIndex(e);\r\n            var d = getLength(e);\r\n            this.neighbours[u].neighbours.push(new Neighbour(v, d));\r\n            this.neighbours[v].neighbours.push(new Neighbour(u, d));\r\n        }\r\n    }\r\n    Calculator.prototype.DistanceMatrix = function () {\r\n        var D = new Array(this.n);\r\n        for (var i = 0; i < this.n; ++i) {\r\n            D[i] = this.dijkstraNeighbours(i);\r\n        }\r\n        return D;\r\n    };\r\n    Calculator.prototype.DistancesFromNode = function (start) {\r\n        return this.dijkstraNeighbours(start);\r\n    };\r\n    Calculator.prototype.PathFromNodeToNode = function (start, end) {\r\n        return this.dijkstraNeighbours(start, end);\r\n    };\r\n    Calculator.prototype.PathFromNodeToNodeWithPrevCost = function (start, end, prevCost) {\r\n        var q = new pqueue_1.PriorityQueue(function (a, b) { return a.d <= b.d; }), u = this.neighbours[start], qu = new QueueEntry(u, null, 0), visitedFrom = {};\r\n        q.push(qu);\r\n        while (!q.empty()) {\r\n            qu = q.pop();\r\n            u = qu.node;\r\n            if (u.id === end) {\r\n                break;\r\n            }\r\n            var i = u.neighbours.length;\r\n            while (i--) {\r\n                var neighbour = u.neighbours[i], v = this.neighbours[neighbour.id];\r\n                if (qu.prev && v.id === qu.prev.node.id)\r\n                    continue;\r\n                var viduid = v.id + ',' + u.id;\r\n                if (viduid in visitedFrom && visitedFrom[viduid] <= qu.d)\r\n                    continue;\r\n                var cc = qu.prev ? prevCost(qu.prev.node.id, u.id, v.id) : 0, t = qu.d + neighbour.distance + cc;\r\n                visitedFrom[viduid] = t;\r\n                q.push(new QueueEntry(v, qu, t));\r\n            }\r\n        }\r\n        var path = [];\r\n        while (qu.prev) {\r\n            qu = qu.prev;\r\n            path.push(qu.node.id);\r\n        }\r\n        return path;\r\n    };\r\n    Calculator.prototype.dijkstraNeighbours = function (start, dest) {\r\n        if (dest === void 0) { dest = -1; }\r\n        var q = new pqueue_1.PriorityQueue(function (a, b) { return a.d <= b.d; }), i = this.neighbours.length, d = new Array(i);\r\n        while (i--) {\r\n            var node = this.neighbours[i];\r\n            node.d = i === start ? 0 : Number.POSITIVE_INFINITY;\r\n            node.q = q.push(node);\r\n        }\r\n        while (!q.empty()) {\r\n            var u = q.pop();\r\n            d[u.id] = u.d;\r\n            if (u.id === dest) {\r\n                var path = [];\r\n                var v = u;\r\n                while (typeof v.prev !== 'undefined') {\r\n                    path.push(v.prev.id);\r\n                    v = v.prev;\r\n                }\r\n                return path;\r\n            }\r\n            i = u.neighbours.length;\r\n            while (i--) {\r\n                var neighbour = u.neighbours[i];\r\n                var v = this.neighbours[neighbour.id];\r\n                var t = u.d + neighbour.distance;\r\n                if (u.d !== Number.MAX_VALUE && v.d > t) {\r\n                    v.d = t;\r\n                    v.prev = u;\r\n                    q.reduceKey(v.q, v, function (e, q) { return e.q = q; });\r\n                }\r\n            }\r\n        }\r\n        return d;\r\n    };\r\n    return Calculator;\r\n}());\r\nexports.Calculator = Calculator;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvcnRlc3RwYXRocy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL1dlYkNvbGEvc3JjL3Nob3J0ZXN0cGF0aHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtQ0FBbUQ7QUFFbkQ7SUFDSSxtQkFBbUIsRUFBVSxFQUFTLFFBQWdCO1FBQW5DLE9BQUUsR0FBRixFQUFFLENBQVE7UUFBUyxhQUFRLEdBQVIsUUFBUSxDQUFRO0lBQUksQ0FBQztJQUMvRCxnQkFBQztBQUFELENBQUMsQUFGRCxJQUVDO0FBRUQ7SUFDSSxjQUFtQixFQUFVO1FBQVYsT0FBRSxHQUFGLEVBQUUsQ0FBUTtRQUN6QixJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBS0wsV0FBQztBQUFELENBQUMsQUFSRCxJQVFDO0FBRUQ7SUFDSSxvQkFBbUIsSUFBVSxFQUFTLElBQWdCLEVBQVMsQ0FBUztRQUFyRCxTQUFJLEdBQUosSUFBSSxDQUFNO1FBQVMsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUFTLE1BQUMsR0FBRCxDQUFDLENBQVE7SUFBRyxDQUFDO0lBQ2hGLGlCQUFDO0FBQUQsQ0FBQyxBQUZELElBRUM7QUFTRDtJQUdJLG9CQUFtQixDQUFTLEVBQVMsRUFBVSxFQUFFLGNBQW1DLEVBQUUsY0FBbUMsRUFBRSxTQUE4QjtRQUF0SSxNQUFDLEdBQUQsQ0FBQyxDQUFRO1FBQVMsT0FBRSxHQUFGLEVBQUUsQ0FBUTtRQUMzQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTdELENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFD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"]},"metadata":{},"sourceType":"script"}