{"ast":null,"code":"import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { CustomizerContext } from './CustomizerContext';\n/**\n * Hook to get Customizations settings from Customizations singleton or CustomizerContext.\n * It will trigger component state update on settings change observed.\n */\nexport function useCustomizationSettings(properties, scopeName) {\n  var forceUpdate = useForceUpdate();\n  var customizations = React.useContext(CustomizerContext).customizations;\n  var inCustomizerContext = customizations.inCustomizerContext;\n  React.useEffect(function () {\n    if (!inCustomizerContext) {\n      Customizations.observe(forceUpdate);\n    }\n    return function () {\n      if (!inCustomizerContext) {\n        Customizations.unobserve(forceUpdate);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- exclude forceUpdate\n  }, [inCustomizerContext]);\n  return Customizations.getSettings(properties, scopeName, customizations);\n}\nfunction useForceUpdate() {\n  var _a = React.useState(0),\n    setValue = _a[1];\n  return function () {\n    return setValue(function (value) {\n      return ++value;\n    });\n  };\n}","map":{"version":3,"sources":["customizations/useCustomizationSettings.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAoB,cAAc,QAAQ,kBAAkB;AAC5D,SAAS,iBAAiB,QAAQ,qBAAqB;AAEvD;;;AAGG;AACH,OAAM,SAAU,wBAAwB,CAAC,UAAoB,EAAE,SAAkB,EAAA;EAC/E,IAAM,WAAW,GAAG,cAAc,CAAA,CAAE;EAC5B,IAAA,cAAA,GAAA,KAAA,CAAA,UAAA,CAAA,iBAAA,CAAA,CAAA,cAAc;EACd,IAAA,mBAAA,GAAA,cAAA,CAAA,mBAAmB;EAC3B,KAAK,CAAC,SAAS,CAAC,YAAA;IACd,IAAI,CAAC,mBAAmB,EAAE;MACxB,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC;IACpC;IACD,OAAO,YAAA;MACL,IAAI,CAAC,mBAAmB,EAAE;QACxB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;MACtC;IACH,CAAC;IACD;EACF,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC;EAEzB,OAAO,cAAc,CAAC,WAAW,CAAC,UAAU,EAAE,SAAS,EAAE,cAAc,CAAC;AAC1E;AAEA,SAAS,cAAc,CAAA,EAAA;EACf,IAAA,EAAA,GAAA,KAAA,CAAA,QAAA,CAAA,CAAA,CAAgC;IAA7B,QAAA,GAAA,EAAA,CAAA,CAAA,CAA6B;EACtC,OAAO,YAAA;IAAM,OAAA,QAAQ,CAAC,UAAA,KAAK,EAAA;MAAI,OAAA,EAAE,KAAK;IAAP,CAAO,CAAC;EAA1B,CAA0B;AACzC","sourcesContent":["import * as React from 'react';\nimport { ISettings, Customizations } from './Customizations';\nimport { CustomizerContext } from './CustomizerContext';\n\n/**\n * Hook to get Customizations settings from Customizations singleton or CustomizerContext.\n * It will trigger component state update on settings change observed.\n */\nexport function useCustomizationSettings(properties: string[], scopeName?: string): ISettings {\n  const forceUpdate = useForceUpdate();\n  const { customizations } = React.useContext(CustomizerContext);\n  const { inCustomizerContext } = customizations;\n  React.useEffect(() => {\n    if (!inCustomizerContext) {\n      Customizations.observe(forceUpdate);\n    }\n    return () => {\n      if (!inCustomizerContext) {\n        Customizations.unobserve(forceUpdate);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- exclude forceUpdate\n  }, [inCustomizerContext]);\n\n  return Customizations.getSettings(properties, scopeName, customizations);\n}\n\nfunction useForceUpdate() {\n  const [, setValue] = React.useState(0);\n  return () => setValue(value => ++value);\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}