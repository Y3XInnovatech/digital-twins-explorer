{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar PowerEdge = function () {\n  function PowerEdge(source, target, type) {\n    this.source = source;\n    this.target = target;\n    this.type = type;\n  }\n  return PowerEdge;\n}();\nexports.PowerEdge = PowerEdge;\nvar Configuration = function () {\n  function Configuration(n, edges, linkAccessor, rootGroup) {\n    var _this = this;\n    this.linkAccessor = linkAccessor;\n    this.modules = new Array(n);\n    this.roots = [];\n    if (rootGroup) {\n      this.initModulesFromGroup(rootGroup);\n    } else {\n      this.roots.push(new ModuleSet());\n      for (var i = 0; i < n; ++i) this.roots[0].add(this.modules[i] = new Module(i));\n    }\n    this.R = edges.length;\n    edges.forEach(function (e) {\n      var s = _this.modules[linkAccessor.getSourceIndex(e)],\n        t = _this.modules[linkAccessor.getTargetIndex(e)],\n        type = linkAccessor.getType(e);\n      s.outgoing.add(type, t);\n      t.incoming.add(type, s);\n    });\n  }\n  Configuration.prototype.initModulesFromGroup = function (group) {\n    var moduleSet = new ModuleSet();\n    this.roots.push(moduleSet);\n    for (var i = 0; i < group.leaves.length; ++i) {\n      var node = group.leaves[i];\n      var module = new Module(node.id);\n      this.modules[node.id] = module;\n      moduleSet.add(module);\n    }\n    if (group.groups) {\n      for (var j = 0; j < group.groups.length; ++j) {\n        var child = group.groups[j];\n        var definition = {};\n        for (var prop in child) if (prop !== \"leaves\" && prop !== \"groups\" && child.hasOwnProperty(prop)) definition[prop] = child[prop];\n        moduleSet.add(new Module(-1 - j, new LinkSets(), new LinkSets(), this.initModulesFromGroup(child), definition));\n      }\n    }\n    return moduleSet;\n  };\n  Configuration.prototype.merge = function (a, b, k) {\n    if (k === void 0) {\n      k = 0;\n    }\n    var inInt = a.incoming.intersection(b.incoming),\n      outInt = a.outgoing.intersection(b.outgoing);\n    var children = new ModuleSet();\n    children.add(a);\n    children.add(b);\n    var m = new Module(this.modules.length, outInt, inInt, children);\n    this.modules.push(m);\n    var update = function (s, i, o) {\n      s.forAll(function (ms, linktype) {\n        ms.forAll(function (n) {\n          var nls = n[i];\n          nls.add(linktype, m);\n          nls.remove(linktype, a);\n          nls.remove(linktype, b);\n          a[o].remove(linktype, n);\n          b[o].remove(linktype, n);\n        });\n      });\n    };\n    update(outInt, \"incoming\", \"outgoing\");\n    update(inInt, \"outgoing\", \"incoming\");\n    this.R -= inInt.count() + outInt.count();\n    this.roots[k].remove(a);\n    this.roots[k].remove(b);\n    this.roots[k].add(m);\n    return m;\n  };\n  Configuration.prototype.rootMerges = function (k) {\n    if (k === void 0) {\n      k = 0;\n    }\n    var rs = this.roots[k].modules();\n    var n = rs.length;\n    var merges = new Array(n * (n - 1));\n    var ctr = 0;\n    for (var i = 0, i_ = n - 1; i < i_; ++i) {\n      for (var j = i + 1; j < n; ++j) {\n        var a = rs[i],\n          b = rs[j];\n        merges[ctr] = {\n          id: ctr,\n          nEdges: this.nEdges(a, b),\n          a: a,\n          b: b\n        };\n        ctr++;\n      }\n    }\n    return merges;\n  };\n  Configuration.prototype.greedyMerge = function () {\n    for (var i = 0; i < this.roots.length; ++i) {\n      if (this.roots[i].modules().length < 2) continue;\n      var ms = this.rootMerges(i).sort(function (a, b) {\n        return a.nEdges == b.nEdges ? a.id - b.id : a.nEdges - b.nEdges;\n      });\n      var m = ms[0];\n      if (m.nEdges >= this.R) continue;\n      this.merge(m.a, m.b, i);\n      return true;\n    }\n  };\n  Configuration.prototype.nEdges = function (a, b) {\n    var inInt = a.incoming.intersection(b.incoming),\n      outInt = a.outgoing.intersection(b.outgoing);\n    return this.R - inInt.count() - outInt.count();\n  };\n  Configuration.prototype.getGroupHierarchy = function (retargetedEdges) {\n    var _this = this;\n    var groups = [];\n    var root = {};\n    toGroups(this.roots[0], root, groups);\n    var es = this.allEdges();\n    es.forEach(function (e) {\n      var a = _this.modules[e.source];\n      var b = _this.modules[e.target];\n      retargetedEdges.push(new PowerEdge(typeof a.gid === \"undefined\" ? e.source : groups[a.gid], typeof b.gid === \"undefined\" ? e.target : groups[b.gid], e.type));\n    });\n    return groups;\n  };\n  Configuration.prototype.allEdges = function () {\n    var es = [];\n    Configuration.getEdges(this.roots[0], es);\n    return es;\n  };\n  Configuration.getEdges = function (modules, es) {\n    modules.forAll(function (m) {\n      m.getEdges(es);\n      Configuration.getEdges(m.children, es);\n    });\n  };\n  return Configuration;\n}();\nexports.Configuration = Configuration;\nfunction toGroups(modules, group, groups) {\n  modules.forAll(function (m) {\n    if (m.isLeaf()) {\n      if (!group.leaves) group.leaves = [];\n      group.leaves.push(m.id);\n    } else {\n      var g = group;\n      m.gid = groups.length;\n      if (!m.isIsland() || m.isPredefined()) {\n        g = {\n          id: m.gid\n        };\n        if (m.isPredefined()) for (var prop in m.definition) g[prop] = m.definition[prop];\n        if (!group.groups) group.groups = [];\n        group.groups.push(m.gid);\n        groups.push(g);\n      }\n      toGroups(m.children, g, groups);\n    }\n  });\n}\nvar Module = function () {\n  function Module(id, outgoing, incoming, children, definition) {\n    if (outgoing === void 0) {\n      outgoing = new LinkSets();\n    }\n    if (incoming === void 0) {\n      incoming = new LinkSets();\n    }\n    if (children === void 0) {\n      children = new ModuleSet();\n    }\n    this.id = id;\n    this.outgoing = outgoing;\n    this.incoming = incoming;\n    this.children = children;\n    this.definition = definition;\n  }\n  Module.prototype.getEdges = function (es) {\n    var _this = this;\n    this.outgoing.forAll(function (ms, edgetype) {\n      ms.forAll(function (target) {\n        es.push(new PowerEdge(_this.id, target.id, edgetype));\n      });\n    });\n  };\n  Module.prototype.isLeaf = function () {\n    return this.children.count() === 0;\n  };\n  Module.prototype.isIsland = function () {\n    return this.outgoing.count() === 0 && this.incoming.count() === 0;\n  };\n  Module.prototype.isPredefined = function () {\n    return typeof this.definition !== \"undefined\";\n  };\n  return Module;\n}();\nexports.Module = Module;\nfunction intersection(m, n) {\n  var i = {};\n  for (var v in m) if (v in n) i[v] = m[v];\n  return i;\n}\nvar ModuleSet = function () {\n  function ModuleSet() {\n    this.table = {};\n  }\n  ModuleSet.prototype.count = function () {\n    return Object.keys(this.table).length;\n  };\n  ModuleSet.prototype.intersection = function (other) {\n    var result = new ModuleSet();\n    result.table = intersection(this.table, other.table);\n    return result;\n  };\n  ModuleSet.prototype.intersectionCount = function (other) {\n    return this.intersection(other).count();\n  };\n  ModuleSet.prototype.contains = function (id) {\n    return id in this.table;\n  };\n  ModuleSet.prototype.add = function (m) {\n    this.table[m.id] = m;\n  };\n  ModuleSet.prototype.remove = function (m) {\n    delete this.table[m.id];\n  };\n  ModuleSet.prototype.forAll = function (f) {\n    for (var mid in this.table) {\n      f(this.table[mid]);\n    }\n  };\n  ModuleSet.prototype.modules = function () {\n    var vs = [];\n    this.forAll(function (m) {\n      if (!m.isPredefined()) vs.push(m);\n    });\n    return vs;\n  };\n  return ModuleSet;\n}();\nexports.ModuleSet = ModuleSet;\nvar LinkSets = function () {\n  function LinkSets() {\n    this.sets = {};\n    this.n = 0;\n  }\n  LinkSets.prototype.count = function () {\n    return this.n;\n  };\n  LinkSets.prototype.contains = function (id) {\n    var result = false;\n    this.forAllModules(function (m) {\n      if (!result && m.id == id) {\n        result = true;\n      }\n    });\n    return result;\n  };\n  LinkSets.prototype.add = function (linktype, m) {\n    var s = linktype in this.sets ? this.sets[linktype] : this.sets[linktype] = new ModuleSet();\n    s.add(m);\n    ++this.n;\n  };\n  LinkSets.prototype.remove = function (linktype, m) {\n    var ms = this.sets[linktype];\n    ms.remove(m);\n    if (ms.count() === 0) {\n      delete this.sets[linktype];\n    }\n    --this.n;\n  };\n  LinkSets.prototype.forAll = function (f) {\n    for (var linktype in this.sets) {\n      f(this.sets[linktype], Number(linktype));\n    }\n  };\n  LinkSets.prototype.forAllModules = function (f) {\n    this.forAll(function (ms, lt) {\n      return ms.forAll(f);\n    });\n  };\n  LinkSets.prototype.intersection = function (other) {\n    var result = new LinkSets();\n    this.forAll(function (ms, lt) {\n      if (lt in other.sets) {\n        var i = ms.intersection(other.sets[lt]),\n          n = i.count();\n        if (n > 0) {\n          result.sets[lt] = i;\n          result.n += n;\n        }\n      }\n    });\n    return result;\n  };\n  return LinkSets;\n}();\nexports.LinkSets = LinkSets;\nfunction intersectionCount(m, n) {\n  return Object.keys(intersection(m, n)).length;\n}\nfunction getGroups(nodes, links, la, rootGroup) {\n  var n = nodes.length,\n    c = new Configuration(n, links, la, rootGroup);\n  while (c.greedyMerge());\n  var powerEdges = [];\n  var g = c.getGroupHierarchy(powerEdges);\n  powerEdges.forEach(function (e) {\n    var f = function (end) {\n      var g = e[end];\n      if (typeof g == \"number\") e[end] = nodes[g];\n    };\n    f(\"source\");\n    f(\"target\");\n  });\n  return {\n    groups: g,\n    powerEdges: powerEdges\n  };\n}\nexports.getGroups = getGroups;","map":{"version":3,"sources":["../../WebCola/src/powergraph.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PowerEdge = (function () {\r\n    function PowerEdge(source, target, type) {\r\n        this.source = source;\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    return PowerEdge;\r\n}());\r\nexports.PowerEdge = PowerEdge;\r\nvar Configuration = (function () {\r\n    function Configuration(n, edges, linkAccessor, rootGroup) {\r\n        var _this = this;\r\n        this.linkAccessor = linkAccessor;\r\n        this.modules = new Array(n);\r\n        this.roots = [];\r\n        if (rootGroup) {\r\n            this.initModulesFromGroup(rootGroup);\r\n        }\r\n        else {\r\n            this.roots.push(new ModuleSet());\r\n            for (var i = 0; i < n; ++i)\r\n                this.roots[0].add(this.modules[i] = new Module(i));\r\n        }\r\n        this.R = edges.length;\r\n        edges.forEach(function (e) {\r\n            var s = _this.modules[linkAccessor.getSourceIndex(e)], t = _this.modules[linkAccessor.getTargetIndex(e)], type = linkAccessor.getType(e);\r\n            s.outgoing.add(type, t);\r\n            t.incoming.add(type, s);\r\n        });\r\n    }\r\n    Configuration.prototype.initModulesFromGroup = function (group) {\r\n        var moduleSet = new ModuleSet();\r\n        this.roots.push(moduleSet);\r\n        for (var i = 0; i < group.leaves.length; ++i) {\r\n            var node = group.leaves[i];\r\n            var module = new Module(node.id);\r\n            this.modules[node.id] = module;\r\n            moduleSet.add(module);\r\n        }\r\n        if (group.groups) {\r\n            for (var j = 0; j < group.groups.length; ++j) {\r\n                var child = group.groups[j];\r\n                var definition = {};\r\n                for (var prop in child)\r\n                    if (prop !== \"leaves\" && prop !== \"groups\" && child.hasOwnProperty(prop))\r\n                        definition[prop] = child[prop];\r\n                moduleSet.add(new Module(-1 - j, new LinkSets(), new LinkSets(), this.initModulesFromGroup(child), definition));\r\n            }\r\n        }\r\n        return moduleSet;\r\n    };\r\n    Configuration.prototype.merge = function (a, b, k) {\r\n        if (k === void 0) { k = 0; }\r\n        var inInt = a.incoming.intersection(b.incoming), outInt = a.outgoing.intersection(b.outgoing);\r\n        var children = new ModuleSet();\r\n        children.add(a);\r\n        children.add(b);\r\n        var m = new Module(this.modules.length, outInt, inInt, children);\r\n        this.modules.push(m);\r\n        var update = function (s, i, o) {\r\n            s.forAll(function (ms, linktype) {\r\n                ms.forAll(function (n) {\r\n                    var nls = n[i];\r\n                    nls.add(linktype, m);\r\n                    nls.remove(linktype, a);\r\n                    nls.remove(linktype, b);\r\n                    a[o].remove(linktype, n);\r\n                    b[o].remove(linktype, n);\r\n                });\r\n            });\r\n        };\r\n        update(outInt, \"incoming\", \"outgoing\");\r\n        update(inInt, \"outgoing\", \"incoming\");\r\n        this.R -= inInt.count() + outInt.count();\r\n        this.roots[k].remove(a);\r\n        this.roots[k].remove(b);\r\n        this.roots[k].add(m);\r\n        return m;\r\n    };\r\n    Configuration.prototype.rootMerges = function (k) {\r\n        if (k === void 0) { k = 0; }\r\n        var rs = this.roots[k].modules();\r\n        var n = rs.length;\r\n        var merges = new Array(n * (n - 1));\r\n        var ctr = 0;\r\n        for (var i = 0, i_ = n - 1; i < i_; ++i) {\r\n            for (var j = i + 1; j < n; ++j) {\r\n                var a = rs[i], b = rs[j];\r\n                merges[ctr] = { id: ctr, nEdges: this.nEdges(a, b), a: a, b: b };\r\n                ctr++;\r\n            }\r\n        }\r\n        return merges;\r\n    };\r\n    Configuration.prototype.greedyMerge = function () {\r\n        for (var i = 0; i < this.roots.length; ++i) {\r\n            if (this.roots[i].modules().length < 2)\r\n                continue;\r\n            var ms = this.rootMerges(i).sort(function (a, b) { return a.nEdges == b.nEdges ? a.id - b.id : a.nEdges - b.nEdges; });\r\n            var m = ms[0];\r\n            if (m.nEdges >= this.R)\r\n                continue;\r\n            this.merge(m.a, m.b, i);\r\n            return true;\r\n        }\r\n    };\r\n    Configuration.prototype.nEdges = function (a, b) {\r\n        var inInt = a.incoming.intersection(b.incoming), outInt = a.outgoing.intersection(b.outgoing);\r\n        return this.R - inInt.count() - outInt.count();\r\n    };\r\n    Configuration.prototype.getGroupHierarchy = function (retargetedEdges) {\r\n        var _this = this;\r\n        var groups = [];\r\n        var root = {};\r\n        toGroups(this.roots[0], root, groups);\r\n        var es = this.allEdges();\r\n        es.forEach(function (e) {\r\n            var a = _this.modules[e.source];\r\n            var b = _this.modules[e.target];\r\n            retargetedEdges.push(new PowerEdge(typeof a.gid === \"undefined\" ? e.source : groups[a.gid], typeof b.gid === \"undefined\" ? e.target : groups[b.gid], e.type));\r\n        });\r\n        return groups;\r\n    };\r\n    Configuration.prototype.allEdges = function () {\r\n        var es = [];\r\n        Configuration.getEdges(this.roots[0], es);\r\n        return es;\r\n    };\r\n    Configuration.getEdges = function (modules, es) {\r\n        modules.forAll(function (m) {\r\n            m.getEdges(es);\r\n            Configuration.getEdges(m.children, es);\r\n        });\r\n    };\r\n    return Configuration;\r\n}());\r\nexports.Configuration = Configuration;\r\nfunction toGroups(modules, group, groups) {\r\n    modules.forAll(function (m) {\r\n        if (m.isLeaf()) {\r\n            if (!group.leaves)\r\n                group.leaves = [];\r\n            group.leaves.push(m.id);\r\n        }\r\n        else {\r\n            var g = group;\r\n            m.gid = groups.length;\r\n            if (!m.isIsland() || m.isPredefined()) {\r\n                g = { id: m.gid };\r\n                if (m.isPredefined())\r\n                    for (var prop in m.definition)\r\n                        g[prop] = m.definition[prop];\r\n                if (!group.groups)\r\n                    group.groups = [];\r\n                group.groups.push(m.gid);\r\n                groups.push(g);\r\n            }\r\n            toGroups(m.children, g, groups);\r\n        }\r\n    });\r\n}\r\nvar Module = (function () {\r\n    function Module(id, outgoing, incoming, children, definition) {\r\n        if (outgoing === void 0) { outgoing = new LinkSets(); }\r\n        if (incoming === void 0) { incoming = new LinkSets(); }\r\n        if (children === void 0) { children = new ModuleSet(); }\r\n        this.id = id;\r\n        this.outgoing = outgoing;\r\n        this.incoming = incoming;\r\n        this.children = children;\r\n        this.definition = definition;\r\n    }\r\n    Module.prototype.getEdges = function (es) {\r\n        var _this = this;\r\n        this.outgoing.forAll(function (ms, edgetype) {\r\n            ms.forAll(function (target) {\r\n                es.push(new PowerEdge(_this.id, target.id, edgetype));\r\n            });\r\n        });\r\n    };\r\n    Module.prototype.isLeaf = function () {\r\n        return this.children.count() === 0;\r\n    };\r\n    Module.prototype.isIsland = function () {\r\n        return this.outgoing.count() === 0 && this.incoming.count() === 0;\r\n    };\r\n    Module.prototype.isPredefined = function () {\r\n        return typeof this.definition !== \"undefined\";\r\n    };\r\n    return Module;\r\n}());\r\nexports.Module = Module;\r\nfunction intersection(m, n) {\r\n    var i = {};\r\n    for (var v in m)\r\n        if (v in n)\r\n            i[v] = m[v];\r\n    return i;\r\n}\r\nvar ModuleSet = (function () {\r\n    function ModuleSet() {\r\n        this.table = {};\r\n    }\r\n    ModuleSet.prototype.count = function () {\r\n        return Object.keys(this.table).length;\r\n    };\r\n    ModuleSet.prototype.intersection = function (other) {\r\n        var result = new ModuleSet();\r\n        result.table = intersection(this.table, other.table);\r\n        return result;\r\n    };\r\n    ModuleSet.prototype.intersectionCount = function (other) {\r\n        return this.intersection(other).count();\r\n    };\r\n    ModuleSet.prototype.contains = function (id) {\r\n        return id in this.table;\r\n    };\r\n    ModuleSet.prototype.add = function (m) {\r\n        this.table[m.id] = m;\r\n    };\r\n    ModuleSet.prototype.remove = function (m) {\r\n        delete this.table[m.id];\r\n    };\r\n    ModuleSet.prototype.forAll = function (f) {\r\n        for (var mid in this.table) {\r\n            f(this.table[mid]);\r\n        }\r\n    };\r\n    ModuleSet.prototype.modules = function () {\r\n        var vs = [];\r\n        this.forAll(function (m) {\r\n            if (!m.isPredefined())\r\n                vs.push(m);\r\n        });\r\n        return vs;\r\n    };\r\n    return ModuleSet;\r\n}());\r\nexports.ModuleSet = ModuleSet;\r\nvar LinkSets = (function () {\r\n    function LinkSets() {\r\n        this.sets = {};\r\n        this.n = 0;\r\n    }\r\n    LinkSets.prototype.count = function () {\r\n        return this.n;\r\n    };\r\n    LinkSets.prototype.contains = function (id) {\r\n        var result = false;\r\n        this.forAllModules(function (m) {\r\n            if (!result && m.id == id) {\r\n                result = true;\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    LinkSets.prototype.add = function (linktype, m) {\r\n        var s = linktype in this.sets ? this.sets[linktype] : this.sets[linktype] = new ModuleSet();\r\n        s.add(m);\r\n        ++this.n;\r\n    };\r\n    LinkSets.prototype.remove = function (linktype, m) {\r\n        var ms = this.sets[linktype];\r\n        ms.remove(m);\r\n        if (ms.count() === 0) {\r\n            delete this.sets[linktype];\r\n        }\r\n        --this.n;\r\n    };\r\n    LinkSets.prototype.forAll = function (f) {\r\n        for (var linktype in this.sets) {\r\n            f(this.sets[linktype], Number(linktype));\r\n        }\r\n    };\r\n    LinkSets.prototype.forAllModules = function (f) {\r\n        this.forAll(function (ms, lt) { return ms.forAll(f); });\r\n    };\r\n    LinkSets.prototype.intersection = function (other) {\r\n        var result = new LinkSets();\r\n        this.forAll(function (ms, lt) {\r\n            if (lt in other.sets) {\r\n                var i = ms.intersection(other.sets[lt]), n = i.count();\r\n                if (n > 0) {\r\n                    result.sets[lt] = i;\r\n                    result.n += n;\r\n                }\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    return LinkSets;\r\n}());\r\nexports.LinkSets = LinkSets;\r\nfunction intersectionCount(m, n) {\r\n    return Object.keys(intersection(m, n)).length;\r\n}\r\nfunction getGroups(nodes, links, la, rootGroup) {\r\n    var n = nodes.length, c = new Configuration(n, links, la, rootGroup);\r\n    while (c.greedyMerge())\r\n        ;\r\n    var powerEdges = [];\r\n    var g = c.getGroupHierarchy(powerEdges);\r\n    powerEdges.forEach(function (e) {\r\n        var f = function (end) {\r\n            var g = e[end];\r\n            if (typeof g == \"number\")\r\n                e[end] = nodes[g];\r\n        };\r\n        f(\"source\");\r\n        f(\"target\");\r\n    });\r\n    return { groups: g, powerEdges: powerEdges };\r\n}\r\nexports.getGroups = getGroups;\r\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"script"}