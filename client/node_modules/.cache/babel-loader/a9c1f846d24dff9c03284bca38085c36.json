{"ast":null,"code":"import React__default, { useMemo, useContext, useCallback } from 'react';\nimport { T as Theme$1, bX as mergeStyleSets, bg as __assign, g0 as createTheme, g1 as initializeIcons, g2 as ThemeProvider$1, bG as I18nContext, bM as useTranslation, bZ as Spinner, bn as i18nInstance } from './Interfaces-f1972c79.js';\nimport { I as I18nProviderWrapper } from './I18NProviderWrapper-9fdba937.js';\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\nvar getPrimaryButtonCustomOverrides = function (themeSetting, theme) {\n  return {\n    // Adds box shadow on light theme\n    boxShadow: themeSetting === Theme$1.Light ? \"0 1px 3px 0 rgba(0, 0, 0, .12)\" : '0 1px 3px 0 rgba(255,255,255,.12)',\n    primaryButtonTextColor: themeSetting === Theme$1.Kraken ? theme.palette.white : '#F2F3F4',\n    primaryButtonTextColorDisabled: themeSetting === Theme$1.Dark ? '#F2F3F4' : theme.semanticColors.buttonTextDisabled\n  };\n};\nvar defaultSwatchColors = [{\n  id: 'blue',\n  label: 'blue',\n  item: '#33A1FD'\n}, {\n  id: 'green',\n  label: 'green',\n  item: '#26C485'\n}, {\n  id: 'yellow',\n  label: 'yellow',\n  item: '#FEE440'\n}, {\n  id: 'orange',\n  label: 'orange',\n  item: '#F79824'\n}, {\n  id: 'red',\n  label: 'red',\n  item: '#C32F27'\n}, {\n  id: 'pink',\n  label: 'pink',\n  item: '#EE92C2'\n}];\nvar defaultSwatchIcons = [{\n  id: 'FastForward',\n  item: 'FastForward'\n}, {\n  id: 'Asterisk',\n  item: 'Asterisk'\n}, {\n  id: 'Frigid',\n  item: 'Frigid'\n}, {\n  id: 'RedEye',\n  item: 'RedEye'\n}, {\n  id: 'Ringer',\n  item: 'Ringer'\n}, {\n  id: 'Stopwatch',\n  item: 'Stopwatch'\n}, {\n  id: 'SpeedHigh',\n  item: 'SpeedHigh'\n}, {\n  id: 'Shield',\n  item: 'Shield'\n}, {\n  id: 'Accept',\n  item: 'Accept'\n}, {\n  id: 'Warning',\n  item: 'Warning'\n}, {\n  id: 'Lightbulb',\n  item: 'Lightbulb'\n}];\n// Palettes created from https://aka.ms/themedesigner\nvar fluentLightThemePalette = {\n  themePrimary: '#0078d4',\n  themeLighterAlt: '#eff6fc',\n  themeLighter: '#deecf9',\n  themeLight: '#c7e0f4',\n  themeTertiary: '#71afe5',\n  themeSecondary: '#2b88d8',\n  themeDarkAlt: '#106ebe',\n  themeDark: '#005a9e',\n  themeDarker: '#004578',\n  neutralLighterAlt: '#faf9f8',\n  neutralLighter: '#f3f2f1',\n  neutralLight: '#edebe9',\n  neutralQuaternaryAlt: '#e1dfdd',\n  neutralQuaternary: '#d0d0d0',\n  neutralTertiaryAlt: '#c8c6c4',\n  neutralTertiary: '#a19f9d',\n  neutralSecondary: '#605e5c',\n  neutralPrimaryAlt: '#3b3a39',\n  neutralPrimary: '#323130',\n  neutralDark: '#201f1e',\n  black: '#000000',\n  white: '#ffffff',\n  // custom colors\n  glassyBackground75: '#faf9f8bf',\n  glassyBackground90: '#faf9f8e6',\n  glassyBorder: '#d3d3d3',\n  errorTextLight: '#cb2431'\n};\nvar fluentDarkThemePalette = {\n  themePrimary: '#058bf2',\n  themeLighterAlt: '#00060a',\n  themeLighter: '#011627',\n  themeLight: '#012a49',\n  themeTertiary: '#035491',\n  themeSecondary: '#047bd5',\n  themeDarkAlt: '#1d96f4',\n  themeDark: '#3fa6f5',\n  themeDarker: '#70bdf8',\n  neutralLighterAlt: '#0d0f0e',\n  neutralLighter: '#0d0f0e',\n  neutralLight: '#0c0e0d',\n  neutralQuaternaryAlt: '#0b0d0c',\n  neutralQuaternary: '#0b0c0c',\n  neutralTertiaryAlt: '#5e5e5e',\n  neutralTertiary: '#c8c8c8',\n  neutralSecondary: '#d0d0d0',\n  neutralPrimaryAlt: '#dadada',\n  neutralPrimary: '#ffffff',\n  neutralDark: '#f4f4f4',\n  black: '#f8f8f8',\n  white: '#0d0f0e',\n  // custom colors\n  glassyBackground75: '#040404bf',\n  glassyBackground90: '#040404e6',\n  glassyBorder: '#424242',\n  errorTextLight: '#f85149'\n};\nvar fluentExplorerThemePalette = {\n  themePrimary: '#60aaff',\n  themeLighterAlt: '#f9fcff',\n  themeLighter: '#e6f2ff',\n  themeLight: '#d0e6ff',\n  themeTertiary: '#a0ccff',\n  themeSecondary: '#74b5ff',\n  themeDarkAlt: '#579ae6',\n  themeDark: '#4a82c2',\n  themeDarker: '#36608f',\n  neutralLighterAlt: '#2b2b2b',\n  neutralLighter: '#333333',\n  neutralLight: '#414141',\n  neutralQuaternaryAlt: '#4a4a4a',\n  neutralQuaternary: '#515151',\n  neutralTertiaryAlt: '#6f6f6f',\n  neutralTertiary: '#c8c8c8',\n  neutralSecondary: '#d0d0d0',\n  neutralPrimaryAlt: '#dadada',\n  neutralPrimary: '#ffffff',\n  neutralDark: '#f4f4f4',\n  black: '#f8f8f8',\n  white: '#222222',\n  // custom colors\n  glassyBackground75: '#404040bf',\n  glassyBackground90: '#404040e6',\n  glassyBorder: '#777',\n  errorTextLight: '#f85149'\n};\nvar fluentKrakenThemePalette = {\n  themePrimary: '#52baed',\n  themeLighterAlt: '#030709',\n  themeLighter: '#0d1e26',\n  themeLight: '#193847',\n  themeTertiary: '#326f8e',\n  themeSecondary: '#49a3d1',\n  themeDarkAlt: '#63c0ef',\n  themeDark: '#7acaf1',\n  themeDarker: '#9cd7f5',\n  neutralLighterAlt: '#1c2746',\n  neutralLighter: '#212c4d',\n  neutralLight: '#293659',\n  neutralQuaternaryAlt: '#2f3c61',\n  neutralQuaternary: '#344267',\n  neutralTertiaryAlt: '#4c5a81',\n  neutralTertiary: '#c8c8c8',\n  neutralSecondary: '#d0d0d0',\n  neutralPrimaryAlt: '#dadada',\n  neutralPrimary: '#ffffff',\n  neutralDark: '#f4f4f4',\n  black: '#f8f8f8',\n  white: '#16203c',\n  // custom colors\n  glassyBackground75: '#1e2c53bf',\n  glassyBackground90: '#1e2c53e6',\n  glassyBorder: '#303d5c',\n  errorTextLight: '#f85149'\n};\nvar getDropdownStyles = function (_themeSetting, _theme) {\n  return {\n    root: {\n      selectors: {\n        '&.cb-modelcreate-readonly': {\n          selectors: {\n            label: {\n              color: 'var(--cb-color-text-primary)',\n              paddingBottom: 0\n            },\n            '.ms-Dropdown-title': {\n              color: 'var(--cb-color-text-primary)',\n              background: 'transparent'\n            },\n            '.ms-Dropdown-caretDownWrapper': {\n              display: 'none'\n            }\n          }\n        }\n      }\n    }\n  };\n};\nvar getPivotStyles = function (_themeSetting, _theme) {\n  return {\n    icon: {\n      marginRight: 4\n    },\n    link: {\n      height: '36px'\n    }\n  };\n};\nvar classPrefix = 'behaviors-form-pivot-header';\nvar classNames = {\n  root: classPrefix + \"-root\",\n  alert: classPrefix + \"-alert\"\n};\nvar customPivotItemStyles = mergeStyleSets({\n  root: [classNames.root, {\n    alignItems: 'center',\n    display: 'flex',\n    flex: '0 1 100%'\n  }],\n  alert: [classNames.alert, {\n    backgroundColor: 'var(--cb-color-text-error)',\n    borderRadius: 6,\n    height: 6,\n    marginLeft: 4,\n    marginTop: 4,\n    width: 6,\n    flexShrink: 0\n  }]\n});\nfunction setPivotToRequired(isValid, t, link, defaultRenderer) {\n  if (!link || !defaultRenderer) {\n    return null;\n  }\n  return React__default.createElement(\"span\", {\n    className: customPivotItemStyles.root\n  }, defaultRenderer(__assign(__assign({}, link), {\n    itemIcon: undefined\n  })), isValid === false && React__default.createElement(\"span\", {\n    \"aria-label\": t('fieldRequired'),\n    className: customPivotItemStyles.alert\n  }));\n}\n\n// Overrides PrimaryButton styles\nvar getPrimaryButtonStyles = function (themeSetting, theme) {\n  var customOverrides = getPrimaryButtonCustomOverrides(themeSetting, theme);\n  return {\n    root: {\n      boxShadow: customOverrides.boxShadow,\n      color: customOverrides.primaryButtonTextColor\n    },\n    rootHovered: {\n      color: customOverrides.primaryButtonTextColor\n    },\n    rootPressed: {\n      color: customOverrides.primaryButtonTextColor\n    },\n    rootDisabled: {\n      color: customOverrides.primaryButtonTextColorDisabled\n    }\n  };\n};\nvar getSeparatorStyles = function (_themeSetting, theme) {\n  return {\n    root: {\n      '&:before': {\n        backgroundColor: theme.palette.neutralLight\n      }\n    }\n  };\n};\nvar getSpinButtonStyles = function (_themeSetting, _theme) {\n  return {\n    root: {\n      selectors: {\n        '&.cb-modelcreate-readonly': {\n          selectors: {\n            label: {\n              color: 'var(--cb-color-text-primary)'\n            },\n            input: {\n              color: 'var(--cb-color-text-primary)',\n              background: 'transparent'\n            },\n            div: {\n              color: 'var(--cb-color-text-primary)',\n              background: 'transparent'\n            },\n            span: {\n              display: 'none'\n            },\n            'div::after': {\n              border: 'none'\n            }\n          }\n        }\n      }\n    }\n  };\n};\nvar getTextFieldStyles = function (_themeSetting, _theme) {\n  return {\n    root: {\n      selectors: {\n        '&.cb-modelcreate-readonly': {\n          selectors: {\n            label: {\n              color: 'var(--cb-color-text-primary)',\n              paddingBottom: 0\n            },\n            '.ms-TextField-fieldGroup': {\n              border: 'none'\n            },\n            input: {\n              color: 'var(--cb-color-text-primary)',\n              background: 'transparent'\n            },\n            textarea: {\n              color: 'var(--cb-color-text-primary)',\n              background: 'transparent'\n            },\n            '.ms-TextField-description': {\n              display: 'none'\n            }\n          }\n        }\n      }\n    }\n  };\n};\nvar getToggleStyles = function (_themeSetting, _theme) {\n  return {\n    root: {\n      selectors: {\n        '&.cb-modelcreate-readonly': {\n          selectors: {\n            label: {\n              color: 'var(--cb-color-text-primary)'\n            },\n            button: {\n              display: 'none'\n            }\n          }\n        }\n      }\n    }\n  };\n};\n\n/*\r\n    Constructs a strongly typed theme override object for each\r\n    custom-styled Fluent Component.  If styling a new component,\r\n    add a ComponentName.styles.ts file in the ComponentStyles/ folder.\r\n*/\nvar getCustomComponentStyles = function (themeSetting, theme) {\n  return {\n    PrimaryButton: {\n      styles: getPrimaryButtonStyles(themeSetting, theme)\n    },\n    TextField: {\n      styles: getTextFieldStyles()\n    },\n    Toggle: {\n      styles: getToggleStyles()\n    },\n    Dropdown: {\n      styles: getDropdownStyles()\n    },\n    Separator: {\n      styles: getSeparatorStyles(themeSetting, theme)\n    },\n    SpinButton: {\n      styles: getSpinButtonStyles()\n    },\n    Pivot: {\n      styles: getPivotStyles()\n    }\n  };\n};\n\n/*\r\n    Semantic slots are used to style Fluent components and are auto populated\r\n    based on the theme color palette slots. These auto populated colors can be overriden by\r\n    specifying the semantic slots in this file\r\n*/\nvar fluentLightThemeSemanticColors = {\n  errorText: '#a4262c'\n};\nvar fluentDarkThemeSemanticColors = {\n  menuBackground: '#2b2b2b',\n  errorText: '#751d20'\n};\nvar fluentExplorerThemeSemanticColors = {\n  menuBackground: '#323130',\n  severeWarningBackground: '#442726',\n  messageText: '#ffffff',\n  errorText: '#751d20'\n};\nvar fluentKrakenThemeSemanticColors = {\n  errorText: '#a4262c'\n};\nvar getFluentTheme = function (theme) {\n  switch (theme) {\n    case Theme$1.Dark:\n      return fluentDarkTheme;\n    case Theme$1.Light:\n      return fluentLightTheme;\n    case Theme$1.Explorer:\n      return fluentExplorerTheme;\n    case Theme$1.Kraken:\n      return fluentKrakenTheme;\n    default:\n      return fluentLightTheme;\n  }\n};\n/*\r\n    Creates fluent theme using palette and semantic colors,\r\n    then applies custom component style overrides.\r\n*/\nvar createThemeWithCustomStyles = function (themeInfo, themeSetting) {\n  var theme = createTheme(themeInfo);\n  theme.components = getCustomComponentStyles(themeSetting, theme);\n  return theme;\n};\n/*\r\n    Each theme is made up of\r\n    palette: Fluent UI color palette\r\n    semanticColors: Specific UI color slots.  These are created using\r\n    the palette colors, but can be overriden for more stylistic control.\r\n*/\nvar fluentLightThemeInfo = {\n  palette: fluentLightThemePalette,\n  semanticColors: fluentLightThemeSemanticColors\n};\nvar fluentDarkThemeInfo = {\n  palette: fluentDarkThemePalette,\n  semanticColors: fluentDarkThemeSemanticColors\n};\nvar fluentExplorerThemeInfo = {\n  palette: fluentExplorerThemePalette,\n  semanticColors: fluentExplorerThemeSemanticColors\n};\nvar fluentKrakenThemeInfo = {\n  palette: fluentKrakenThemePalette,\n  semanticColors: fluentKrakenThemeSemanticColors\n};\nvar fluentLightTheme = createThemeWithCustomStyles(fluentLightThemeInfo, Theme$1.Light);\nvar fluentDarkTheme = createThemeWithCustomStyles(fluentDarkThemeInfo, Theme$1.Dark);\nvar fluentExplorerTheme = createThemeWithCustomStyles(fluentExplorerThemeInfo, Theme$1.Explorer);\nvar fluentKrakenTheme = createThemeWithCustomStyles(fluentKrakenThemeInfo, Theme$1.Kraken);\nvar Theme = React__default.createContext(null);\nvar useLibTheme = function () {\n  return useContext(Theme);\n};\n// Required to load fluent UI icons\ninitializeIcons();\nvar ThemeProvider = function (_a) {\n  var children = _a.children,\n    _b = _a.theme,\n    theme = _b === void 0 ? Theme$1.Light : _b;\n  var fluentTheme = useMemo(function () {\n    return getFluentTheme(theme);\n  }, [theme]);\n  var unsetStyles = {\n    all: 'unset',\n    minHeight: 'inherit'\n  };\n  return React__default.createElement(Theme.Provider, {\n    value: theme\n  }, React__default.createElement(ThemeProvider$1, {\n    theme: fluentTheme,\n    applyTo: 'none',\n    style: unsetStyles\n  }, React__default.createElement(\"div\", {\n    style: unsetStyles,\n    \"cardboard-data-theme\": theme\n  }, children)));\n};\nvar css_248z$2 = \".cb-overlay-outer {\\n  align-items: center;\\n  background-color: var(--cb-color-bg-canvas);\\n  display: flex;\\n  height: 100%;\\n  justify-content: center;\\n  position: absolute;\\n  width: 100%;\\n  z-index: 3; }\\n\\n.cb-overlay-inner {\\n  background: var(--cb-color-bg-canvas-inset);\\n  border-radius: 3px;\\n  padding: 20px; }\\n\";\nstyleInject(css_248z$2);\nvar Overlay = function (_a) {\n  var onClose = _a.onClose,\n    children = _a.children;\n  // Absence of onClose implies that the overlay cannot be closed.\n  // onClose is offloaded to the consumer of overlay to handle deciding whether to render the overlay instance\n  var onCloseWrapper = useCallback(function () {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n  return React__default.createElement(\"div\", {\n    className: \"cb-overlay-outer\",\n    onClick: onCloseWrapper\n  }, React__default.createElement(\"div\", {\n    className: \"cb-overlay-inner\"\n  }, children));\n};\nvar Overlay$1 = React__default.memo(Overlay);\nvar css_248z$1 = \".cb-error-title {\\n  color: var(--cb-color-text-danger);\\n  font-weight: 700; }\\n\";\nstyleInject(css_248z$1);\nvar Error = function (_a) {\n  var errorTitle = _a.errorTitle,\n    errorContent = _a.errorContent;\n  return React__default.createElement(Overlay$1, null, React__default.createElement(\"div\", {\n    className: \"cb-error-title\"\n  }, errorTitle), errorContent && React__default.createElement(\"div\", null, errorContent));\n};\nvar ErrorComponent = React__default.memo(Error);\nvar css_248z = \"/*\\r\\n  Your use of the content in the files referenced here is subject to the terms of the license at http://aka.ms/fabric-assets-license\\r\\n*/\\n*[class^='cb-'] {\\n  box-sizing: border-box;\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }\\n\\n.cb-tsicomponent-container {\\n  height: 100%;\\n  width: 100%; }\\n\\n.cb-warning-icon {\\n  color: var(--cb-color-text-warning); }\\n\\n.cb-base-fade-in {\\n  animation: fadeIn 0.367s cubic-bezier(0.1, 0.9, 0.2, 1) forwards; }\\n\\n@keyframes fadeIn {\\n  from {\\n    opacity: 0; }\\n  to {\\n    opacity: 1; } }\\n\\n@keyframes fadeOut {\\n  from {\\n    opacity: 1; }\\n  to {\\n    opacity: 0; } }\\n\\n.cb-base-component {\\n  color: var(--cb-color-text-primary);\\n  height: 100%;\\n  position: relative;\\n  width: 100%; }\\n\";\nstyleInject(css_248z);\n\n/** Provides wrapper component for theming and localization.\r\n *  Also provides optional UI states for loading, empty data, and errors.\r\n *\r\n *  If provided adapterResults, any catastrophic errors present will be\r\n *  rendered in error overlay.  This functionality can be short circuited by\r\n *  explicitly passing a componentError object.\r\n *\r\n * Note: If theming or localization providers are already present higher in\r\n * the component tree, those providers won't be duplicated.\r\n */\nvar BaseComponent = function (_a) {\n  var _b, _c;\n  var adapterResults = _a.adapterResults,\n    children = _a.children,\n    componentError = _a.componentError,\n    containerClassName = _a.containerClassName,\n    customLoadingMessage = _a.customLoadingMessage,\n    _d = _a.disableDefaultStyles,\n    disableDefaultStyles = _d === void 0 ? false : _d,\n    _e = _a.isDataEmpty,\n    isDataEmpty = _e === void 0 ? false : _e,\n    _f = _a.isLoading,\n    isLoading = _f === void 0 ? false : _f,\n    locale = _a.locale,\n    localeStrings = _a.localeStrings,\n    theme = _a.theme;\n  // Access theme and localization contexts to see if they are already present in component tree\n  var localizationContext = useContext(I18nContext);\n  var themeContext = useContext(Theme);\n  var t = useTranslation().t;\n  var catastrophicError = adapterResults === null || adapterResults === void 0 ? void 0 : adapterResults.reduce(function (acc, curr) {\n    if (acc) return acc;\n    var err = curr === null || curr === void 0 ? void 0 : curr.getCatastrophicError();\n    if (err) return err;\n    return null;\n  }, null);\n  var errorToRender = componentError || catastrophicError;\n  var showInfo = !errorToRender && (isLoading || isDataEmpty);\n  var loadingMessage = customLoadingMessage || t('loading');\n  var BaseContents = React__default.createElement(\"div\", {\n    className: (disableDefaultStyles ? '' : 'cb-base-component ') + \" \" + (containerClassName ? containerClassName : ''),\n    \"cardboard-data-theme\": (_b = theme || themeContext) !== null && _b !== void 0 ? _b : undefined\n  }, showInfo && React__default.createElement(React__default.Fragment, null, React__default.createElement(Overlay$1, null, isLoading ? React__default.createElement(\"div\", null, React__default.createElement(Spinner, {\n    label: loadingMessage\n  })) : t('noData'))), errorToRender && React__default.createElement(ErrorComponent, {\n    errorTitle: errorToRender.name,\n    errorContent: errorToRender.message ? errorToRender.message : (_c = errorToRender.rawError) === null || _c === void 0 ? void 0 : _c.toString()\n  }), children);\n  if (!localizationContext && !themeContext) {\n    // Missing both theming and localization contexts\n    return React__default.createElement(I18nProviderWrapper, {\n      locale: locale,\n      localeStrings: localeStrings,\n      i18n: i18nInstance\n    }, React__default.createElement(ThemeProvider, {\n      theme: theme\n    }, BaseContents));\n  } else if (!localizationContext) {\n    // Missing only localization context\n    return React__default.createElement(I18nProviderWrapper, {\n      locale: locale,\n      localeStrings: localeStrings,\n      i18n: i18nInstance\n    }, BaseContents);\n  } else if (!themeContext) {\n    // Missing only theming context\n    return React__default.createElement(ThemeProvider, {\n      theme: theme\n    }, BaseContents);\n  } else {\n    // Theming and localization contexts are already present in tree\n    return BaseContents;\n  }\n};\nexport { BaseComponent as B, defaultSwatchIcons as a, setPivotToRequired as b, defaultSwatchColors as d, styleInject as s, useLibTheme as u };","map":{"version":3,"sources":["../../node_modules/style-inject/dist/style-inject.es.js","../../src/Theming/Palettes.ts","../../src/Theming/FluentComponentStyles/Dropdown.styles.ts","../../src/Theming/FluentComponentStyles/Pivot.styles.tsx","../../src/Theming/FluentComponentStyles/PrimaryButton.styles.ts","../../src/Theming/FluentComponentStyles/Separator.styles.ts","../../src/Theming/FluentComponentStyles/SpinButton.styles.ts","../../src/Theming/FluentComponentStyles/TextField.styles.ts","../../src/Theming/FluentComponentStyles/Toggle.styles.ts","../../src/Theming/FluentComponentStyles/index.ts","../../src/Theming/SemanticColors.ts","../../src/Theming/FluentThemes.ts","../../src/Theming/ThemeProvider.tsx","../../src/Components/Modal/Overlay.tsx","../../src/Components/Error/Error.tsx","../../src/Components/BaseComponent/BaseComponent.tsx"],"names":["Theme","React","FluentThemeProvider","Overlay","i18n"],"mappings":"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","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { ITheme } from '@fluentui/react';\nimport { IPickerOption } from '../Components/Pickers/Internal/Picker.base.types';\nimport { Theme } from '../Models/Constants/Enums';\nimport { IExtendedPartialPalette } from './Theme.types';\n\nexport const getPrimaryButtonCustomOverrides = (\n    themeSetting: Theme,\n    theme: ITheme\n) => {\n    return {\n        // Adds box shadow on light theme\n        boxShadow:\n            themeSetting === Theme.Light\n                ? `0 1px 3px 0 rgba(0, 0, 0, .12)`\n                : '0 1px 3px 0 rgba(255,255,255,.12)',\n        primaryButtonTextColor:\n            themeSetting === Theme.Kraken ? theme.palette.white : '#F2F3F4',\n        primaryButtonTextColorDisabled:\n            themeSetting === Theme.Dark\n                ? '#F2F3F4'\n                : theme.semanticColors.buttonTextDisabled\n    };\n};\n\nexport const defaultSwatchColors: IPickerOption[] = [\n    { id: 'blue', label: 'blue', item: '#33A1FD' },\n    { id: 'green', label: 'green', item: '#26C485' },\n    { id: 'yellow', label: 'yellow', item: '#FEE440' },\n    { id: 'orange', label: 'orange', item: '#F79824' },\n    { id: 'red', label: 'red', item: '#C32F27' },\n    { id: 'pink', label: 'pink', item: '#EE92C2' }\n];\nexport const defaultSwatchIcons: IPickerOption[] = [\n    {\n        id: 'FastForward',\n        item: 'FastForward'\n    },\n    {\n        id: 'Asterisk',\n        item: 'Asterisk'\n    },\n    {\n        id: 'Frigid',\n        item: 'Frigid'\n    },\n    {\n        id: 'RedEye',\n        item: 'RedEye'\n    },\n    {\n        id: 'Ringer',\n        item: 'Ringer'\n    },\n    {\n        id: 'Stopwatch',\n        item: 'Stopwatch'\n    },\n    {\n        id: 'SpeedHigh',\n        item: 'SpeedHigh'\n    },\n    {\n        id: 'Shield',\n        item: 'Shield'\n    },\n    {\n        id: 'Accept',\n        item: 'Accept'\n    },\n    {\n        id: 'Warning',\n        item: 'Warning'\n    },\n    {\n        id: 'Lightbulb',\n        item: 'Lightbulb'\n    }\n];\n\n// Palettes created from https://aka.ms/themedesigner\nexport const fluentLightThemePalette: IExtendedPartialPalette = {\n    themePrimary: '#0078d4',\n    themeLighterAlt: '#eff6fc',\n    themeLighter: '#deecf9',\n    themeLight: '#c7e0f4',\n    themeTertiary: '#71afe5',\n    themeSecondary: '#2b88d8',\n    themeDarkAlt: '#106ebe',\n    themeDark: '#005a9e',\n    themeDarker: '#004578',\n    neutralLighterAlt: '#faf9f8',\n    neutralLighter: '#f3f2f1',\n    neutralLight: '#edebe9',\n    neutralQuaternaryAlt: '#e1dfdd',\n    neutralQuaternary: '#d0d0d0',\n    neutralTertiaryAlt: '#c8c6c4',\n    neutralTertiary: '#a19f9d',\n    neutralSecondary: '#605e5c',\n    neutralPrimaryAlt: '#3b3a39',\n    neutralPrimary: '#323130',\n    neutralDark: '#201f1e',\n    black: '#000000',\n    white: '#ffffff',\n    // custom colors\n    glassyBackground75: '#faf9f8bf',\n    glassyBackground90: '#faf9f8e6',\n    glassyBorder: '#d3d3d3',\n    errorTextLight: '#cb2431'\n};\n\nexport const fluentDarkThemePalette: IExtendedPartialPalette = {\n    themePrimary: '#058bf2',\n    themeLighterAlt: '#00060a',\n    themeLighter: '#011627',\n    themeLight: '#012a49',\n    themeTertiary: '#035491',\n    themeSecondary: '#047bd5',\n    themeDarkAlt: '#1d96f4',\n    themeDark: '#3fa6f5',\n    themeDarker: '#70bdf8',\n    neutralLighterAlt: '#0d0f0e',\n    neutralLighter: '#0d0f0e',\n    neutralLight: '#0c0e0d',\n    neutralQuaternaryAlt: '#0b0d0c',\n    neutralQuaternary: '#0b0c0c',\n    neutralTertiaryAlt: '#5e5e5e',\n    neutralTertiary: '#c8c8c8',\n    neutralSecondary: '#d0d0d0',\n    neutralPrimaryAlt: '#dadada',\n    neutralPrimary: '#ffffff',\n    neutralDark: '#f4f4f4',\n    black: '#f8f8f8',\n    white: '#0d0f0e',\n    // custom colors\n    glassyBackground75: '#040404bf',\n    glassyBackground90: '#040404e6',\n    glassyBorder: '#424242',\n    errorTextLight: '#f85149'\n};\n\nexport const fluentExplorerThemePalette: IExtendedPartialPalette = {\n    themePrimary: '#60aaff',\n    themeLighterAlt: '#f9fcff',\n    themeLighter: '#e6f2ff',\n    themeLight: '#d0e6ff',\n    themeTertiary: '#a0ccff',\n    themeSecondary: '#74b5ff',\n    themeDarkAlt: '#579ae6',\n    themeDark: '#4a82c2',\n    themeDarker: '#36608f',\n    neutralLighterAlt: '#2b2b2b',\n    neutralLighter: '#333333',\n    neutralLight: '#414141',\n    neutralQuaternaryAlt: '#4a4a4a',\n    neutralQuaternary: '#515151',\n    neutralTertiaryAlt: '#6f6f6f',\n    neutralTertiary: '#c8c8c8',\n    neutralSecondary: '#d0d0d0',\n    neutralPrimaryAlt: '#dadada',\n    neutralPrimary: '#ffffff',\n    neutralDark: '#f4f4f4',\n    black: '#f8f8f8',\n    white: '#222222',\n    // custom colors\n    glassyBackground75: '#404040bf',\n    glassyBackground90: '#404040e6',\n    glassyBorder: '#777',\n    errorTextLight: '#f85149'\n};\n\nexport const fluentKrakenThemePalette: IExtendedPartialPalette = {\n    themePrimary: '#52baed',\n    themeLighterAlt: '#030709',\n    themeLighter: '#0d1e26',\n    themeLight: '#193847',\n    themeTertiary: '#326f8e',\n    themeSecondary: '#49a3d1',\n    themeDarkAlt: '#63c0ef',\n    themeDark: '#7acaf1',\n    themeDarker: '#9cd7f5',\n    neutralLighterAlt: '#1c2746',\n    neutralLighter: '#212c4d',\n    neutralLight: '#293659',\n    neutralQuaternaryAlt: '#2f3c61',\n    neutralQuaternary: '#344267',\n    neutralTertiaryAlt: '#4c5a81',\n    neutralTertiary: '#c8c8c8',\n    neutralSecondary: '#d0d0d0',\n    neutralPrimaryAlt: '#dadada',\n    neutralPrimary: '#ffffff',\n    neutralDark: '#f4f4f4',\n    black: '#f8f8f8',\n    white: '#16203c',\n    // custom colors\n    glassyBackground75: '#1e2c53bf',\n    glassyBackground90: '#1e2c53e6',\n    glassyBorder: '#303d5c',\n    errorTextLight: '#f85149'\n};\n","import { IDropdownStyles, ITheme } from '@fluentui/react';\nimport { Theme } from '../../Models/Constants/Enums';\n\nexport const getDropdownStyles = (\n    _themeSetting: Theme,\n    _theme: ITheme\n): Partial<IDropdownStyles> => {\n    return {\n        root: {\n            selectors: {\n                '&.cb-modelcreate-readonly': {\n                    selectors: {\n                        label: {\n                            color: 'var(--cb-color-text-primary)',\n                            paddingBottom: 0\n                        },\n                        '.ms-Dropdown-title': {\n                            color: 'var(--cb-color-text-primary)',\n                            background: 'transparent'\n                        },\n                        '.ms-Dropdown-caretDownWrapper': {\n                            display: 'none'\n                        }\n                    }\n                }\n            }\n        }\n    };\n};\n","import { IPivotStyles, ITheme } from '@fluentui/react';\nimport { Theme } from '../../Models/Constants/Enums';\nimport { IStyle, mergeStyleSets } from '@fluentui/react';\nimport { IPivotItemProps } from '@fluentui/react';\nimport React from 'react';\nimport { TFunction } from 'react-i18next';\n\nexport const getPivotStyles = (\n    _themeSetting: Theme,\n    _theme: ITheme\n): Partial<IPivotStyles> => {\n    return {\n        icon: {\n            marginRight: 4\n        },\n        link: {\n            height: '36px'\n        }\n    };\n};\n\nconst classPrefix = 'behaviors-form-pivot-header';\nconst classNames = {\n    root: `${classPrefix}-root`,\n    alert: `${classPrefix}-alert`\n};\nexport const customPivotItemStyles = mergeStyleSets({\n    root: [\n        classNames.root,\n        {\n            alignItems: 'center',\n            display: 'flex',\n            flex: '0 1 100%'\n        } as IStyle\n    ],\n    alert: [\n        classNames.alert,\n        {\n            backgroundColor: 'var(--cb-color-text-error)',\n            borderRadius: 6,\n            height: 6,\n            marginLeft: 4,\n            marginTop: 4,\n            width: 6,\n            flexShrink: 0\n        } as IStyle\n    ]\n});\n\nexport function setPivotToRequired(\n    isValid: boolean | undefined,\n    t: TFunction<string>,\n    link?: IPivotItemProps,\n    defaultRenderer?: (link?: IPivotItemProps) => JSX.Element | null\n): JSX.Element | null {\n    if (!link || !defaultRenderer) {\n        return null;\n    }\n    return (\n        <span className={customPivotItemStyles.root}>\n            {defaultRenderer({ ...link, itemIcon: undefined })}\n            {isValid === false && (\n                <span\n                    aria-label={t('fieldRequired')}\n                    className={customPivotItemStyles.alert}\n                />\n            )}\n        </span>\n    );\n}\n","import { IButtonStyles, ITheme } from '@fluentui/react';\nimport { Theme } from '../../Models/Constants/Enums';\nimport { getPrimaryButtonCustomOverrides } from '../Palettes';\n\n// Overrides PrimaryButton styles\nexport const getPrimaryButtonStyles = (\n    themeSetting: Theme,\n    theme: ITheme\n): Partial<IButtonStyles> => {\n    const customOverrides = getPrimaryButtonCustomOverrides(\n        themeSetting,\n        theme\n    );\n\n    return {\n        root: {\n            boxShadow: customOverrides.boxShadow,\n            color: customOverrides.primaryButtonTextColor\n        },\n        rootHovered: {\n            color: customOverrides.primaryButtonTextColor\n        },\n        rootPressed: {\n            color: customOverrides.primaryButtonTextColor\n        },\n        rootDisabled: {\n            color: customOverrides.primaryButtonTextColorDisabled\n        }\n    };\n};\n","import { ISeparatorStyles, ITheme } from '@fluentui/react';\nimport { Theme } from '../../Models/Constants/Enums';\n\nexport const getSeparatorStyles = (\n    _themeSetting: Theme,\n    theme: ITheme\n): Partial<ISeparatorStyles> => {\n    return {\n        root: {\n            '&:before': {\n                backgroundColor: theme.palette.neutralLight\n            }\n        }\n    };\n};\n","import { ISpinButtonStyles, ITheme } from '@fluentui/react';\nimport { Theme } from '../../Models/Constants/Enums';\n\nexport const getSpinButtonStyles = (\n    _themeSetting: Theme,\n    _theme: ITheme\n): Partial<ISpinButtonStyles> => {\n    return {\n        root: {\n            selectors: {\n                '&.cb-modelcreate-readonly': {\n                    selectors: {\n                        label: {\n                            color: 'var(--cb-color-text-primary)'\n                        },\n                        input: {\n                            color: 'var(--cb-color-text-primary)',\n                            background: 'transparent'\n                        },\n                        div: {\n                            color: 'var(--cb-color-text-primary)',\n                            background: 'transparent'\n                        },\n                        span: {\n                            display: 'none'\n                        },\n                        'div::after': {\n                            border: 'none'\n                        }\n                    }\n                }\n            }\n        }\n    };\n};\n","import { ITextFieldStyles, ITheme } from '@fluentui/react';\nimport { Theme } from '../../Models/Constants/Enums';\n\nexport const getTextFieldStyles = (\n    _themeSetting: Theme,\n    _theme: ITheme\n): Partial<ITextFieldStyles> => {\n    return {\n        root: {\n            selectors: {\n                '&.cb-modelcreate-readonly': {\n                    selectors: {\n                        label: {\n                            color: 'var(--cb-color-text-primary)',\n                            paddingBottom: 0\n                        },\n                        '.ms-TextField-fieldGroup': {\n                            border: 'none'\n                        },\n                        input: {\n                            color: 'var(--cb-color-text-primary)',\n                            background: 'transparent'\n                        },\n                        textarea: {\n                            color: 'var(--cb-color-text-primary)',\n                            background: 'transparent'\n                        },\n                        '.ms-TextField-description': {\n                            display: 'none'\n                        }\n                    }\n                }\n            }\n        }\n    };\n};\n","import { ITheme, IToggleStyles } from '@fluentui/react';\nimport { Theme } from '../../Models/Constants/Enums';\n\nexport const getToggleStyles = (\n    _themeSetting: Theme,\n    _theme: ITheme\n): Partial<IToggleStyles> => {\n    return {\n        root: {\n            selectors: {\n                '&.cb-modelcreate-readonly': {\n                    selectors: {\n                        label: {\n                            color: 'var(--cb-color-text-primary)'\n                        },\n                        button: {\n                            display: 'none'\n                        }\n                    }\n                }\n            }\n        }\n    };\n};\n","import { ITheme } from '@fluentui/react';\nimport { Theme } from '../../Models/Constants/Enums';\nimport { getDropdownStyles } from './Dropdown.styles';\nimport { getPivotStyles } from './Pivot.styles';\nimport { getPrimaryButtonStyles } from './PrimaryButton.styles';\nimport { getSeparatorStyles } from './Separator.styles';\nimport { getSpinButtonStyles } from './SpinButton.styles';\nimport { getTextFieldStyles } from './TextField.styles';\nimport { getToggleStyles } from './Toggle.styles';\n\n/* \n    Constructs a strongly typed theme override object for each \n    custom-styled Fluent Component.  If styling a new component, \n    add a ComponentName.styles.ts file in the ComponentStyles/ folder.\n*/\nexport const getCustomComponentStyles = (\n    themeSetting: Theme,\n    theme: ITheme\n) => ({\n    PrimaryButton: {\n        styles: getPrimaryButtonStyles(themeSetting, theme)\n    },\n    TextField: {\n        styles: getTextFieldStyles(themeSetting, theme)\n    },\n    Toggle: {\n        styles: getToggleStyles(themeSetting, theme)\n    },\n    Dropdown: {\n        styles: getDropdownStyles(themeSetting, theme)\n    },\n    Separator: {\n        styles: getSeparatorStyles(themeSetting, theme)\n    },\n    SpinButton: {\n        styles: getSpinButtonStyles(themeSetting, theme)\n    },\n    Pivot: {\n        styles: getPivotStyles(themeSetting, theme)\n    }\n});\n","import { ISemanticColors } from '@fluentui/react';\n\n/*\n    Semantic slots are used to style Fluent components and are auto populated\n    based on the theme color palette slots. These auto populated colors can be overriden by \n    specifying the semantic slots in this file\n*/\n\nexport const fluentLightThemeSemanticColors: Partial<ISemanticColors> = {\n    errorText: '#a4262c'\n};\n\nexport const fluentDarkThemeSemanticColors: Partial<ISemanticColors> = {\n    menuBackground: '#2b2b2b',\n    errorText: '#751d20'\n};\n\nexport const fluentExplorerThemeSemanticColors: Partial<ISemanticColors> = {\n    menuBackground: '#323130',\n    severeWarningBackground: '#442726',\n    messageText: '#ffffff',\n    errorText: '#751d20'\n};\n\nexport const fluentKrakenThemeSemanticColors: Partial<ISemanticColors> = {\n    errorText: '#a4262c'\n};\n","import { createTheme, ITheme, Theme as FluentTheme } from '@fluentui/react';\nimport {\n    fluentDarkThemePalette,\n    fluentExplorerThemePalette,\n    fluentKrakenThemePalette,\n    fluentLightThemePalette\n} from './Palettes';\nimport { Theme } from '../Models/Constants/Enums';\nimport { getCustomComponentStyles } from './FluentComponentStyles';\nimport {\n    fluentDarkThemeSemanticColors,\n    fluentExplorerThemeSemanticColors,\n    fluentKrakenThemeSemanticColors,\n    fluentLightThemeSemanticColors\n} from './SemanticColors';\nimport { IExtendedPartialTheme } from './Theme.types';\n\nexport const getFluentTheme = (theme: Theme): ITheme => {\n    switch (theme) {\n        case Theme.Dark:\n            return fluentDarkTheme;\n        case Theme.Light:\n            return fluentLightTheme;\n        case Theme.Explorer:\n            return fluentExplorerTheme;\n        case Theme.Kraken:\n            return fluentKrakenTheme;\n        default:\n            return fluentLightTheme;\n    }\n};\n\n/* \n    Creates fluent theme using palette and semantic colors, \n    then applies custom component style overrides.\n*/\nconst createThemeWithCustomStyles = (\n    themeInfo: IExtendedPartialTheme,\n    themeSetting: Theme\n): FluentTheme => {\n    const theme = createTheme(themeInfo);\n    theme.components = getCustomComponentStyles(themeSetting, theme);\n    return theme;\n};\n\n/* \n    Each theme is made up of \n    palette: Fluent UI color palette\n    semanticColors: Specific UI color slots.  These are created using \n    the palette colors, but can be overriden for more stylistic control.\n*/\nconst fluentLightThemeInfo: IExtendedPartialTheme = {\n    palette: fluentLightThemePalette,\n    semanticColors: fluentLightThemeSemanticColors\n};\n\nconst fluentDarkThemeInfo: IExtendedPartialTheme = {\n    palette: fluentDarkThemePalette,\n    semanticColors: fluentDarkThemeSemanticColors\n};\n\nconst fluentExplorerThemeInfo: IExtendedPartialTheme = {\n    palette: fluentExplorerThemePalette,\n    semanticColors: fluentExplorerThemeSemanticColors\n};\n\nconst fluentKrakenThemeInfo: IExtendedPartialTheme = {\n    palette: fluentKrakenThemePalette,\n    semanticColors: fluentKrakenThemeSemanticColors\n};\n\nconst fluentLightTheme = createThemeWithCustomStyles(\n    fluentLightThemeInfo,\n    Theme.Light\n);\n\nconst fluentDarkTheme = createThemeWithCustomStyles(\n    fluentDarkThemeInfo,\n    Theme.Dark\n);\n\nconst fluentExplorerTheme = createThemeWithCustomStyles(\n    fluentExplorerThemeInfo,\n    Theme.Explorer\n);\n\nconst fluentKrakenTheme = createThemeWithCustomStyles(\n    fluentKrakenThemeInfo,\n    Theme.Kraken\n);\n","import React, { CSSProperties, useContext, useMemo } from 'react';\nimport { Theme as LibThemes } from '../Models/Constants/Enums';\nimport { getFluentTheme } from './FluentThemes';\nimport {\n    initializeIcons,\n    ThemeProvider as FluentThemeProvider\n} from '@fluentui/react';\n\nexport const Theme = React.createContext(null);\nexport const useLibTheme = () => useContext(Theme);\n\n// Required to load fluent UI icons\ninitializeIcons();\n\nexport const ThemeProvider = ({ children, theme = LibThemes.Light }) => {\n    const fluentTheme = useMemo(() => getFluentTheme(theme), [theme]);\n    const unsetStyles: CSSProperties = { all: 'unset', minHeight: 'inherit' };\n\n    return (\n        <Theme.Provider value={theme}>\n            <FluentThemeProvider\n                theme={fluentTheme}\n                applyTo={'none'}\n                style={unsetStyles}\n            >\n                <div style={unsetStyles} cardboard-data-theme={theme}>\n                    {children}\n                </div>\n            </FluentThemeProvider>\n        </Theme.Provider>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { IOverlayProps } from '../../Models/Constants';\nimport './Overlay.scss';\n\nconst Overlay: React.FC<IOverlayProps> = ({ onClose, children }) => {\n    // Absence of onClose implies that the overlay cannot be closed.\n    // onClose is offloaded to the consumer of overlay to handle deciding whether to render the overlay instance\n    const onCloseWrapper = useCallback(() => {\n        if (onClose) {\n            onClose();\n        }\n    }, [onClose]);\n\n    return (\n        <div className=\"cb-overlay-outer\" onClick={onCloseWrapper}>\n            <div className=\"cb-overlay-inner\">{children}</div>\n        </div>\n    );\n};\n\nexport default React.memo(Overlay);\n","import React from 'react';\nimport { IErrorComponentProps } from '../../Models/Constants';\nimport Overlay from '../Modal/Overlay';\nimport './Error.scss';\n\nconst Error: React.FC<IErrorComponentProps> = ({\n    errorTitle,\n    errorContent\n}) => {\n    return (\n        <Overlay>\n            <div className=\"cb-error-title\">{errorTitle}</div>\n            {errorContent && <div>{errorContent}</div>}\n        </Overlay>\n    );\n};\n\nexport default React.memo(Error);\n","import React, { useContext } from 'react';\nimport { I18nContext, useTranslation } from 'react-i18next';\nimport { AdapterResult, IComponentError } from '../..';\nimport i18n from '../../i18n';\nimport I18nProviderWrapper from '../../Models/Classes/I18NProviderWrapper';\nimport { ThemeProvider, Theme } from '../../Theming/ThemeProvider';\nimport { BaseComponentProps } from './BaseComponent.types';\nimport { default as ErrorComponent } from '../Error/Error';\nimport './BaseComponent.scss';\nimport Overlay from '../Modal/Overlay';\nimport { Spinner } from '@fluentui/react';\n\n/** Provides wrapper component for theming and localization.\n *  Also provides optional UI states for loading, empty data, and errors.\n *\n *  If provided adapterResults, any catastrophic errors present will be\n *  rendered in error overlay.  This functionality can be short circuited by\n *  explicitly passing a componentError object.\n *\n * Note: If theming or localization providers are already present higher in\n * the component tree, those providers won't be duplicated.\n */\nconst BaseComponent: React.FC<BaseComponentProps> = ({\n    adapterResults,\n    children,\n    componentError,\n    containerClassName,\n    customLoadingMessage,\n    disableDefaultStyles = false,\n    isDataEmpty = false,\n    isLoading = false,\n    locale,\n    localeStrings,\n    theme\n}) => {\n    // Access theme and localization contexts to see if they are already present in component tree\n    const localizationContext = useContext(I18nContext);\n    const themeContext = useContext(Theme);\n    const { t } = useTranslation();\n\n    const catastrophicError: IComponentError = adapterResults?.reduce(\n        (acc: IComponentError, curr: AdapterResult<any>) => {\n            if (acc) return acc;\n            const err = curr?.getCatastrophicError();\n            if (err) return err;\n            return null;\n        },\n        null\n    );\n\n    const errorToRender: IComponentError = componentError || catastrophicError;\n    const showInfo = !errorToRender && (isLoading || isDataEmpty);\n    const loadingMessage = customLoadingMessage || t('loading');\n\n    const BaseContents = (\n        <div\n            className={`${disableDefaultStyles ? '' : 'cb-base-component '} ${\n                containerClassName ? containerClassName : ''\n            }`}\n            cardboard-data-theme={(theme || themeContext) ?? undefined}\n        >\n            {showInfo && (\n                <>\n                    {\n                        <Overlay>\n                            {isLoading ? (\n                                <div>\n                                    <Spinner label={loadingMessage} />\n                                </div>\n                            ) : (\n                                t('noData')\n                            )}\n                        </Overlay>\n                    }\n                </>\n            )}\n            {errorToRender && (\n                <ErrorComponent\n                    errorTitle={errorToRender.name}\n                    errorContent={\n                        errorToRender.message\n                            ? errorToRender.message\n                            : errorToRender.rawError?.toString()\n                    }\n                />\n            )}\n            {children}\n        </div>\n    );\n\n    if (!localizationContext && !themeContext) {\n        // Missing both theming and localization contexts\n        return (\n            <I18nProviderWrapper\n                locale={locale}\n                localeStrings={localeStrings}\n                i18n={i18n}\n            >\n                <ThemeProvider theme={theme}>{BaseContents}</ThemeProvider>\n            </I18nProviderWrapper>\n        );\n    } else if (!localizationContext) {\n        // Missing only localization context\n        return (\n            <I18nProviderWrapper\n                locale={locale}\n                localeStrings={localeStrings}\n                i18n={i18n}\n            >\n                {BaseContents}\n            </I18nProviderWrapper>\n        );\n    } else if (!themeContext) {\n        // Missing only theming context\n        return <ThemeProvider theme={theme}>{BaseContents}</ThemeProvider>;\n    } else {\n        // Theming and localization contexts are already present in tree\n        return BaseContents;\n    }\n};\n\nexport default BaseComponent;\n"]},"metadata":{},"sourceType":"module"}