{"ast":null,"code":"var _jsxFileName = \"/home/saharsh/Music/digital-twins-explorer/client/src/components/QueryComponent/QueryComponent.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React, { Component } from \"react\";\nimport { TextField, Dropdown, DefaultButton, Icon, IconButton, FocusZone, FocusZoneTabbableElements, Checkbox } from \"office-ui-fabric-react\";\nimport { withTranslation } from \"react-i18next\";\nimport { print } from \"../../services/LoggingService\";\nimport { eventService } from \"../../services/EventService\";\nimport { settingsService } from \"../../services/SettingsService\";\nimport \"./QueryComponent.scss\";\nimport { SaveQueryDialogComponent } from \"./SaveQueryDialogComponent/SaveQueryDialogComponent\";\nimport { ConfirmQueryDialogComponent } from \"./ConfirmQueryDialogComponent/ConfirmQueryDialogComponent\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultQuery = \"SELECT * FROM digitaltwins\";\nconst ENTER_KEY_CODE = 13;\nclass QueryComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.queryOptions = [{\n      key: \"query\",\n      text: \"Query\"\n    }, {\n      key: \"save\",\n      text: \"Save Query\"\n    }];\n    this.onKeyFunction = event => {\n      this.setState({\n        disabled: false\n      });\n      const enterPressed = event.key === \"Enter\";\n      if (event.shiftKey && enterPressed) {\n        if (!this.state.multilineHolder) {\n          this.setState({\n            selectedQueryMultiline: event.target.value\n          });\n        }\n        this.setState({\n          multiline: true,\n          multilineHolder: true\n        });\n        this.queryField.focus();\n      } else if (enterPressed) {\n        this.executeQuery(event);\n        event.preventDefault();\n      }\n    };\n    this.clearAfterEnvironmentChange = () => {\n      this.setState({\n        selectedQuery: defaultQuery,\n        selectedQueryKey: null,\n        queryKeyToBeRemoved: \"\",\n        showSaveQueryModal: false,\n        showConfirmDeleteModal: false,\n        showConfirmOverwriteModal: false,\n        newQueryName: \"\",\n        isOverlayResultsChecked: false\n      });\n    };\n    this.onChange = evt => {\n      this.setState({\n        selectedQuery: evt.target.value,\n        selectedQueryKey: null,\n        selectedQueryMultiline: evt.target.value\n      });\n      const count = evt.target.value.split(\"\").filter(c => c === \"\\n\").length;\n      this.setState({\n        rowCount: count + 1,\n        multilineHolder: count !== 0,\n        multiline: count !== 0\n      });\n    };\n    this.onFocusGained = () => {\n      if (this.state.multilineHolder) {\n        this.setState(prevState => ({\n          selectedQuery: prevState.selectedQueryMultiline,\n          multiline: true\n        }));\n      }\n    };\n    this.onFocusLost = () => {\n      this.setState(prevState => ({\n        disabled: true,\n        multiline: false,\n        selectedQuery: prevState.selectedQueryMultiline.replaceAll(\"\\n\", \" \")\n      }));\n    };\n    this.onMouseOver = () => {\n      this.setState({\n        disabled: false\n      });\n    };\n    this.onChangeQueryName = evt => {\n      this.setState({\n        newQueryName: evt.target.value\n      });\n    };\n    this.executeQuery = event => {\n      if (typeof this.props.onQueryExecuted === \"function\") {\n        this.props.onQueryExecuted();\n      }\n      event.preventDefault();\n      print(`Requested query: ${this.state.selectedQuery}`);\n      eventService.publishQuery(this.state.selectedQuery);\n    };\n    this.saveQueryButtonClicked = () => {\n      this.setState({\n        showSaveQueryModal: true\n      });\n    };\n    this.saveQuery = e => {\n      e.preventDefault();\n      const {\n        queries,\n        selectedQuery,\n        newQueryName\n      } = this.state;\n      if (newQueryName) {\n        const newQueries = [...queries];\n        if (queries.find(q => q.name === newQueryName)) {\n          this.setState({\n            showSaveQueryModal: false,\n            showConfirmOverwriteModal: true\n          });\n        } else {\n          newQueries.push({\n            name: newQueryName,\n            query: selectedQuery\n          });\n          this.setState({\n            queries: newQueries,\n            selectedQueryKey: newQueryName,\n            showSaveQueryModal: false,\n            newQueryName: \"\"\n          });\n          settingsService.queries = newQueries;\n        }\n      }\n    };\n    this.overwriteQuery = e => {\n      e.preventDefault();\n      const {\n        queries,\n        selectedQuery,\n        newQueryName\n      } = this.state;\n      if (newQueryName) {\n        const newQueries = [...queries];\n        newQueries[newQueries.indexOf(newQueries.find(q => q.name === newQueryName))] = {\n          name: newQueryName,\n          query: selectedQuery\n        };\n        this.setState({\n          queries: newQueries,\n          selectedQueryKey: newQueryName,\n          showConfirmOverwriteModal: false,\n          newQueryName: \"\"\n        });\n        settingsService.queries = newQueries;\n      }\n    };\n    this.cancelSaveQuery = e => {\n      e.preventDefault();\n      this.setState({\n        showSaveQueryModal: false,\n        newQueryName: \"\",\n        showConfirmOverwriteModal: false\n      });\n    };\n    this.onSelectedQueryChange = (e, i) => {\n      this.setState(prevState => ({\n        selectedQuery: prevState.queries.find(q => q.name === i.key).query,\n        selectedQueryKey: i.key,\n        selectedQueryMultiline: prevState.queries.find(q => q.name === i.key).query,\n        multilineHolder: false\n      }));\n    };\n    this.confirmDeleteQuery = e => {\n      e.preventDefault();\n      this.removeQuery();\n      this.setState({\n        showConfirmDeleteModal: false,\n        queryKeyToBeRemoved: \"\"\n      });\n    };\n    this.cancelDeleteQuery = e => {\n      e.preventDefault();\n      this.setState({\n        showConfirmDeleteModal: false,\n        queryKeyToBeRemoved: \"\"\n      });\n    };\n    this.onRemoveQueryClick = item => {\n      this.setState({\n        showConfirmDeleteModal: true,\n        queryKeyToBeRemoved: item.key\n      });\n    };\n    this.removeQuery = () => {\n      const {\n        queries\n      } = this.state;\n      const newQueries = [...queries];\n      newQueries.splice(newQueries.indexOf(newQueries.find(q => q.name === this.state.queryKeyToBeRemoved)), 1);\n      this.setState({\n        queries: newQueries\n      });\n      settingsService.queries = newQueries;\n    };\n    this.onRenderOption = item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-option\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        tabIndex: \"0\",\n        type: \"button\",\n        onClick: () => this.onRemoveQueryClick(item),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          className: \"close-icon\",\n          iconName: \"ChromeClose\",\n          \"aria-hidden\": \"true\",\n          \"aria-label\": `Remove query ${item.key}`,\n          role: \"button\",\n          title: \"Remove query\",\n          tabIndex: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }, this);\n    this.onOverlayResultsChange = (e, checked) => {\n      this.setState({\n        isOverlayResultsChecked: !!checked\n      });\n      eventService.publishOverlayQueryResults(!!checked);\n    };\n    this.handleOverlayResultsKeyUp = e => {\n      if (e.keyCode === ENTER_KEY_CODE) {\n        eventService.publishOverlayQueryResults(!this.state.isOverlayResultsChecked);\n        this.setState(prevState => ({\n          isOverlayResultsChecked: !prevState.isOverlayResultsChecked\n        }));\n      }\n    };\n    this.state = {\n      queries: [],\n      selectedQuery: defaultQuery,\n      selectedQueryMultiline: defaultQuery,\n      selectedQueryKey: null,\n      queryKeyToBeRemoved: \"\",\n      showSaveQueryModal: false,\n      showConfirmDeleteModal: false,\n      showConfirmOverwriteModal: false,\n      newQueryName: \"\",\n      isOverlayResultsChecked: false,\n      multiline: false,\n      multilineHolder: false,\n      isFocused: false,\n      disabled: false,\n      rowCount: 2\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      queries: settingsService.queries\n    });\n    eventService.subscribeEnvironmentChange(this.clearAfterEnvironmentChange);\n  }\n  componentWillUnmount() {\n    eventService.unsubscribeEnvironmentChange(this.clearAfterEnvironmentChange);\n  }\n  render() {\n    const {\n      queries,\n      selectedQuery,\n      selectedQueryKey,\n      showSaveQueryModal,\n      newQueryName,\n      showConfirmDeleteModal,\n      showConfirmOverwriteModal,\n      isOverlayResultsChecked,\n      disabled,\n      multiline,\n      rowCount,\n      isFocused\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qc-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qc-queryBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qc-label\",\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              placeholder: this.props.t(\"queryComponent.savedQueries\"),\n              ariaLabel: this.props.t(\"queryComponent.savedQueries\"),\n              selectedKey: selectedQueryKey,\n              options: queries.map(q => ({\n                key: q.name,\n                text: q.name\n              })),\n              onRenderOption: this.onRenderOption,\n              onKeyDown: this.onMouseOver,\n              role: \"combobox\",\n              styles: {\n                dropdown: {\n                  width: 200\n                }\n              },\n              onChange: this.onSelectedQueryChange,\n              onFocus: this.onFocusOther\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FocusZone, {\n            handleTabKey: FocusZoneTabbableElements.all,\n            defaultActiveElement: \"#queryField\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.executeQuery,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"queryField\",\n                className: \"qc-query\",\n                styles: this.getStyles,\n                role: \"search\",\n                value: selectedQuery,\n                onChange: this.onChange,\n                ariaLabel: \"Enter a query\",\n                onFocus: this.onFocusGained,\n                multiline: multiline,\n                rows: rowCount,\n                autoAdjustHeight: \"true\",\n                isFocused: isFocused,\n                onBlur: this.onFocusLost,\n                disabled: disabled,\n                onMouseOver: this.onMouseOver,\n                onKeyDown: this.onKeyFunction,\n                ref: input => {\n                  this.queryField = input;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qc-queryControls\",\n            children: [/*#__PURE__*/_jsxDEV(FocusZone, {\n              onKeyUp: this.handleOverlayResultsKeyUp,\n              onKeyDown: this.onMouseOver,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                label: this.props.t(\"queryComponent.overlayResults\"),\n                checked: isOverlayResultsChecked,\n                onChange: this.onOverlayResultsChange,\n                boxSide: \"end\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DefaultButton, {\n              className: \"query-button\",\n              onClick: this.executeQuery,\n              ariaLive: \"assertive\",\n              children: this.props.t(\"queryComponent.defaultButton\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              className: \"query-save-button\",\n              iconProps: {\n                iconName: this.props.t(\"queryComponent.iconButton\"),\n                style: {\n                  color: \"black\"\n                }\n              },\n              title: this.props.t(\"queryComponent.iconButton\"),\n              ariaLabel: \"Save query\",\n              ariaLive: \"assertive\",\n              onClick: this.saveQueryButtonClicked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SaveQueryDialogComponent, {\n        isVisible: showSaveQueryModal,\n        onConfirm: this.saveQuery,\n        onCancel: this.cancelSaveQuery,\n        onChange: this.onChangeQueryName,\n        query: newQueryName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmQueryDialogComponent, {\n        title: this.props.t(\"queryComponent.confirmQueryDialogComponent1.title\"),\n        description: this.props.t(\"queryComponent.confirmQueryDialogComponent1.description\"),\n        action: \"Confirm\",\n        isVisible: showConfirmOverwriteModal,\n        onConfirm: this.overwriteQuery,\n        onCancel: this.cancelSaveQuery,\n        defaultActiveElementId: \"deleteQueryField\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmQueryDialogComponent, {\n        title: this.props.t(\"queryComponent.confirmQueryDialogComponent2.title\"),\n        action: \"Delete\",\n        isVisible: showConfirmDeleteModal,\n        onConfirm: this.confirmDeleteQuery,\n        onCancel: this.cancelDeleteQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default withTranslation()(QueryComponent);","map":{"version":3,"names":["React","Component","TextField","Dropdown","DefaultButton","Icon","IconButton","FocusZone","FocusZoneTabbableElements","Checkbox","withTranslation","print","eventService","settingsService","SaveQueryDialogComponent","ConfirmQueryDialogComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultQuery","ENTER_KEY_CODE","QueryComponent","constructor","props","queryOptions","key","text","onKeyFunction","event","setState","disabled","enterPressed","shiftKey","state","multilineHolder","selectedQueryMultiline","target","value","multiline","queryField","focus","executeQuery","preventDefault","clearAfterEnvironmentChange","selectedQuery","selectedQueryKey","queryKeyToBeRemoved","showSaveQueryModal","showConfirmDeleteModal","showConfirmOverwriteModal","newQueryName","isOverlayResultsChecked","onChange","evt","count","split","filter","c","length","rowCount","onFocusGained","prevState","onFocusLost","replaceAll","onMouseOver","onChangeQueryName","onQueryExecuted","publishQuery","saveQueryButtonClicked","saveQuery","e","queries","newQueries","find","q","name","push","query","overwriteQuery","indexOf","cancelSaveQuery","onSelectedQueryChange","i","confirmDeleteQuery","removeQuery","cancelDeleteQuery","onRemoveQueryClick","item","splice","onRenderOption","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tabIndex","type","onClick","iconName","role","title","onOverlayResultsChange","checked","publishOverlayQueryResults","handleOverlayResultsKeyUp","keyCode","isFocused","componentDidMount","subscribeEnvironmentChange","componentWillUnmount","unsubscribeEnvironmentChange","render","placeholder","t","ariaLabel","selectedKey","options","map","onKeyDown","styles","dropdown","width","onFocus","onFocusOther","handleTabKey","all","defaultActiveElement","onSubmit","id","getStyles","rows","autoAdjustHeight","onBlur","ref","input","onKeyUp","label","boxSide","ariaLive","iconProps","style","color","isVisible","onConfirm","onCancel","description","action","defaultActiveElementId"],"sources":["/home/saharsh/Music/digital-twins-explorer/client/src/components/QueryComponent/QueryComponent.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React, { Component } from \"react\";\nimport { TextField, Dropdown, DefaultButton, Icon, IconButton,\n  FocusZone, FocusZoneTabbableElements, Checkbox } from \"office-ui-fabric-react\";\nimport { withTranslation } from \"react-i18next\";\n\nimport { print } from \"../../services/LoggingService\";\nimport { eventService } from \"../../services/EventService\";\nimport { settingsService } from \"../../services/SettingsService\";\n\nimport \"./QueryComponent.scss\";\nimport { SaveQueryDialogComponent } from \"./SaveQueryDialogComponent/SaveQueryDialogComponent\";\nimport { ConfirmQueryDialogComponent } from \"./ConfirmQueryDialogComponent/ConfirmQueryDialogComponent\";\n\nconst defaultQuery = \"SELECT * FROM digitaltwins\";\n\nconst ENTER_KEY_CODE = 13;\nclass QueryComponent extends Component {\n\n  queryOptions = [\n    { key: \"query\", text: \"Query\" },\n    { key: \"save\", text: \"Save Query\" }\n  ]\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      queries: [],\n      selectedQuery: defaultQuery,\n      selectedQueryMultiline: defaultQuery,\n      selectedQueryKey: null,\n      queryKeyToBeRemoved: \"\",\n      showSaveQueryModal: false,\n      showConfirmDeleteModal: false,\n      showConfirmOverwriteModal: false,\n      newQueryName: \"\",\n      isOverlayResultsChecked: false,\n      multiline: false,\n      multilineHolder: false,\n      isFocused: false,\n      disabled: false,\n      rowCount: 2\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ queries: settingsService.queries });\n    eventService.subscribeEnvironmentChange(this.clearAfterEnvironmentChange);\n  }\n\n  onKeyFunction = event => {\n    this.setState({ disabled: false });\n    const enterPressed = event.key === \"Enter\";\n    if (event.shiftKey && enterPressed) {\n      if (!this.state.multilineHolder) {\n        this.setState({ selectedQueryMultiline: event.target.value });\n      }\n      this.setState({ multiline: true, multilineHolder: true });\n      this.queryField.focus();\n    } else if (enterPressed) {\n      this.executeQuery(event);\n      event.preventDefault();\n    }\n  }\n\n  componentWillUnmount() {\n    eventService.unsubscribeEnvironmentChange(this.clearAfterEnvironmentChange);\n  }\n\n  clearAfterEnvironmentChange = () => {\n    this.setState({\n      selectedQuery: defaultQuery,\n      selectedQueryKey: null,\n      queryKeyToBeRemoved: \"\",\n      showSaveQueryModal: false,\n      showConfirmDeleteModal: false,\n      showConfirmOverwriteModal: false,\n      newQueryName: \"\",\n      isOverlayResultsChecked: false\n    });\n  }\n\n  onChange = evt => {\n    this.setState({ selectedQuery: evt.target.value, selectedQueryKey: null, selectedQueryMultiline: evt.target.value });\n    const count = evt.target.value.split(\"\").filter(c => c === \"\\n\").length;\n    this.setState({ rowCount: count + 1, multilineHolder: count !== 0, multiline: count !== 0 });\n  }\n\n  onFocusGained = () => {\n    if (this.state.multilineHolder) {\n      this.setState(prevState => ({ selectedQuery: prevState.selectedQueryMultiline, multiline: true }));\n    }\n  }\n\n  onFocusLost = () => {\n    this.setState(prevState => ({ disabled: true, multiline: false, selectedQuery: prevState.selectedQueryMultiline.replaceAll(\"\\n\", \" \") }));\n  }\n\n  onMouseOver = () => {\n    this.setState({ disabled: false });\n  }\n\n  onChangeQueryName = evt => {\n    this.setState({ newQueryName: evt.target.value });\n  }\n\n  executeQuery = event => {\n    if (typeof this.props.onQueryExecuted === \"function\") {\n      this.props.onQueryExecuted();\n    }\n    event.preventDefault();\n    print(`Requested query: ${this.state.selectedQuery}`);\n    eventService.publishQuery(this.state.selectedQuery);\n  }\n\n  saveQueryButtonClicked = () => {\n    this.setState({ showSaveQueryModal: true });\n  }\n\n  saveQuery = e => {\n    e.preventDefault();\n    const { queries, selectedQuery, newQueryName } = this.state;\n    if (newQueryName) {\n      const newQueries = [ ...queries ];\n      if (queries.find(q => q.name === newQueryName)) {\n        this.setState({ showSaveQueryModal: false, showConfirmOverwriteModal: true });\n      } else {\n        newQueries.push({ name: newQueryName, query: selectedQuery });\n        this.setState({ queries: newQueries, selectedQueryKey: newQueryName, showSaveQueryModal: false, newQueryName: \"\" });\n        settingsService.queries = newQueries;\n      }\n    }\n  }\n\n  overwriteQuery = e => {\n    e.preventDefault();\n    const { queries, selectedQuery, newQueryName } = this.state;\n    if (newQueryName) {\n      const newQueries = [ ...queries ];\n      newQueries[newQueries.indexOf(newQueries.find(q => q.name === newQueryName))] = { name: newQueryName, query: selectedQuery };\n      this.setState({ queries: newQueries, selectedQueryKey: newQueryName, showConfirmOverwriteModal: false, newQueryName: \"\" });\n      settingsService.queries = newQueries;\n    }\n  }\n\n  cancelSaveQuery = e => {\n    e.preventDefault();\n    this.setState({ showSaveQueryModal: false, newQueryName: \"\", showConfirmOverwriteModal: false });\n  }\n\n  onSelectedQueryChange = (e, i) => {\n    this.setState(prevState => ({ selectedQuery: prevState.queries.find(q => q.name === i.key).query,\n      selectedQueryKey: i.key, selectedQueryMultiline: prevState.queries.find(q => q.name === i.key).query, multilineHolder: false }));\n  }\n\n  confirmDeleteQuery = e => {\n    e.preventDefault();\n    this.removeQuery();\n    this.setState({ showConfirmDeleteModal: false, queryKeyToBeRemoved: \"\" });\n  }\n\n  cancelDeleteQuery = e => {\n    e.preventDefault();\n    this.setState({ showConfirmDeleteModal: false, queryKeyToBeRemoved: \"\" });\n  }\n\n  onRemoveQueryClick = item => {\n    this.setState({ showConfirmDeleteModal: true, queryKeyToBeRemoved: item.key });\n  }\n\n  removeQuery = () => {\n    const { queries } = this.state;\n    const newQueries = [ ...queries ];\n    newQueries.splice(newQueries.indexOf(newQueries.find(q => q.name === this.state.queryKeyToBeRemoved)), 1);\n\n    this.setState({ queries: newQueries });\n    settingsService.queries = newQueries;\n  }\n\n  onRenderOption = item => (\n    <div className=\"dropdown-option\">\n      <span>{item.key}</span>\n      <button tabIndex=\"0\" type=\"button\" onClick={() => this.onRemoveQueryClick(item)}>\n        <Icon\n          className=\"close-icon\"\n          iconName=\"ChromeClose\"\n          aria-hidden=\"true\"\n          aria-label={`Remove query ${item.key}`}\n          role=\"button\"\n          title=\"Remove query\"\n          tabIndex=\"0\" />\n      </button>\n    </div>)\n\n  onOverlayResultsChange = (e, checked) => {\n    this.setState({ isOverlayResultsChecked: !!checked });\n    eventService.publishOverlayQueryResults(!!checked);\n  };\n\n  handleOverlayResultsKeyUp = e => {\n    if (e.keyCode === ENTER_KEY_CODE) {\n      eventService.publishOverlayQueryResults(!this.state.isOverlayResultsChecked);\n      this.setState(prevState => ({ isOverlayResultsChecked: !prevState.isOverlayResultsChecked }));\n    }\n  }\n\n  render() {\n    const { queries, selectedQuery, selectedQueryKey, showSaveQueryModal, newQueryName,\n      showConfirmDeleteModal, showConfirmOverwriteModal, isOverlayResultsChecked, disabled, multiline, rowCount, isFocused } = this.state;\n\n    return (\n      <>\n        <div className=\"qc-grid\">\n          <div className=\"qc-queryBox\">\n            <div className=\"qc-label\">\n              <Dropdown\n                placeholder={this.props.t(\"queryComponent.savedQueries\")}\n                ariaLabel={this.props.t(\"queryComponent.savedQueries\")}\n                selectedKey={selectedQueryKey}\n                options={queries.map(q => ({ key: q.name, text: q.name }))}\n                onRenderOption={this.onRenderOption}\n                onKeyDown={this.onMouseOver}\n                role=\"combobox\"\n                styles={{\n                  dropdown: { width: 200 }\n                }}\n                onChange={this.onSelectedQueryChange} onFocus={this.onFocusOther} />\n            </div>\n            <FocusZone handleTabKey={FocusZoneTabbableElements.all} defaultActiveElement=\"#queryField\">\n              <form onSubmit={this.executeQuery}>\n                <TextField id=\"queryField\" className=\"qc-query\" styles={this.getStyles} role=\"search\" value={selectedQuery} onChange={this.onChange} ariaLabel=\"Enter a query\"\n                  onFocus={this.onFocusGained} multiline={multiline} rows={rowCount} autoAdjustHeight=\"true\" isFocused={isFocused} onBlur={this.onFocusLost} disabled={disabled}\n                  onMouseOver={this.onMouseOver} onKeyDown={this.onKeyFunction} ref={input => {\n                    this.queryField = input;\n                  }} />\n              </form>\n            </FocusZone>\n            <div className=\"qc-queryControls\">\n              <FocusZone onKeyUp={this.handleOverlayResultsKeyUp} onKeyDown={this.onMouseOver} >\n                <Checkbox label={this.props.t(\"queryComponent.overlayResults\")} checked={isOverlayResultsChecked} onChange={this.onOverlayResultsChange}\n                  boxSide=\"end\" />\n              </FocusZone>\n              <DefaultButton className=\"query-button\" onClick={this.executeQuery} ariaLive=\"assertive\">\n                {this.props.t(\"queryComponent.defaultButton\")}\n              </DefaultButton>\n              <IconButton className=\"query-save-button\"\n                iconProps={{ iconName: this.props.t(\"queryComponent.iconButton\"), style: { color: \"black\" } }}\n                title={this.props.t(\"queryComponent.iconButton\")} ariaLabel=\"Save query\" ariaLive=\"assertive\"\n                onClick={this.saveQueryButtonClicked} />\n            </div>\n          </div>\n        </div>\n        <SaveQueryDialogComponent isVisible={showSaveQueryModal}\n          onConfirm={this.saveQuery} onCancel={this.cancelSaveQuery}\n          onChange={this.onChangeQueryName} query={newQueryName} />\n        <ConfirmQueryDialogComponent title={this.props.t(\"queryComponent.confirmQueryDialogComponent1.title\")}\n          description={this.props.t(\"queryComponent.confirmQueryDialogComponent1.description\")}\n          action=\"Confirm\" isVisible={showConfirmOverwriteModal}\n          onConfirm={this.overwriteQuery} onCancel={this.cancelSaveQuery}\n          defaultActiveElementId=\"deleteQueryField\" />\n        <ConfirmQueryDialogComponent title={this.props.t(\"queryComponent.confirmQueryDialogComponent2.title\")}\n          action=\"Delete\" isVisible={showConfirmDeleteModal}\n          onConfirm={this.confirmDeleteQuery} onCancel={this.cancelDeleteQuery} />\n      </>\n    );\n  }\n\n}\n\nexport default withTranslation()(QueryComponent);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}