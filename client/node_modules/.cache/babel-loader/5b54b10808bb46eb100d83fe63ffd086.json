{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nvar proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\nexport function getDefaultProxySettings(_proxyUrl) {\n  return undefined;\n}\nexport function proxyPolicy(_proxySettings) {\n  return {\n    create: function (_nextPolicy, _options) {\n      throw proxyNotSupportedInBrowser;\n    }\n  };\n}\nvar ProxyPolicy = /** @class */function (_super) {\n  __extends(ProxyPolicy, _super);\n  function ProxyPolicy(nextPolicy, options) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n    throw proxyNotSupportedInBrowser;\n    return _this;\n  }\n  ProxyPolicy.prototype.sendRequest = function (_request) {\n    throw proxyNotSupportedInBrowser;\n  };\n  return ProxyPolicy;\n}(BaseRequestPolicy);\nexport { ProxyPolicy };","map":{"version":3,"sources":["../../../src/policies/proxyPolicy.browser.ts"],"names":[],"mappings":"AAAA;AACA;;AAGA,SACE,iBAAiB,QAIZ,iBAAiB;AAIxB,IAAM,0BAA0B,GAAG,IAAI,KAAK,CAAC,qDAAqD,CAAC;AAEnG,OAAM,SAAU,uBAAuB,CAAC,SAAkB,EAAA;EACxD,OAAO,SAAS;AAClB;AAEA,OAAM,SAAU,WAAW,CAAC,cAA8B,EAAA;EACxD,OAAO;IACL,MAAM,EAAE,SAAA,CAAC,WAA0B,EAAE,QAA8B,EAAA;MACjE,MAAM,0BAA0B;IAClC;GACD;AACH;AAEA,IAAA,WAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAiC,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;EAC/B,SAAA,WAAA,CAAY,UAAyB,EAAE,OAA6B,EAAA;IAApE,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,UAAU,EAAE,OAAO,CAAC,IAAA,IAAA;IAC1B,MAAM,0BAA0B;;EAClC;EAEO,WAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,UAAmB,QAAyB,EAAA;IAC1C,MAAM,0BAA0B;EAClC,CAAC;EACH,OAAA,WAAC;AAAD,CAAC,CATgC,iBAAiB,CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ProxySettings } from \"../serviceClient\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\n\nexport function getDefaultProxySettings(_proxyUrl?: string): ProxySettings | undefined {\n  return undefined;\n}\n\nexport function proxyPolicy(_proxySettings?: ProxySettings): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw proxyNotSupportedInBrowser;\n    }\n  };\n}\n\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw proxyNotSupportedInBrowser;\n  }\n\n  public sendRequest(_request: WebResourceLike): Promise<HttpOperationResponse> {\n    throw proxyNotSupportedInBrowser;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}