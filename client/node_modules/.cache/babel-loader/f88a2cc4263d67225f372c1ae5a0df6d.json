{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nvar splitButtonDividerBaseStyles = function () {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8\n  };\n};\nexport function standardStyles(theme) {\n  var _a, _b, _c, _d, _e;\n  var s = theme.semanticColors,\n    p = theme.palette;\n  var buttonBackground = s.buttonBackground;\n  var buttonBackgroundPressed = s.buttonBackgroundPressed;\n  var buttonBackgroundHovered = s.buttonBackgroundHovered;\n  var buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n  var buttonText = s.buttonText;\n  var buttonTextHovered = s.buttonTextHovered;\n  var buttonTextDisabled = s.buttonTextDisabled;\n  var buttonTextChecked = s.buttonTextChecked;\n  var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText\n    },\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered\n    },\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _b)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        border: 'none'\n      }, _c)\n    },\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            color: 'Highlight'\n          }, _d)\n        }\n      }\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _e)\n    }),\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.buttonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled\n    }\n  };\n}\nexport function primaryStyles(theme) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n  var p = theme.palette,\n    s = theme.semanticColors;\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: \"1px solid \" + s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        selectors: {\n          ':after': {\n            border: \"none\",\n            outlineColor: p.white\n          }\n        }\n      }, _a)\n    },\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: \"1px solid \" + s.primaryButtonBackgroundHovered,\n      color: s.primaryButtonTextHovered,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'Highlight',\n        borderColor: 'Highlight'\n      }, _b)\n    },\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: \"1px solid \" + s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n      selectors: (_c = {}, _c[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _c)\n    },\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _d)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none'\n      }, _e)\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.white,\n      selectors: (_f = {}, _f[HighContrastSelector] = {\n        backgroundColor: 'Window'\n      }, _f)\n    }),\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_g = {}, _g[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _g[':hover'] = {\n        backgroundColor: s.primaryButtonBackgroundHovered,\n        selectors: (_h = {}, _h[HighContrastSelector] = {\n          color: 'Highlight'\n        }, _h)\n      }, _g)\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n      selectors: (_j = {}, _j[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _j)\n    }\n  };\n}","map":{"version":3,"sources":["components/Button/ButtonThemes.ts"],"names":[],"mappings":"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","sourcesContent":["import { IButtonStyles } from './Button.types';\nimport { ITheme, HighContrastSelector, IRawStyle, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n  const buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextDisabled = s.buttonTextDisabled;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}