{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { getGlobalClassNames, HighContrastSelector, AnimationVariables, getFocusStyle } from '../../Styling';\nimport { getRTL } from '@uifabric/utilities';\nvar GlobalClassNames = {\n  root: 'ms-Slider',\n  enabled: 'ms-Slider-enabled',\n  disabled: 'ms-Slider-disabled',\n  row: 'ms-Slider-row',\n  column: 'ms-Slider-column',\n  container: 'ms-Slider-container',\n  slideBox: 'ms-Slider-slideBox',\n  line: 'ms-Slider-line',\n  thumb: 'ms-Slider-thumb',\n  activeSection: 'ms-Slider-active',\n  inactiveSection: 'ms-Slider-inactive',\n  valueLabel: 'ms-Slider-value',\n  showValue: 'ms-Slider-showValue',\n  showTransitions: 'ms-Slider-showTransitions',\n  zeroTick: 'ms-Slider-zeroTick'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n  var className = props.className,\n    titleLabelClassName = props.titleLabelClassName,\n    theme = props.theme,\n    vertical = props.vertical,\n    disabled = props.disabled,\n    showTransitions = props.showTransitions,\n    showValue = props.showValue;\n  var semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  /** Tokens:\n   *   The word \"active\" in the token refers to the selected section of the slider\n   *   The word \"inactive\" in the token refers to the unselected section of the slider */\n  var pressedActiveSectionColor = semanticColors.inputBackgroundCheckedHovered;\n  var hoveredActiveSectionColor = semanticColors.inputBackgroundChecked;\n  var hoveredPressedinactiveSectionColor = semanticColors.inputPlaceholderBackgroundChecked;\n  var restActiveSectionColor = semanticColors.smallInputBorder;\n  var restInactiveSectionColor = semanticColors.disabledBorder;\n  var disabledActiveSectionColor = semanticColors.disabledText;\n  var disabledInactiveSectionColor = semanticColors.disabledBackground;\n  var thumbBackgroundColor = semanticColors.inputBackground;\n  var thumbBorderColor = semanticColors.smallInputBorder;\n  var thumbDisabledBorderColor = semanticColors.disabledBorder;\n  var slideBoxActiveSectionStyles = !disabled && {\n    backgroundColor: pressedActiveSectionColor,\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      backgroundColor: 'Highlight'\n    }, _a)\n  };\n  var slideBoxInactiveSectionStyles = !disabled && {\n    backgroundColor: hoveredPressedinactiveSectionColor,\n    selectors: (_b = {}, _b[HighContrastSelector] = {\n      borderColor: 'Highlight'\n    }, _b)\n  };\n  var slideHoverSectionStyles = !disabled && {\n    backgroundColor: hoveredActiveSectionColor,\n    selectors: (_c = {}, _c[HighContrastSelector] = {\n      backgroundColor: 'Highlight'\n    }, _c)\n  };\n  var slideBoxActiveThumbStyles = !disabled && {\n    border: \"2px solid \" + pressedActiveSectionColor,\n    selectors: (_d = {}, _d[HighContrastSelector] = {\n      borderColor: 'Highlight'\n    }, _d)\n  };\n  var slideBoxActiveZeroTickStyles = !props.disabled && {\n    backgroundColor: semanticColors.inputPlaceholderBackgroundChecked,\n    selectors: (_e = {}, _e[HighContrastSelector] = {\n      backgroundColor: 'Highlight'\n    }, _e)\n  };\n  return {\n    root: __spreadArrays([classNames.root, theme.fonts.medium, {\n      userSelect: 'none'\n    }, vertical && {\n      marginRight: 8\n    }], [!disabled ? classNames.enabled : undefined], [disabled ? classNames.disabled : undefined], [!vertical ? classNames.row : undefined], [vertical ? classNames.column : undefined], [className]),\n    titleLabel: [{\n      padding: 0\n    }, titleLabelClassName],\n    container: [classNames.container, {\n      display: 'flex',\n      flexWrap: 'nowrap',\n      alignItems: 'center'\n    }, vertical && {\n      flexDirection: 'column',\n      height: '100%',\n      textAlign: 'center',\n      margin: '8px 0'\n    }],\n    slideBox: __spreadArrays([classNames.slideBox, getFocusStyle(theme), {\n      background: 'transparent',\n      border: 'none',\n      flexGrow: 1,\n      lineHeight: 28,\n      display: 'flex',\n      alignItems: 'center',\n      selectors: (_f = {}, _f[\":active .\" + classNames.activeSection] = slideBoxActiveSectionStyles, _f[\":hover .\" + classNames.activeSection] = slideHoverSectionStyles, _f[\":active .\" + classNames.inactiveSection] = slideBoxInactiveSectionStyles, _f[\":hover .\" + classNames.inactiveSection] = slideBoxInactiveSectionStyles, _f[\":active .\" + classNames.thumb] = slideBoxActiveThumbStyles, _f[\":hover .\" + classNames.thumb] = slideBoxActiveThumbStyles, _f[\":active .\" + classNames.zeroTick] = slideBoxActiveZeroTickStyles, _f[\":hover .\" + classNames.zeroTick] = slideBoxActiveZeroTickStyles, _f[HighContrastSelector] = {\n        forcedColorAdjust: 'none'\n      }, _f)\n    }, vertical ? {\n      height: '100%',\n      width: 28,\n      padding: '8px 0'\n    } : {\n      height: 28,\n      width: 'auto',\n      padding: '0 8px'\n    }], [showValue ? classNames.showValue : undefined], [showTransitions ? classNames.showTransitions : undefined]),\n    thumb: [classNames.thumb, {\n      borderWidth: 2,\n      borderStyle: 'solid',\n      borderColor: thumbBorderColor,\n      borderRadius: 10,\n      boxSizing: 'border-box',\n      background: thumbBackgroundColor,\n      display: 'block',\n      width: 16,\n      height: 16,\n      position: 'absolute'\n    }, vertical ? {\n      left: -6,\n      margin: '0 auto',\n      transform: 'translateY(8px)'\n    } : {\n      top: -6,\n      transform: getRTL(theme) ? 'translateX(50%)' : 'translateX(-50%)'\n    }, showTransitions && {\n      transition: \"left \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction1\n    }, disabled && {\n      borderColor: thumbDisabledBorderColor,\n      selectors: (_g = {}, _g[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _g)\n    }],\n    line: [classNames.line, {\n      display: 'flex',\n      position: 'relative'\n    }, vertical ? {\n      height: '100%',\n      width: 4,\n      margin: '0 auto',\n      flexDirection: 'column-reverse'\n    } : {\n      width: '100%'\n    }],\n    lineContainer: [{\n      borderRadius: 4,\n      boxSizing: 'border-box'\n    }, vertical ? {\n      width: 4,\n      height: '100%'\n    } : {\n      height: 4,\n      width: '100%'\n    }],\n    activeSection: [classNames.activeSection, {\n      background: restActiveSectionColor,\n      selectors: (_h = {}, _h[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _h)\n    }, showTransitions && {\n      transition: \"width \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction1\n    }, disabled && {\n      background: disabledActiveSectionColor,\n      selectors: (_j = {}, _j[HighContrastSelector] = {\n        backgroundColor: 'GrayText',\n        borderColor: 'GrayText'\n      }, _j)\n    }],\n    inactiveSection: [classNames.inactiveSection, {\n      background: restInactiveSectionColor,\n      selectors: (_k = {}, _k[HighContrastSelector] = {\n        border: '1px solid WindowText'\n      }, _k)\n    }, showTransitions && {\n      transition: \"width \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction1\n    }, disabled && {\n      background: disabledInactiveSectionColor,\n      selectors: (_l = {}, _l[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _l)\n    }],\n    zeroTick: [classNames.zeroTick, {\n      position: 'absolute',\n      background: semanticColors.disabledBorder,\n      selectors: (_m = {}, _m[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _m)\n    }, props.disabled && {\n      background: semanticColors.disabledBackground,\n      selectors: (_o = {}, _o[HighContrastSelector] = {\n        backgroundColor: 'GrayText'\n      }, _o)\n    }, props.vertical ? {\n      width: '16px',\n      height: '1px',\n      transform: getRTL(theme) ? 'translateX(6px)' : 'translateX(-6px)'\n    } : {\n      width: '1px',\n      height: '16px',\n      transform: 'translateY(-6px)'\n    }],\n    valueLabel: [classNames.valueLabel, {\n      flexShrink: 1,\n      width: 30,\n      lineHeight: '1'\n    }, vertical ? {\n      margin: '0 auto',\n      whiteSpace: 'nowrap',\n      width: 40\n    } : {\n      margin: '0 8px',\n      whiteSpace: 'nowrap',\n      width: 40\n    }]\n  };\n};","map":{"version":3,"sources":["components/Slider/Slider.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { ISliderStyleProps, ISliderStyles } from './Slider.types';\nimport { getGlobalClassNames, HighContrastSelector, AnimationVariables, getFocusStyle } from '../../Styling';\nimport { getRTL } from '@uifabric/utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Slider',\n  enabled: 'ms-Slider-enabled',\n  disabled: 'ms-Slider-disabled',\n  row: 'ms-Slider-row',\n  column: 'ms-Slider-column',\n  container: 'ms-Slider-container',\n  slideBox: 'ms-Slider-slideBox',\n  line: 'ms-Slider-line',\n  thumb: 'ms-Slider-thumb',\n  activeSection: 'ms-Slider-active',\n  inactiveSection: 'ms-Slider-inactive',\n  valueLabel: 'ms-Slider-value',\n  showValue: 'ms-Slider-showValue',\n  showTransitions: 'ms-Slider-showTransitions',\n  zeroTick: 'ms-Slider-zeroTick',\n};\n\nexport const getStyles = (props: ISliderStyleProps): ISliderStyles => {\n  const { className, titleLabelClassName, theme, vertical, disabled, showTransitions, showValue } = props;\n  const { semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  /** Tokens:\n   *   The word \"active\" in the token refers to the selected section of the slider\n   *   The word \"inactive\" in the token refers to the unselected section of the slider */\n  const pressedActiveSectionColor = semanticColors.inputBackgroundCheckedHovered;\n  const hoveredActiveSectionColor = semanticColors.inputBackgroundChecked;\n  const hoveredPressedinactiveSectionColor = semanticColors.inputPlaceholderBackgroundChecked;\n  const restActiveSectionColor = semanticColors.smallInputBorder;\n  const restInactiveSectionColor = semanticColors.disabledBorder;\n\n  const disabledActiveSectionColor = semanticColors.disabledText;\n  const disabledInactiveSectionColor = semanticColors.disabledBackground;\n\n  const thumbBackgroundColor = semanticColors.inputBackground;\n  const thumbBorderColor = semanticColors.smallInputBorder;\n  const thumbDisabledBorderColor = semanticColors.disabledBorder;\n\n  const slideBoxActiveSectionStyles = !disabled && {\n    backgroundColor: pressedActiveSectionColor,\n    selectors: {\n      [HighContrastSelector]: {\n        backgroundColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideBoxInactiveSectionStyles = !disabled && {\n    backgroundColor: hoveredPressedinactiveSectionColor,\n    selectors: {\n      [HighContrastSelector]: {\n        borderColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideHoverSectionStyles = !disabled && {\n    backgroundColor: hoveredActiveSectionColor,\n    selectors: {\n      [HighContrastSelector]: {\n        backgroundColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideBoxActiveThumbStyles = !disabled && {\n    border: `2px solid ${pressedActiveSectionColor}`,\n    selectors: {\n      [HighContrastSelector]: {\n        borderColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideBoxActiveZeroTickStyles = !props.disabled && {\n    backgroundColor: semanticColors.inputPlaceholderBackgroundChecked,\n    selectors: {\n      [HighContrastSelector]: {\n        backgroundColor: 'Highlight',\n      },\n    },\n  };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        userSelect: 'none',\n      },\n      vertical && {\n        marginRight: 8,\n      },\n      ...[!disabled ? classNames.enabled : undefined],\n      ...[disabled ? classNames.disabled : undefined],\n      ...[!vertical ? classNames.row : undefined],\n      ...[vertical ? classNames.column : undefined],\n      className,\n    ],\n    titleLabel: [\n      {\n        padding: 0,\n      },\n      titleLabelClassName,\n    ],\n    container: [\n      classNames.container,\n      {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'center',\n      },\n      vertical && {\n        flexDirection: 'column',\n        height: '100%',\n        textAlign: 'center',\n        margin: '8px 0',\n      },\n    ],\n    slideBox: [\n      classNames.slideBox,\n      getFocusStyle(theme),\n      {\n        background: 'transparent',\n        border: 'none',\n        flexGrow: 1,\n        lineHeight: 28,\n        display: 'flex',\n        alignItems: 'center',\n        selectors: {\n          [`:active .${classNames.activeSection}`]: slideBoxActiveSectionStyles,\n          [`:hover .${classNames.activeSection}`]: slideHoverSectionStyles,\n          [`:active .${classNames.inactiveSection}`]: slideBoxInactiveSectionStyles,\n          [`:hover .${classNames.inactiveSection}`]: slideBoxInactiveSectionStyles,\n          [`:active .${classNames.thumb}`]: slideBoxActiveThumbStyles,\n          [`:hover .${classNames.thumb}`]: slideBoxActiveThumbStyles,\n          [`:active .${classNames.zeroTick}`]: slideBoxActiveZeroTickStyles,\n          [`:hover .${classNames.zeroTick}`]: slideBoxActiveZeroTickStyles,\n          [HighContrastSelector]: {\n            forcedColorAdjust: 'none',\n          },\n        },\n      },\n      vertical\n        ? {\n            height: '100%',\n            width: 28,\n            padding: '8px 0', // Make room for thumb at bottom of line\n          }\n        : {\n            height: 28,\n            width: 'auto',\n            padding: '0 8px', // Make room for thumb at ends of line\n          },\n      ...[showValue ? classNames.showValue : undefined],\n      ...[showTransitions ? classNames.showTransitions : undefined],\n    ],\n    thumb: [\n      classNames.thumb,\n      {\n        borderWidth: 2,\n        borderStyle: 'solid',\n        borderColor: thumbBorderColor,\n        borderRadius: 10,\n        boxSizing: 'border-box',\n        background: thumbBackgroundColor,\n        display: 'block',\n        width: 16,\n        height: 16,\n        position: 'absolute',\n      },\n      vertical\n        ? {\n            left: -6,\n            margin: '0 auto',\n            transform: 'translateY(8px)',\n          }\n        : {\n            top: -6,\n            transform: getRTL(theme) ? 'translateX(50%)' : 'translateX(-50%)',\n          },\n      showTransitions && {\n        transition: `left ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction1}`,\n      },\n      disabled && {\n        borderColor: thumbDisabledBorderColor,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n    ],\n    line: [\n      classNames.line,\n      {\n        display: 'flex',\n        position: 'relative',\n      },\n      vertical\n        ? {\n            height: '100%',\n            width: 4,\n            margin: '0 auto',\n            flexDirection: 'column-reverse',\n          }\n        : {\n            width: '100%',\n          },\n    ],\n    lineContainer: [\n      {\n        borderRadius: 4,\n        boxSizing: 'border-box',\n      },\n      vertical\n        ? {\n            width: 4,\n            height: '100%',\n          }\n        : {\n            height: 4,\n            width: '100%',\n          },\n    ],\n    activeSection: [\n      classNames.activeSection,\n      {\n        background: restActiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n          },\n        },\n      },\n      showTransitions && {\n        transition: `width ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction1}`,\n      },\n      disabled && {\n        background: disabledActiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'GrayText',\n            borderColor: 'GrayText',\n          },\n        },\n      },\n    ],\n    inactiveSection: [\n      classNames.inactiveSection,\n      {\n        background: restInactiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            border: '1px solid WindowText',\n          },\n        },\n      },\n      showTransitions && {\n        transition: `width ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction1}`,\n      },\n      disabled && {\n        background: disabledInactiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n    ],\n    zeroTick: [\n      classNames.zeroTick,\n      {\n        position: 'absolute',\n        background: semanticColors.disabledBorder,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n          },\n        },\n      },\n      props.disabled && {\n        background: semanticColors.disabledBackground,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'GrayText',\n          },\n        },\n      },\n      props.vertical\n        ? {\n            width: '16px',\n            height: '1px',\n            transform: getRTL(theme) ? 'translateX(6px)' : 'translateX(-6px)',\n          }\n        : {\n            width: '1px',\n            height: '16px',\n            transform: 'translateY(-6px)',\n          },\n    ],\n    valueLabel: [\n      classNames.valueLabel,\n      {\n        flexShrink: 1,\n        width: 30,\n        lineHeight: '1', // using a string here meaning it's relative to the size of the font\n      },\n      vertical\n        ? {\n            margin: '0 auto',\n            whiteSpace: 'nowrap',\n            width: 40,\n          }\n        : {\n            margin: '0 8px',\n            whiteSpace: 'nowrap',\n            width: 40,\n          },\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}