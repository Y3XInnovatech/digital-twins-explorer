{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __extends } from \"tslib\";\nimport { ApiKeyCredentials } from \"./apiKeyCredentials\";\nvar TopicCredentials = /** @class */function (_super) {\n  __extends(TopicCredentials, _super);\n  /**\n   * Creates a new EventGrid TopicCredentials object.\n   *\n   * @param topicKey - The EventGrid topic key\n   */\n  function TopicCredentials(topicKey) {\n    var _this = this;\n    if (!topicKey || topicKey && typeof topicKey !== \"string\") {\n      throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n    }\n    var options = {\n      inHeader: {\n        \"aeg-sas-key\": topicKey\n      }\n    };\n    _this = _super.call(this, options) || this;\n    return _this;\n  }\n  return TopicCredentials;\n}(ApiKeyCredentials);\nexport { TopicCredentials };","map":{"version":3,"sources":["../../../src/credentials/topicCredentials.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA,SAAS,iBAAiB,QAAiC,qBAAqB;AAEhF,IAAA,gBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAsC,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;EACpC;;;;AAIG;EACH,SAAA,gBAAA,CAAY,QAAgB,EAAA;IAA5B,IAAA,KAAA,GAAA,IAAA;IACE,IAAI,CAAC,QAAQ,IAAK,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAS,EAAE;MAC3D,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC;IACpF;IACD,IAAM,OAAO,GAA4B;MACvC,QAAQ,EAAE;QACR,aAAa,EAAE;MAChB;KACF;IACD,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA;;EAChB;EACF,OAAA,gBAAC;AAAD,CAAC,CAjBqC,iBAAiB,CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ApiKeyCredentials, ApiKeyCredentialOptions } from \"./apiKeyCredentials\";\n\nexport class TopicCredentials extends ApiKeyCredentials {\n  /**\n   * Creates a new EventGrid TopicCredentials object.\n   *\n   * @param topicKey - The EventGrid topic key\n   */\n  constructor(topicKey: string) {\n    if (!topicKey || (topicKey && typeof topicKey !== \"string\")) {\n      throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n    }\n    const options: ApiKeyCredentialOptions = {\n      inHeader: {\n        \"aeg-sas-key\": topicKey\n      }\n    };\n    super(options);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}