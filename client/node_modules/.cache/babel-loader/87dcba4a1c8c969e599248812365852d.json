{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar vpsc_1 = require(\"./vpsc\");\nvar rbtree_1 = require(\"./rbtree\");\nfunction computeGroupBounds(g) {\n  g.bounds = typeof g.leaves !== \"undefined\" ? g.leaves.reduce(function (r, c) {\n    return c.bounds.union(r);\n  }, Rectangle.empty()) : Rectangle.empty();\n  if (typeof g.groups !== \"undefined\") g.bounds = g.groups.reduce(function (r, c) {\n    return computeGroupBounds(c).union(r);\n  }, g.bounds);\n  g.bounds = g.bounds.inflate(g.padding);\n  return g.bounds;\n}\nexports.computeGroupBounds = computeGroupBounds;\nvar Rectangle = function () {\n  function Rectangle(x, X, y, Y) {\n    this.x = x;\n    this.X = X;\n    this.y = y;\n    this.Y = Y;\n  }\n  Rectangle.empty = function () {\n    return new Rectangle(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY);\n  };\n  Rectangle.prototype.cx = function () {\n    return (this.x + this.X) / 2;\n  };\n  Rectangle.prototype.cy = function () {\n    return (this.y + this.Y) / 2;\n  };\n  Rectangle.prototype.overlapX = function (r) {\n    var ux = this.cx(),\n      vx = r.cx();\n    if (ux <= vx && r.x < this.X) return this.X - r.x;\n    if (vx <= ux && this.x < r.X) return r.X - this.x;\n    return 0;\n  };\n  Rectangle.prototype.overlapY = function (r) {\n    var uy = this.cy(),\n      vy = r.cy();\n    if (uy <= vy && r.y < this.Y) return this.Y - r.y;\n    if (vy <= uy && this.y < r.Y) return r.Y - this.y;\n    return 0;\n  };\n  Rectangle.prototype.setXCentre = function (cx) {\n    var dx = cx - this.cx();\n    this.x += dx;\n    this.X += dx;\n  };\n  Rectangle.prototype.setYCentre = function (cy) {\n    var dy = cy - this.cy();\n    this.y += dy;\n    this.Y += dy;\n  };\n  Rectangle.prototype.width = function () {\n    return this.X - this.x;\n  };\n  Rectangle.prototype.height = function () {\n    return this.Y - this.y;\n  };\n  Rectangle.prototype.union = function (r) {\n    return new Rectangle(Math.min(this.x, r.x), Math.max(this.X, r.X), Math.min(this.y, r.y), Math.max(this.Y, r.Y));\n  };\n  Rectangle.prototype.lineIntersections = function (x1, y1, x2, y2) {\n    var sides = [[this.x, this.y, this.X, this.y], [this.X, this.y, this.X, this.Y], [this.X, this.Y, this.x, this.Y], [this.x, this.Y, this.x, this.y]];\n    var intersections = [];\n    for (var i = 0; i < 4; ++i) {\n      var r = Rectangle.lineIntersection(x1, y1, x2, y2, sides[i][0], sides[i][1], sides[i][2], sides[i][3]);\n      if (r !== null) intersections.push({\n        x: r.x,\n        y: r.y\n      });\n    }\n    return intersections;\n  };\n  Rectangle.prototype.rayIntersection = function (x2, y2) {\n    var ints = this.lineIntersections(this.cx(), this.cy(), x2, y2);\n    return ints.length > 0 ? ints[0] : null;\n  };\n  Rectangle.prototype.vertices = function () {\n    return [{\n      x: this.x,\n      y: this.y\n    }, {\n      x: this.X,\n      y: this.y\n    }, {\n      x: this.X,\n      y: this.Y\n    }, {\n      x: this.x,\n      y: this.Y\n    }];\n  };\n  Rectangle.lineIntersection = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    var dx12 = x2 - x1,\n      dx34 = x4 - x3,\n      dy12 = y2 - y1,\n      dy34 = y4 - y3,\n      denominator = dy34 * dx12 - dx34 * dy12;\n    if (denominator == 0) return null;\n    var dx31 = x1 - x3,\n      dy31 = y1 - y3,\n      numa = dx34 * dy31 - dy34 * dx31,\n      a = numa / denominator,\n      numb = dx12 * dy31 - dy12 * dx31,\n      b = numb / denominator;\n    if (a >= 0 && a <= 1 && b >= 0 && b <= 1) {\n      return {\n        x: x1 + a * dx12,\n        y: y1 + a * dy12\n      };\n    }\n    return null;\n  };\n  Rectangle.prototype.inflate = function (pad) {\n    return new Rectangle(this.x - pad, this.X + pad, this.y - pad, this.Y + pad);\n  };\n  return Rectangle;\n}();\nexports.Rectangle = Rectangle;\nfunction makeEdgeBetween(source, target, ah) {\n  var si = source.rayIntersection(target.cx(), target.cy()) || {\n      x: source.cx(),\n      y: source.cy()\n    },\n    ti = target.rayIntersection(source.cx(), source.cy()) || {\n      x: target.cx(),\n      y: target.cy()\n    },\n    dx = ti.x - si.x,\n    dy = ti.y - si.y,\n    l = Math.sqrt(dx * dx + dy * dy),\n    al = l - ah;\n  return {\n    sourceIntersection: si,\n    targetIntersection: ti,\n    arrowStart: {\n      x: si.x + al * dx / l,\n      y: si.y + al * dy / l\n    }\n  };\n}\nexports.makeEdgeBetween = makeEdgeBetween;\nfunction makeEdgeTo(s, target, ah) {\n  var ti = target.rayIntersection(s.x, s.y);\n  if (!ti) ti = {\n    x: target.cx(),\n    y: target.cy()\n  };\n  var dx = ti.x - s.x,\n    dy = ti.y - s.y,\n    l = Math.sqrt(dx * dx + dy * dy);\n  return {\n    x: ti.x - ah * dx / l,\n    y: ti.y - ah * dy / l\n  };\n}\nexports.makeEdgeTo = makeEdgeTo;\nvar Node = function () {\n  function Node(v, r, pos) {\n    this.v = v;\n    this.r = r;\n    this.pos = pos;\n    this.prev = makeRBTree();\n    this.next = makeRBTree();\n  }\n  return Node;\n}();\nvar Event = function () {\n  function Event(isOpen, v, pos) {\n    this.isOpen = isOpen;\n    this.v = v;\n    this.pos = pos;\n  }\n  return Event;\n}();\nfunction compareEvents(a, b) {\n  if (a.pos > b.pos) {\n    return 1;\n  }\n  if (a.pos < b.pos) {\n    return -1;\n  }\n  if (a.isOpen) {\n    return -1;\n  }\n  if (b.isOpen) {\n    return 1;\n  }\n  return 0;\n}\nfunction makeRBTree() {\n  return new rbtree_1.RBTree(function (a, b) {\n    return a.pos - b.pos;\n  });\n}\nvar xRect = {\n  getCentre: function (r) {\n    return r.cx();\n  },\n  getOpen: function (r) {\n    return r.y;\n  },\n  getClose: function (r) {\n    return r.Y;\n  },\n  getSize: function (r) {\n    return r.width();\n  },\n  makeRect: function (open, close, center, size) {\n    return new Rectangle(center - size / 2, center + size / 2, open, close);\n  },\n  findNeighbours: findXNeighbours\n};\nvar yRect = {\n  getCentre: function (r) {\n    return r.cy();\n  },\n  getOpen: function (r) {\n    return r.x;\n  },\n  getClose: function (r) {\n    return r.X;\n  },\n  getSize: function (r) {\n    return r.height();\n  },\n  makeRect: function (open, close, center, size) {\n    return new Rectangle(open, close, center - size / 2, center + size / 2);\n  },\n  findNeighbours: findYNeighbours\n};\nfunction generateGroupConstraints(root, f, minSep, isContained) {\n  if (isContained === void 0) {\n    isContained = false;\n  }\n  var padding = root.padding,\n    gn = typeof root.groups !== 'undefined' ? root.groups.length : 0,\n    ln = typeof root.leaves !== 'undefined' ? root.leaves.length : 0,\n    childConstraints = !gn ? [] : root.groups.reduce(function (ccs, g) {\n      return ccs.concat(generateGroupConstraints(g, f, minSep, true));\n    }, []),\n    n = (isContained ? 2 : 0) + ln + gn,\n    vs = new Array(n),\n    rs = new Array(n),\n    i = 0,\n    add = function (r, v) {\n      rs[i] = r;\n      vs[i++] = v;\n    };\n  if (isContained) {\n    var b = root.bounds,\n      c = f.getCentre(b),\n      s = f.getSize(b) / 2,\n      open = f.getOpen(b),\n      close = f.getClose(b),\n      min = c - s + padding / 2,\n      max = c + s - padding / 2;\n    root.minVar.desiredPosition = min;\n    add(f.makeRect(open, close, min, padding), root.minVar);\n    root.maxVar.desiredPosition = max;\n    add(f.makeRect(open, close, max, padding), root.maxVar);\n  }\n  if (ln) root.leaves.forEach(function (l) {\n    return add(l.bounds, l.variable);\n  });\n  if (gn) root.groups.forEach(function (g) {\n    var b = g.bounds;\n    add(f.makeRect(f.getOpen(b), f.getClose(b), f.getCentre(b), f.getSize(b)), g.minVar);\n  });\n  var cs = generateConstraints(rs, vs, f, minSep);\n  if (gn) {\n    vs.forEach(function (v) {\n      v.cOut = [], v.cIn = [];\n    });\n    cs.forEach(function (c) {\n      c.left.cOut.push(c), c.right.cIn.push(c);\n    });\n    root.groups.forEach(function (g) {\n      var gapAdjustment = (g.padding - f.getSize(g.bounds)) / 2;\n      g.minVar.cIn.forEach(function (c) {\n        return c.gap += gapAdjustment;\n      });\n      g.minVar.cOut.forEach(function (c) {\n        c.left = g.maxVar;\n        c.gap += gapAdjustment;\n      });\n    });\n  }\n  return childConstraints.concat(cs);\n}\nfunction generateConstraints(rs, vars, rect, minSep) {\n  var i,\n    n = rs.length;\n  var N = 2 * n;\n  console.assert(vars.length >= n);\n  var events = new Array(N);\n  for (i = 0; i < n; ++i) {\n    var r = rs[i];\n    var v = new Node(vars[i], r, rect.getCentre(r));\n    events[i] = new Event(true, v, rect.getOpen(r));\n    events[i + n] = new Event(false, v, rect.getClose(r));\n  }\n  events.sort(compareEvents);\n  var cs = new Array();\n  var scanline = makeRBTree();\n  for (i = 0; i < N; ++i) {\n    var e = events[i];\n    var v = e.v;\n    if (e.isOpen) {\n      scanline.insert(v);\n      rect.findNeighbours(v, scanline);\n    } else {\n      scanline.remove(v);\n      var makeConstraint = function (l, r) {\n        var sep = (rect.getSize(l.r) + rect.getSize(r.r)) / 2 + minSep;\n        cs.push(new vpsc_1.Constraint(l.v, r.v, sep));\n      };\n      var visitNeighbours = function (forward, reverse, mkcon) {\n        var u,\n          it = v[forward].iterator();\n        while ((u = it[forward]()) !== null) {\n          mkcon(u, v);\n          u[reverse].remove(v);\n        }\n      };\n      visitNeighbours(\"prev\", \"next\", function (u, v) {\n        return makeConstraint(u, v);\n      });\n      visitNeighbours(\"next\", \"prev\", function (u, v) {\n        return makeConstraint(v, u);\n      });\n    }\n  }\n  console.assert(scanline.size === 0);\n  return cs;\n}\nfunction findXNeighbours(v, scanline) {\n  var f = function (forward, reverse) {\n    var it = scanline.findIter(v);\n    var u;\n    while ((u = it[forward]()) !== null) {\n      var uovervX = u.r.overlapX(v.r);\n      if (uovervX <= 0 || uovervX <= u.r.overlapY(v.r)) {\n        v[forward].insert(u);\n        u[reverse].insert(v);\n      }\n      if (uovervX <= 0) {\n        break;\n      }\n    }\n  };\n  f(\"next\", \"prev\");\n  f(\"prev\", \"next\");\n}\nfunction findYNeighbours(v, scanline) {\n  var f = function (forward, reverse) {\n    var u = scanline.findIter(v)[forward]();\n    if (u !== null && u.r.overlapX(v.r) > 0) {\n      v[forward].insert(u);\n      u[reverse].insert(v);\n    }\n  };\n  f(\"next\", \"prev\");\n  f(\"prev\", \"next\");\n}\nfunction generateXConstraints(rs, vars) {\n  return generateConstraints(rs, vars, xRect, 1e-6);\n}\nexports.generateXConstraints = generateXConstraints;\nfunction generateYConstraints(rs, vars) {\n  return generateConstraints(rs, vars, yRect, 1e-6);\n}\nexports.generateYConstraints = generateYConstraints;\nfunction generateXGroupConstraints(root) {\n  return generateGroupConstraints(root, xRect, 1e-6);\n}\nexports.generateXGroupConstraints = generateXGroupConstraints;\nfunction generateYGroupConstraints(root) {\n  return generateGroupConstraints(root, yRect, 1e-6);\n}\nexports.generateYGroupConstraints = generateYGroupConstraints;\nfunction removeOverlaps(rs) {\n  var vs = rs.map(function (r) {\n    return new vpsc_1.Variable(r.cx());\n  });\n  var cs = generateXConstraints(rs, vs);\n  var solver = new vpsc_1.Solver(vs, cs);\n  solver.solve();\n  vs.forEach(function (v, i) {\n    return rs[i].setXCentre(v.position());\n  });\n  vs = rs.map(function (r) {\n    return new vpsc_1.Variable(r.cy());\n  });\n  cs = generateYConstraints(rs, vs);\n  solver = new vpsc_1.Solver(vs, cs);\n  solver.solve();\n  vs.forEach(function (v, i) {\n    return rs[i].setYCentre(v.position());\n  });\n}\nexports.removeOverlaps = removeOverlaps;\nvar IndexedVariable = function (_super) {\n  __extends(IndexedVariable, _super);\n  function IndexedVariable(index, w) {\n    var _this = _super.call(this, 0, w) || this;\n    _this.index = index;\n    return _this;\n  }\n  return IndexedVariable;\n}(vpsc_1.Variable);\nexports.IndexedVariable = IndexedVariable;\nvar Projection = function () {\n  function Projection(nodes, groups, rootGroup, constraints, avoidOverlaps) {\n    var _this = this;\n    if (rootGroup === void 0) {\n      rootGroup = null;\n    }\n    if (constraints === void 0) {\n      constraints = null;\n    }\n    if (avoidOverlaps === void 0) {\n      avoidOverlaps = false;\n    }\n    this.nodes = nodes;\n    this.groups = groups;\n    this.rootGroup = rootGroup;\n    this.avoidOverlaps = avoidOverlaps;\n    this.variables = nodes.map(function (v, i) {\n      return v.variable = new IndexedVariable(i, 1);\n    });\n    if (constraints) this.createConstraints(constraints);\n    if (avoidOverlaps && rootGroup && typeof rootGroup.groups !== 'undefined') {\n      nodes.forEach(function (v) {\n        if (!v.width || !v.height) {\n          v.bounds = new Rectangle(v.x, v.x, v.y, v.y);\n          return;\n        }\n        var w2 = v.width / 2,\n          h2 = v.height / 2;\n        v.bounds = new Rectangle(v.x - w2, v.x + w2, v.y - h2, v.y + h2);\n      });\n      computeGroupBounds(rootGroup);\n      var i = nodes.length;\n      groups.forEach(function (g) {\n        _this.variables[i] = g.minVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\n        _this.variables[i] = g.maxVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\n      });\n    }\n  }\n  Projection.prototype.createSeparation = function (c) {\n    return new vpsc_1.Constraint(this.nodes[c.left].variable, this.nodes[c.right].variable, c.gap, typeof c.equality !== \"undefined\" ? c.equality : false);\n  };\n  Projection.prototype.makeFeasible = function (c) {\n    var _this = this;\n    if (!this.avoidOverlaps) return;\n    var axis = 'x',\n      dim = 'width';\n    if (c.axis === 'x') axis = 'y', dim = 'height';\n    var vs = c.offsets.map(function (o) {\n      return _this.nodes[o.node];\n    }).sort(function (a, b) {\n      return a[axis] - b[axis];\n    });\n    var p = null;\n    vs.forEach(function (v) {\n      if (p) {\n        var nextPos = p[axis] + p[dim];\n        if (nextPos > v[axis]) {\n          v[axis] = nextPos;\n        }\n      }\n      p = v;\n    });\n  };\n  Projection.prototype.createAlignment = function (c) {\n    var _this = this;\n    var u = this.nodes[c.offsets[0].node].variable;\n    this.makeFeasible(c);\n    var cs = c.axis === 'x' ? this.xConstraints : this.yConstraints;\n    c.offsets.slice(1).forEach(function (o) {\n      var v = _this.nodes[o.node].variable;\n      cs.push(new vpsc_1.Constraint(u, v, o.offset, true));\n    });\n  };\n  Projection.prototype.createConstraints = function (constraints) {\n    var _this = this;\n    var isSep = function (c) {\n      return typeof c.type === 'undefined' || c.type === 'separation';\n    };\n    this.xConstraints = constraints.filter(function (c) {\n      return c.axis === \"x\" && isSep(c);\n    }).map(function (c) {\n      return _this.createSeparation(c);\n    });\n    this.yConstraints = constraints.filter(function (c) {\n      return c.axis === \"y\" && isSep(c);\n    }).map(function (c) {\n      return _this.createSeparation(c);\n    });\n    constraints.filter(function (c) {\n      return c.type === 'alignment';\n    }).forEach(function (c) {\n      return _this.createAlignment(c);\n    });\n  };\n  Projection.prototype.setupVariablesAndBounds = function (x0, y0, desired, getDesired) {\n    this.nodes.forEach(function (v, i) {\n      if (v.fixed) {\n        v.variable.weight = v.fixedWeight ? v.fixedWeight : 1000;\n        desired[i] = getDesired(v);\n      } else {\n        v.variable.weight = 1;\n      }\n      var w = (v.width || 0) / 2,\n        h = (v.height || 0) / 2;\n      var ix = x0[i],\n        iy = y0[i];\n      v.bounds = new Rectangle(ix - w, ix + w, iy - h, iy + h);\n    });\n  };\n  Projection.prototype.xProject = function (x0, y0, x) {\n    if (!this.rootGroup && !(this.avoidOverlaps || this.xConstraints)) return;\n    this.project(x0, y0, x0, x, function (v) {\n      return v.px;\n    }, this.xConstraints, generateXGroupConstraints, function (v) {\n      return v.bounds.setXCentre(x[v.variable.index] = v.variable.position());\n    }, function (g) {\n      var xmin = x[g.minVar.index] = g.minVar.position();\n      var xmax = x[g.maxVar.index] = g.maxVar.position();\n      var p2 = g.padding / 2;\n      g.bounds.x = xmin - p2;\n      g.bounds.X = xmax + p2;\n    });\n  };\n  Projection.prototype.yProject = function (x0, y0, y) {\n    if (!this.rootGroup && !this.yConstraints) return;\n    this.project(x0, y0, y0, y, function (v) {\n      return v.py;\n    }, this.yConstraints, generateYGroupConstraints, function (v) {\n      return v.bounds.setYCentre(y[v.variable.index] = v.variable.position());\n    }, function (g) {\n      var ymin = y[g.minVar.index] = g.minVar.position();\n      var ymax = y[g.maxVar.index] = g.maxVar.position();\n      var p2 = g.padding / 2;\n      g.bounds.y = ymin - p2;\n      ;\n      g.bounds.Y = ymax + p2;\n    });\n  };\n  Projection.prototype.projectFunctions = function () {\n    var _this = this;\n    return [function (x0, y0, x) {\n      return _this.xProject(x0, y0, x);\n    }, function (x0, y0, y) {\n      return _this.yProject(x0, y0, y);\n    }];\n  };\n  Projection.prototype.project = function (x0, y0, start, desired, getDesired, cs, generateConstraints, updateNodeBounds, updateGroupBounds) {\n    this.setupVariablesAndBounds(x0, y0, desired, getDesired);\n    if (this.rootGroup && this.avoidOverlaps) {\n      computeGroupBounds(this.rootGroup);\n      cs = cs.concat(generateConstraints(this.rootGroup));\n    }\n    this.solve(this.variables, cs, start, desired);\n    this.nodes.forEach(updateNodeBounds);\n    if (this.rootGroup && this.avoidOverlaps) {\n      this.groups.forEach(updateGroupBounds);\n      computeGroupBounds(this.rootGroup);\n    }\n  };\n  Projection.prototype.solve = function (vs, cs, starting, desired) {\n    var solver = new vpsc_1.Solver(vs, cs);\n    solver.setStartingPositions(starting);\n    solver.setDesiredPositions(desired);\n    solver.solve();\n  };\n  return Projection;\n}();\nexports.Projection = Projection;","map":{"version":3,"sources":["../../WebCola/src/rectangle.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAkBI,SAAgB,kBAAkB,CAAC,CAAkB,EAAA;EACjD,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,GACtC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,CAAY,EAAE,CAAC,EAAA;IAAK,OAAA,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;EAAjB,CAAiB,EAAE,SAAS,CAAC,KAAK,CAAA,CAAE,CAAC,GAC1E,SAAS,CAAC,KAAK,CAAA,CAAE;EACrB,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAC/B,CAAC,CAAC,MAAM,GAAc,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,CAAY,EAAE,CAAC,EAAA;IAAK,OAAA,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;EAA9B,CAA8B,EAAE,CAAC,CAAC,MAAM,CAAC;EACxG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;EACtC,OAAO,CAAC,CAAC,MAAM;AACnB;AARA,OAAA,CAAA,kBAAA,GAAA,kBAAA;AAUA,IAAA,SAAA,GAAA,YAAA;EACI,SAAA,SAAA,CACW,CAAS,EACT,CAAS,EACT,CAAS,EACT,CAAS,EAAA;IAHT,IAAA,CAAA,CAAC,GAAD,CAAC;IACD,IAAA,CAAA,CAAC,GAAD,CAAC;IACD,IAAA,CAAA,CAAC,GAAD,CAAC;IACD,IAAA,CAAA,CAAC,GAAD,CAAC;EAAY;EAEjB,SAAA,CAAA,KAAK,GAAZ,YAAA;IAA4B,OAAO,IAAI,SAAS,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,CAAC;EAAE,CAAC;EAE3J,SAAA,CAAA,SAAA,CAAA,EAAE,GAAF,YAAA;IAAe,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;EAAE,CAAC;EAE9C,SAAA,CAAA,SAAA,CAAA,EAAE,GAAF,YAAA;IAAe,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;EAAE,CAAC;EAE9C,SAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,CAAY,EAAA;IACjB,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA,CAAE;MAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAA,CAAE;IAC/B,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACjD,OAAO,CAAC;EACZ,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,CAAY,EAAA;IACjB,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA,CAAE;MAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAA,CAAE;IAC/B,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACjD,OAAO,CAAC;EACZ,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,UAAU,GAAV,UAAW,EAAU,EAAA;IACjB,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA,CAAE;IACvB,IAAI,CAAC,CAAC,IAAI,EAAE;IACZ,IAAI,CAAC,CAAC,IAAI,EAAE;EAChB,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,UAAU,GAAV,UAAW,EAAU,EAAA;IACjB,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA,CAAE;IACvB,IAAI,CAAC,CAAC,IAAI,EAAE;IACZ,IAAI,CAAC,CAAC,IAAI,EAAE;EAChB,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,KAAK,GAAL,YAAA;IACI,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;EAC1B,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,MAAM,GAAN,YAAA;IACI,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;EAC1B,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,KAAK,GAAL,UAAM,CAAY,EAAA;IACd,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACpH,CAAC;EAWD,SAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,UAAkB,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAA;IAC5D,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EACrC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAChC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EACpC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,IAAI,aAAa,GAAG,EAAE;IACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;MACxB,IAAI,CAAC,GAAG,SAAS,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtG,IAAI,CAAC,KAAK,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC;QAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAAE,CAAC,EAAE,CAAC,CAAC;MAAC,CAAE,CAAC;IACzD;IACD,OAAO,aAAa;EACxB,CAAC;EAUD,SAAA,CAAA,SAAA,CAAA,eAAe,GAAf,UAAgB,EAAU,EAAE,EAAU,EAAA;IAClC,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,EAAE,CAAA,CAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC/D,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI;EAC3C,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACI,OAAO,CACH;MAAE,CAAC,EAAE,IAAI,CAAC,CAAC;MAAE,CAAC,EAAE,IAAI,CAAC;IAAC,CAAE,EACxB;MAAE,CAAC,EAAE,IAAI,CAAC,CAAC;MAAE,CAAC,EAAE,IAAI,CAAC;IAAC,CAAE,EACxB;MAAE,CAAC,EAAE,IAAI,CAAC,CAAC;MAAE,CAAC,EAAE,IAAI,CAAC;IAAC,CAAE,EACxB;MAAE,CAAC,EAAE,IAAI,CAAC,CAAC;MAAE,CAAC,EAAE,IAAI,CAAC;IAAC,CAAE,CAAC;EACjC,CAAC;EAEM,SAAA,CAAA,gBAAgB,GAAvB,UACI,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EAAA;IACtB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE;MAAE,IAAI,GAAG,EAAE,GAAG,EAAE;MAC9B,IAAI,GAAG,EAAE,GAAG,EAAE;MAAE,IAAI,GAAG,EAAE,GAAG,EAAE;MAC9B,WAAW,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;IAC3C,IAAI,WAAW,IAAI,CAAC,EAAE,OAAO,IAAI;IACjC,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE;MAAE,IAAI,GAAG,EAAE,GAAG,EAAE;MAC9B,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;MAChC,CAAC,GAAG,IAAI,GAAG,WAAW;MACtB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;MAChC,CAAC,GAAG,IAAI,GAAG,WAAW;IAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;MACtC,OAAO;QACH,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI;QAChB,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG;OACf;IACJ;IACD,OAAO,IAAI;EACf,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,GAAW,EAAA;IACf,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;EAChF,CAAC;EACL,OAAA,SAAC;AAAD,CAAC,CAAA,CAAA;AAxHY,OAAA,CAAA,SAAA,GAAA,SAAA;AAqIb,SAAgB,eAAe,CAAC,MAAiB,EAAE,MAAiB,EAAE,EAAU,EAAA;EAE5E,IAAM,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAA,CAAE,EAAE,MAAM,CAAC,EAAE,CAAA,CAAE,CAAC,IAAI;MAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAA,CAAE;MAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAA;IAAE,CAAE;IAC7F,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAA,CAAE,EAAE,MAAM,CAAC,EAAE,CAAA,CAAE,CAAC,IAAI;MAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAA,CAAE;MAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAA;IAAE,CAAE;IAC3F,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAChB,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAChB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAAE,EAAE,GAAG,CAAC,GAAG,EAAE;EACjD,OAAO;IACH,kBAAkB,EAAE,EAAE;IACtB,kBAAkB,EAAE,EAAE;IACtB,UAAU,EAAE;MAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;IAAC;GAC7D;AACL;AAZA,OAAA,CAAA,eAAA,GAAA,eAAA;AAuBA,SAAgB,UAAU,CAAC,CAA2B,EAAE,MAAiB,EAAE,EAAU,EAAA;EACjF,IAAI,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACzC,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG;IAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAA,CAAE;IAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAA;EAAE,CAAE;EAChD,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACf,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACf,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACpC,OAAO;IAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;EAAC,CAAE;AAC3D;AAPA,OAAA,CAAA,UAAA,GAAA,UAAA;AASA,IAAA,IAAA,GAAA,YAAA;EAII,SAAA,IAAA,CAAmB,CAAW,EAAS,CAAY,EAAS,GAAW,EAAA;IAApD,IAAA,CAAA,CAAC,GAAD,CAAC;IAAmB,IAAA,CAAA,CAAC,GAAD,CAAC;IAAoB,IAAA,CAAA,GAAG,GAAH,GAAG;IAC3D,IAAI,CAAC,IAAI,GAAG,UAAU,CAAA,CAAE;IACxB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAA,CAAE;EAC5B;EACJ,OAAA,IAAC;AAAD,CAAC,CAAA,CAAA;AAED,IAAA,KAAA,GAAA,YAAA;EACI,SAAA,KAAA,CAAmB,MAAe,EAAS,CAAO,EAAS,GAAW,EAAA;IAAnD,IAAA,CAAA,MAAM,GAAN,MAAM;IAAkB,IAAA,CAAA,CAAC,GAAD,CAAC;IAAe,IAAA,CAAA,GAAG,GAAH,GAAG;EAAW;EAC7E,OAAA,KAAC;AAAD,CAAC,CAAA,CAAA;AAED,SAAS,aAAa,CAAC,CAAQ,EAAE,CAAQ,EAAA;EACrC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;IACf,OAAO,CAAC;EACX;EACD,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;IACf,OAAO,CAAC,CAAC;EACZ;EACD,IAAI,CAAC,CAAC,MAAM,EAAE;IAEV,OAAO,CAAC,CAAC;EACZ;EACD,IAAI,CAAC,CAAC,MAAM,EAAE;IAEV,OAAO,CAAC;EACX;EACD,OAAO,CAAC;AACZ;AAEA,SAAS,UAAU,CAAA,EAAA;EACf,OAAO,IAAI,QAAA,CAAA,MAAM,CAAO,UAAC,CAAC,EAAE,CAAC,EAAA;IAAK,OAAA,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG;EAAb,CAAa,CAAC;AACpD;AAWA,IAAI,KAAK,GAAkB;EACvB,SAAS,EAAE,SAAA,CAAA,CAAC,EAAA;IAAG,OAAA,CAAC,CAAC,EAAE,CAAA,CAAE;EAAN,CAAM;EACrB,OAAO,EAAE,SAAA,CAAA,CAAC,EAAA;IAAG,OAAA,CAAC,CAAC,CAAC;EAAH,CAAG;EAChB,QAAQ,EAAE,SAAA,CAAA,CAAC,EAAA;IAAG,OAAA,CAAC,CAAC,CAAC;EAAH,CAAG;EACjB,OAAO,EAAE,SAAA,CAAA,CAAC,EAAA;IAAG,OAAA,CAAC,CAAC,KAAK,CAAA,CAAE;EAAT,CAAS;EACtB,QAAQ,EAAE,SAAA,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAA;IAAK,OAAA,IAAI,SAAS,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;EAAhE,CAAgE;EACzG,cAAc,EAAE;CACnB;AAED,IAAI,KAAK,GAAkB;EACvB,SAAS,EAAE,SAAA,CAAA,CAAC,EAAA;IAAG,OAAA,CAAC,CAAC,EAAE,CAAA,CAAE;EAAN,CAAM;EACrB,OAAO,EAAE,SAAA,CAAA,CAAC,EAAA;IAAG,OAAA,CAAC,CAAC,CAAC;EAAH,CAAG;EAChB,QAAQ,EAAE,SAAA,CAAA,CAAC,EAAA;IAAG,OAAA,CAAC,CAAC,CAAC;EAAH,CAAG;EACjB,OAAO,EAAE,SAAA,CAAA,CAAC,EAAA;IAAG,OAAA,CAAC,CAAC,MAAM,CAAA,CAAE;EAAV,CAAU;EACvB,QAAQ,EAAE,SAAA,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAA;IAAK,OAAA,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC;EAAhE,CAAgE;EACzG,cAAc,EAAE;CACnB;AAED,SAAS,wBAAwB,CAAC,IAAqB,EAAE,CAAgB,EAAE,MAAc,EAAE,WAA4B,EAAA;EAA5B,IAAA,WAAA,KAAA,KAAA,CAAA,EAAA;IAAA,WAAA,GAAA,KAA4B;EAAA;EAEnH,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO;IACtB,EAAE,GAAG,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;IAChE,EAAE,GAAG,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;IAChE,gBAAgB,GAAiB,CAAC,EAAE,GAAG,EAAE,GACvC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,GAAiB,EAAE,CAAC,EAAA;MAAK,OAAA,GAAG,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAAxD,CAAwD,EAAE,EAAE,CAAC;IAC5G,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE;IACnC,EAAE,GAAe,IAAI,KAAK,CAAC,CAAC,CAAC;IAC7B,EAAE,GAAgB,IAAI,KAAK,CAAC,CAAC,CAAC;IAC9B,CAAC,GAAG,CAAC;IACL,GAAG,GAAG,SAAA,CAAC,CAAC,EAAE,CAAC,EAAA;MAAO,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;MAAE,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;IAAC,CAAC;EAC9C,IAAI,WAAW,EAAE;IAEb,IAAI,CAAC,GAAc,IAAI,CAAC,MAAM;MAC1B,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;MAAE,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;MACxC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;MAAE,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC1C,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC;MAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC;IACxD,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,GAAG;IACjC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IACvD,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,GAAG;IACjC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;EAC1D;EACD,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;IAAI,OAAA,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC;EAAzB,CAAyB,CAAC;EAC3D,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;IACzB,IAAI,CAAC,GAAc,CAAC,CAAC,MAAM;IAC3B,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;EACxF,CAAC,CAAC;EACF,IAAI,EAAE,GAAG,mBAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC;EAC/C,IAAI,EAAE,EAAE;IACJ,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;MAAM,CAAC,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,EAAE;IAAC,CAAC,CAAC;IAC5C,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAAC,CAAC,CAAC;IAC7D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;MACjB,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;MACzD,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;QAAI,OAAA,CAAC,CAAC,GAAG,IAAI,aAAa;MAAtB,CAAsB,CAAC;MACjD,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;QAAM,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM;QAAE,CAAC,CAAC,GAAG,IAAI,aAAa;MAAE,CAAC,CAAC;IAC9E,CAAC,CAAC;EACL;EACD,OAAO,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;AACtC;AAEA,SAAS,mBAAmB,CAAC,EAAe,EAAE,IAAgB,EAC1D,IAAmB,EAAE,MAAc,EAAA;EAEnC,IAAI,CAAC;IAAE,CAAC,GAAG,EAAE,CAAC,MAAM;EACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;EACb,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;EAChC,IAAI,MAAM,GAAG,IAAI,KAAK,CAAQ,CAAC,CAAC;EAChC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACpB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACb,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC/C,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/C,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD;EACD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;EAC1B,IAAI,EAAE,GAAG,IAAI,KAAK,CAAA,CAAc;EAChC,IAAI,QAAQ,GAAG,UAAU,CAAA,CAAE;EAC3B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACpB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;IACjB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACX,IAAI,CAAC,CAAC,MAAM,EAAE;MACV,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;MAClB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,QAAQ,CAAC;KACnC,MAAM;MAEH,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;MAClB,IAAI,cAAc,GAAG,SAAA,CAAC,CAAC,EAAE,CAAC,EAAA;QACtB,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM;QAC9D,EAAE,CAAC,IAAI,CAAC,IAAI,MAAA,CAAA,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;MAC1C,CAAC;MACD,IAAI,eAAe,GAAG,SAAA,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAA;QAC1C,IAAI,CAAC;UAAE,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAA,CAAE;QACjC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAA,CAAE,MAAM,IAAI,EAAE;UACjC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UACX,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACvB;MACL,CAAC;MACD,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,EAAA;QAAK,OAAA,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC;MAApB,CAAoB,CAAC;MAC/D,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,EAAA;QAAK,OAAA,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC;MAApB,CAAoB,CAAC;IAClE;EACJ;EACD,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,CAAC;EACnC,OAAO,EAAE;AACb;AAEA,SAAS,eAAe,CAAC,CAAO,EAAE,QAAsB,EAAA;EACpD,IAAI,CAAC,GAAG,SAAA,CAAC,OAAO,EAAE,OAAO,EAAA;IACrB,IAAI,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7B,IAAI,CAAC;IACL,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAA,CAAE,MAAM,IAAI,EAAE;MACjC,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAC9C,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;MACvB;MACD,IAAI,OAAO,IAAI,CAAC,EAAE;QACd;MACH;IACJ;EACL,CAAC;EACD,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;EACjB,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;AACrB;AAEA,SAAS,eAAe,CAAC,CAAO,EAAE,QAAsB,EAAA;EACpD,IAAI,CAAC,GAAG,SAAA,CAAC,OAAO,EAAE,OAAO,EAAA;IACrB,IAAI,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA,CAAE;IACvC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MACrC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACvB;EACL,CAAC;EACD,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;EACjB,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;AACrB;AAEA,SAAgB,oBAAoB,CAAC,EAAe,EAAE,IAAgB,EAAA;EAClE,OAAO,mBAAmB,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;AACrD;AAFA,OAAA,CAAA,oBAAA,GAAA,oBAAA;AAIA,SAAgB,oBAAoB,CAAC,EAAe,EAAE,IAAgB,EAAA;EAClE,OAAO,mBAAmB,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;AACrD;AAFA,OAAA,CAAA,oBAAA,GAAA,oBAAA;AAIA,SAAgB,yBAAyB,CAAC,IAAqB,EAAA;EAC3D,OAAO,wBAAwB,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;AACtD;AAFA,OAAA,CAAA,yBAAA,GAAA,yBAAA;AAIA,SAAgB,yBAAyB,CAAC,IAAqB,EAAA;EAC3D,OAAO,wBAAwB,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;AACtD;AAFA,OAAA,CAAA,yBAAA,GAAA,yBAAA;AAIA,SAAgB,cAAc,CAAC,EAAe,EAAA;EAC1C,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,EAAA;IAAI,OAAA,IAAI,MAAA,CAAA,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAA,CAAE,CAAC;EAApB,CAAoB,CAAC;EAC1C,IAAI,EAAE,GAAG,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC;EACrC,IAAI,MAAM,GAAG,IAAI,MAAA,CAAA,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;EAC/B,MAAM,CAAC,KAAK,CAAA,CAAE;EACd,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,EAAA;IAAK,OAAA,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAA,CAAE,CAAC;EAA9B,CAA8B,CAAC;EACpD,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,EAAA;IAAG,OAAA,IAAI,MAAA,CAAA,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAA,CAAE,CAAC;EAApB,CAAoB,CAAC;EACrC,EAAE,GAAG,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC;EACjC,MAAM,GAAG,IAAI,MAAA,CAAA,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;EAC3B,MAAM,CAAC,KAAK,CAAA,CAAE;EACd,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,EAAA;IAAK,OAAA,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAA,CAAE,CAAC;EAA9B,CAA8B,CAAC;AACxD;AAXA,OAAA,CAAA,cAAA,GAAA,cAAA;AAwBA,IAAA,eAAA,GAAA,UAAA,MAAA,EAAA;EAAqC,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;EACjC,SAAA,eAAA,CAAmB,KAAa,EAAE,CAAS,EAAA;IAA3C,IAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,CAAC,EAAE,CAAC,CAAC,IAAA,IAAA;IADI,KAAA,CAAA,KAAK,GAAL,KAAK;;EAExB;EACJ,OAAA,eAAC;AAAD,CAAC,CAJoC,MAAA,CAAA,QAAQ,CAAA;AAAhC,OAAA,CAAA,eAAA,GAAA,eAAA;AAMb,IAAA,UAAA,GAAA,YAAA;EAKI,SAAA,UAAA,CAAoB,KAAkB,EAC1B,MAAyB,EACzB,SAAiC,EACzC,WAAwB,EAChB,aAA8B,EAAA;IAJ1C,IAAA,KAAA,GAAA,IAAA;IAEY,IAAA,SAAA,KAAA,KAAA,CAAA,EAAA;MAAA,SAAA,GAAA,IAAiC;IAAA;IACzC,IAAA,WAAA,KAAA,KAAA,CAAA,EAAA;MAAA,WAAA,GAAA,IAAwB;IAAA;IAChB,IAAA,aAAA,KAAA,KAAA,CAAA,EAAA;MAAA,aAAA,GAAA,KAA8B;IAAA;IAJtB,IAAA,CAAA,KAAK,GAAL,KAAK;IACb,IAAA,CAAA,MAAM,GAAN,MAAM;IACN,IAAA,CAAA,SAAS,GAAT,SAAS;IAET,IAAA,CAAA,aAAa,GAAb,aAAa;IAErB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,EAAA;MAC5B,OAAO,CAAC,CAAC,QAAQ,GAAG,IAAI,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC,CAAC;IAEF,IAAI,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC;IAEpD,IAAI,aAAa,IAAI,SAAS,IAAI,OAAO,SAAS,CAAC,MAAM,KAAK,WAAW,EAAE;MACvE,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;QAC1B,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,EACzB;UAEC,CAAC,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAC5C;QACA;QACc,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC;UAAE,EAAE,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC;QACvC,CAAC,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;MACpE,CAAC,CAAC;MACF,kBAAkB,CAAC,SAAS,CAAC;MAC7B,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM;MACpB,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;QACZ,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,eAAe,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,SAAS,KAAK,WAAW,GAAG,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;QAChH,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,eAAe,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,SAAS,KAAK,WAAW,GAAG,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;MACpH,CAAC,CAAC;IACL;EACL;EAGQ,UAAA,CAAA,SAAA,CAAA,gBAAgB,GAAxB,UAAyB,CAAM,EAAA;IAC3B,OAAO,IAAI,MAAA,CAAA,UAAU,CACjB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAC3B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAC5B,CAAC,CAAC,GAAG,EACL,OAAO,CAAC,CAAC,QAAQ,KAAK,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;EAC/D,CAAC;EAGO,UAAA,CAAA,SAAA,CAAA,YAAY,GAApB,UAAqB,CAAM,EAAA;IAA3B,IAAA,KAAA,GAAA,IAAA;IACI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;IAEzB,IAAI,IAAI,GAAG,GAAG;MAAE,GAAG,GAAG,OAAO;IAC7B,IAAI,CAAC,CAAC,IAAI,KAAK,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,QAAQ;IAC9C,IAAI,EAAE,GAAgB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IAAlB,CAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,EAAA;MAAK,OAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IAAjB,CAAiB,CAAC;IAC9F,IAAI,CAAC,GAAc,IAAI;IACvB,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;MAER,IAAI,CAAC,EAAE;QACH,IAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QAC9B,IAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;UACnB,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO;QACpB;MACJ;MACD,CAAC,GAAG,CAAC;IACT,CAAC,CAAC;EACN,CAAC;EAEO,UAAA,CAAA,SAAA,CAAA,eAAe,GAAvB,UAAwB,CAAM,EAAA;IAA9B,IAAA,KAAA,GAAA,IAAA;IACI,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ;IAC9C,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACpB,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY;IAC/D,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;MACxB,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ;MACnC,EAAE,CAAC,IAAI,CAAC,IAAI,MAAA,CAAA,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;EAEO,UAAA,CAAA,SAAA,CAAA,iBAAiB,GAAzB,UAA0B,WAAkB,EAAA;IAA5C,IAAA,KAAA,GAAA,IAAA;IACI,IAAI,KAAK,GAAG,SAAA,CAAA,CAAC,EAAA;MAAI,OAAA,OAAO,CAAC,CAAC,IAAI,KAAK,WAAW,IAAI,CAAC,CAAC,IAAI,KAAK,YAAY;IAAxD,CAAwD;IACzE,IAAI,CAAC,YAAY,GAAG,WAAW,CAC1B,MAAM,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;IAA1B,CAA0B,CAAC,CACvC,GAAG,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAAxB,CAAwB,CAAC;IACvC,IAAI,CAAC,YAAY,GAAG,WAAW,CAC1B,MAAM,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;IAA1B,CAA0B,CAAC,CACvC,GAAG,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAAxB,CAAwB,CAAC;IACvC,WAAW,CACN,MAAM,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,IAAI,KAAK,WAAW;IAAtB,CAAsB,CAAC,CACnC,OAAO,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC;IAAvB,CAAuB,CAAC;EAC9C,CAAC;EAEO,UAAA,CAAA,SAAA,CAAA,uBAAuB,GAA/B,UAAgC,EAAY,EAAE,EAAY,EAAE,OAAiB,EAAE,UAAoC,EAAA;IAC/G,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,EAAA;MACpB,IAAI,CAAC,CAAC,KAAK,EAAE;QACT,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI;QACxD,OAAO,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;OAC7B,MAAM;QACH,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;MACxB;MACD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC;QAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC;MACnD,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC5D,CAAC,CAAC;EACN,CAAC;EAED,UAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,EAAY,EAAE,EAAY,EAAE,CAAW,EAAA;IAC5C,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;IACnE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,UAAA,CAAC,EAAA;MAAG,OAAA,CAAC,CAAC,EAAE;IAAJ,CAAI,EAAE,IAAI,CAAC,YAAY,EAAE,yBAAyB,EAC9E,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAmB,CAAC,CAAC,QAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAA,CAAE,CAAC;IAAnF,CAAmF,EACxF,UAAA,CAAC,EAAA;MACG,IAAI,IAAI,GAAG,CAAC,CAAmB,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAA,CAAE;MACrE,IAAI,IAAI,GAAG,CAAC,CAAmB,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAA,CAAE;MACrE,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC;MACtB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;MACtB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;IAC1B,CAAC,CAAC;EACV,CAAC;EAED,UAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,EAAY,EAAE,EAAY,EAAE,CAAW,EAAA;IAC5C,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;IAC3C,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,UAAA,CAAC,EAAA;MAAG,OAAA,CAAC,CAAC,EAAE;IAAJ,CAAI,EAAE,IAAI,CAAC,YAAY,EAAE,yBAAyB,EAC9E,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAmB,CAAC,CAAC,QAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAA,CAAE,CAAC;IAAnF,CAAmF,EACxF,UAAA,CAAC,EAAA;MACG,IAAI,IAAI,GAAG,CAAC,CAAmB,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAA,CAAE;MACrE,IAAI,IAAI,GAAG,CAAC,CAAmB,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAA,CAAE;MACrE,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC;MACtB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;MAAC;MACvB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;IAC1B,CAAC,CAAC;EACV,CAAC;EAED,UAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,YAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IACI,OAAO,CACH,UAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAA;MAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAAxB,CAAwB,EACvC,UAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAA;MAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAAxB,CAAwB,CAC1C;EACL,CAAC;EAEO,UAAA,CAAA,SAAA,CAAA,OAAO,GAAf,UAAgB,EAAY,EAAE,EAAY,EAAE,KAAe,EAAE,OAAiB,EAC1E,UAAoC,EACpC,EAAgB,EAChB,mBAAyD,EACzD,gBAAuC,EACvC,iBAA8C,EAAA;IAE9C,IAAI,CAAC,uBAAuB,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,CAAC;IACzD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,EAAE;MACtC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC;MAClC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtD;IACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC;IAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC;IACpC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,EAAE;MACtC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC;MACtC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC;IACrC;EACL,CAAC;EAEO,UAAA,CAAA,SAAA,CAAA,KAAK,GAAb,UAAc,EAAc,EAAE,EAAgB,EAAE,QAAkB,EAAE,OAAiB,EAAA;IACjF,IAAI,MAAM,GAAG,IAAI,MAAA,CAAA,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;IAC/B,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC;IACrC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC;IACnC,MAAM,CAAC,KAAK,CAAA,CAAE;EAClB,CAAC;EACL,OAAA,UAAC;AAAD,CAAC,CAAA,CAAA;AAlKY,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar vpsc_1 = require(\"./vpsc\");\r\nvar rbtree_1 = require(\"./rbtree\");\r\nfunction computeGroupBounds(g) {\r\n    g.bounds = typeof g.leaves !== \"undefined\" ?\r\n        g.leaves.reduce(function (r, c) { return c.bounds.union(r); }, Rectangle.empty()) :\r\n        Rectangle.empty();\r\n    if (typeof g.groups !== \"undefined\")\r\n        g.bounds = g.groups.reduce(function (r, c) { return computeGroupBounds(c).union(r); }, g.bounds);\r\n    g.bounds = g.bounds.inflate(g.padding);\r\n    return g.bounds;\r\n}\r\nexports.computeGroupBounds = computeGroupBounds;\r\nvar Rectangle = (function () {\r\n    function Rectangle(x, X, y, Y) {\r\n        this.x = x;\r\n        this.X = X;\r\n        this.y = y;\r\n        this.Y = Y;\r\n    }\r\n    Rectangle.empty = function () { return new Rectangle(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY); };\r\n    Rectangle.prototype.cx = function () { return (this.x + this.X) / 2; };\r\n    Rectangle.prototype.cy = function () { return (this.y + this.Y) / 2; };\r\n    Rectangle.prototype.overlapX = function (r) {\r\n        var ux = this.cx(), vx = r.cx();\r\n        if (ux <= vx && r.x < this.X)\r\n            return this.X - r.x;\r\n        if (vx <= ux && this.x < r.X)\r\n            return r.X - this.x;\r\n        return 0;\r\n    };\r\n    Rectangle.prototype.overlapY = function (r) {\r\n        var uy = this.cy(), vy = r.cy();\r\n        if (uy <= vy && r.y < this.Y)\r\n            return this.Y - r.y;\r\n        if (vy <= uy && this.y < r.Y)\r\n            return r.Y - this.y;\r\n        return 0;\r\n    };\r\n    Rectangle.prototype.setXCentre = function (cx) {\r\n        var dx = cx - this.cx();\r\n        this.x += dx;\r\n        this.X += dx;\r\n    };\r\n    Rectangle.prototype.setYCentre = function (cy) {\r\n        var dy = cy - this.cy();\r\n        this.y += dy;\r\n        this.Y += dy;\r\n    };\r\n    Rectangle.prototype.width = function () {\r\n        return this.X - this.x;\r\n    };\r\n    Rectangle.prototype.height = function () {\r\n        return this.Y - this.y;\r\n    };\r\n    Rectangle.prototype.union = function (r) {\r\n        return new Rectangle(Math.min(this.x, r.x), Math.max(this.X, r.X), Math.min(this.y, r.y), Math.max(this.Y, r.Y));\r\n    };\r\n    Rectangle.prototype.lineIntersections = function (x1, y1, x2, y2) {\r\n        var sides = [[this.x, this.y, this.X, this.y],\r\n            [this.X, this.y, this.X, this.Y],\r\n            [this.X, this.Y, this.x, this.Y],\r\n            [this.x, this.Y, this.x, this.y]];\r\n        var intersections = [];\r\n        for (var i = 0; i < 4; ++i) {\r\n            var r = Rectangle.lineIntersection(x1, y1, x2, y2, sides[i][0], sides[i][1], sides[i][2], sides[i][3]);\r\n            if (r !== null)\r\n                intersections.push({ x: r.x, y: r.y });\r\n        }\r\n        return intersections;\r\n    };\r\n    Rectangle.prototype.rayIntersection = function (x2, y2) {\r\n        var ints = this.lineIntersections(this.cx(), this.cy(), x2, y2);\r\n        return ints.length > 0 ? ints[0] : null;\r\n    };\r\n    Rectangle.prototype.vertices = function () {\r\n        return [\r\n            { x: this.x, y: this.y },\r\n            { x: this.X, y: this.y },\r\n            { x: this.X, y: this.Y },\r\n            { x: this.x, y: this.Y }\r\n        ];\r\n    };\r\n    Rectangle.lineIntersection = function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n        var dx12 = x2 - x1, dx34 = x4 - x3, dy12 = y2 - y1, dy34 = y4 - y3, denominator = dy34 * dx12 - dx34 * dy12;\r\n        if (denominator == 0)\r\n            return null;\r\n        var dx31 = x1 - x3, dy31 = y1 - y3, numa = dx34 * dy31 - dy34 * dx31, a = numa / denominator, numb = dx12 * dy31 - dy12 * dx31, b = numb / denominator;\r\n        if (a >= 0 && a <= 1 && b >= 0 && b <= 1) {\r\n            return {\r\n                x: x1 + a * dx12,\r\n                y: y1 + a * dy12\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    Rectangle.prototype.inflate = function (pad) {\r\n        return new Rectangle(this.x - pad, this.X + pad, this.y - pad, this.Y + pad);\r\n    };\r\n    return Rectangle;\r\n}());\r\nexports.Rectangle = Rectangle;\r\nfunction makeEdgeBetween(source, target, ah) {\r\n    var si = source.rayIntersection(target.cx(), target.cy()) || { x: source.cx(), y: source.cy() }, ti = target.rayIntersection(source.cx(), source.cy()) || { x: target.cx(), y: target.cy() }, dx = ti.x - si.x, dy = ti.y - si.y, l = Math.sqrt(dx * dx + dy * dy), al = l - ah;\r\n    return {\r\n        sourceIntersection: si,\r\n        targetIntersection: ti,\r\n        arrowStart: { x: si.x + al * dx / l, y: si.y + al * dy / l }\r\n    };\r\n}\r\nexports.makeEdgeBetween = makeEdgeBetween;\r\nfunction makeEdgeTo(s, target, ah) {\r\n    var ti = target.rayIntersection(s.x, s.y);\r\n    if (!ti)\r\n        ti = { x: target.cx(), y: target.cy() };\r\n    var dx = ti.x - s.x, dy = ti.y - s.y, l = Math.sqrt(dx * dx + dy * dy);\r\n    return { x: ti.x - ah * dx / l, y: ti.y - ah * dy / l };\r\n}\r\nexports.makeEdgeTo = makeEdgeTo;\r\nvar Node = (function () {\r\n    function Node(v, r, pos) {\r\n        this.v = v;\r\n        this.r = r;\r\n        this.pos = pos;\r\n        this.prev = makeRBTree();\r\n        this.next = makeRBTree();\r\n    }\r\n    return Node;\r\n}());\r\nvar Event = (function () {\r\n    function Event(isOpen, v, pos) {\r\n        this.isOpen = isOpen;\r\n        this.v = v;\r\n        this.pos = pos;\r\n    }\r\n    return Event;\r\n}());\r\nfunction compareEvents(a, b) {\r\n    if (a.pos > b.pos) {\r\n        return 1;\r\n    }\r\n    if (a.pos < b.pos) {\r\n        return -1;\r\n    }\r\n    if (a.isOpen) {\r\n        return -1;\r\n    }\r\n    if (b.isOpen) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nfunction makeRBTree() {\r\n    return new rbtree_1.RBTree(function (a, b) { return a.pos - b.pos; });\r\n}\r\nvar xRect = {\r\n    getCentre: function (r) { return r.cx(); },\r\n    getOpen: function (r) { return r.y; },\r\n    getClose: function (r) { return r.Y; },\r\n    getSize: function (r) { return r.width(); },\r\n    makeRect: function (open, close, center, size) { return new Rectangle(center - size / 2, center + size / 2, open, close); },\r\n    findNeighbours: findXNeighbours\r\n};\r\nvar yRect = {\r\n    getCentre: function (r) { return r.cy(); },\r\n    getOpen: function (r) { return r.x; },\r\n    getClose: function (r) { return r.X; },\r\n    getSize: function (r) { return r.height(); },\r\n    makeRect: function (open, close, center, size) { return new Rectangle(open, close, center - size / 2, center + size / 2); },\r\n    findNeighbours: findYNeighbours\r\n};\r\nfunction generateGroupConstraints(root, f, minSep, isContained) {\r\n    if (isContained === void 0) { isContained = false; }\r\n    var padding = root.padding, gn = typeof root.groups !== 'undefined' ? root.groups.length : 0, ln = typeof root.leaves !== 'undefined' ? root.leaves.length : 0, childConstraints = !gn ? []\r\n        : root.groups.reduce(function (ccs, g) { return ccs.concat(generateGroupConstraints(g, f, minSep, true)); }, []), n = (isContained ? 2 : 0) + ln + gn, vs = new Array(n), rs = new Array(n), i = 0, add = function (r, v) { rs[i] = r; vs[i++] = v; };\r\n    if (isContained) {\r\n        var b = root.bounds, c = f.getCentre(b), s = f.getSize(b) / 2, open = f.getOpen(b), close = f.getClose(b), min = c - s + padding / 2, max = c + s - padding / 2;\r\n        root.minVar.desiredPosition = min;\r\n        add(f.makeRect(open, close, min, padding), root.minVar);\r\n        root.maxVar.desiredPosition = max;\r\n        add(f.makeRect(open, close, max, padding), root.maxVar);\r\n    }\r\n    if (ln)\r\n        root.leaves.forEach(function (l) { return add(l.bounds, l.variable); });\r\n    if (gn)\r\n        root.groups.forEach(function (g) {\r\n            var b = g.bounds;\r\n            add(f.makeRect(f.getOpen(b), f.getClose(b), f.getCentre(b), f.getSize(b)), g.minVar);\r\n        });\r\n    var cs = generateConstraints(rs, vs, f, minSep);\r\n    if (gn) {\r\n        vs.forEach(function (v) { v.cOut = [], v.cIn = []; });\r\n        cs.forEach(function (c) { c.left.cOut.push(c), c.right.cIn.push(c); });\r\n        root.groups.forEach(function (g) {\r\n            var gapAdjustment = (g.padding - f.getSize(g.bounds)) / 2;\r\n            g.minVar.cIn.forEach(function (c) { return c.gap += gapAdjustment; });\r\n            g.minVar.cOut.forEach(function (c) { c.left = g.maxVar; c.gap += gapAdjustment; });\r\n        });\r\n    }\r\n    return childConstraints.concat(cs);\r\n}\r\nfunction generateConstraints(rs, vars, rect, minSep) {\r\n    var i, n = rs.length;\r\n    var N = 2 * n;\r\n    console.assert(vars.length >= n);\r\n    var events = new Array(N);\r\n    for (i = 0; i < n; ++i) {\r\n        var r = rs[i];\r\n        var v = new Node(vars[i], r, rect.getCentre(r));\r\n        events[i] = new Event(true, v, rect.getOpen(r));\r\n        events[i + n] = new Event(false, v, rect.getClose(r));\r\n    }\r\n    events.sort(compareEvents);\r\n    var cs = new Array();\r\n    var scanline = makeRBTree();\r\n    for (i = 0; i < N; ++i) {\r\n        var e = events[i];\r\n        var v = e.v;\r\n        if (e.isOpen) {\r\n            scanline.insert(v);\r\n            rect.findNeighbours(v, scanline);\r\n        }\r\n        else {\r\n            scanline.remove(v);\r\n            var makeConstraint = function (l, r) {\r\n                var sep = (rect.getSize(l.r) + rect.getSize(r.r)) / 2 + minSep;\r\n                cs.push(new vpsc_1.Constraint(l.v, r.v, sep));\r\n            };\r\n            var visitNeighbours = function (forward, reverse, mkcon) {\r\n                var u, it = v[forward].iterator();\r\n                while ((u = it[forward]()) !== null) {\r\n                    mkcon(u, v);\r\n                    u[reverse].remove(v);\r\n                }\r\n            };\r\n            visitNeighbours(\"prev\", \"next\", function (u, v) { return makeConstraint(u, v); });\r\n            visitNeighbours(\"next\", \"prev\", function (u, v) { return makeConstraint(v, u); });\r\n        }\r\n    }\r\n    console.assert(scanline.size === 0);\r\n    return cs;\r\n}\r\nfunction findXNeighbours(v, scanline) {\r\n    var f = function (forward, reverse) {\r\n        var it = scanline.findIter(v);\r\n        var u;\r\n        while ((u = it[forward]()) !== null) {\r\n            var uovervX = u.r.overlapX(v.r);\r\n            if (uovervX <= 0 || uovervX <= u.r.overlapY(v.r)) {\r\n                v[forward].insert(u);\r\n                u[reverse].insert(v);\r\n            }\r\n            if (uovervX <= 0) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    f(\"next\", \"prev\");\r\n    f(\"prev\", \"next\");\r\n}\r\nfunction findYNeighbours(v, scanline) {\r\n    var f = function (forward, reverse) {\r\n        var u = scanline.findIter(v)[forward]();\r\n        if (u !== null && u.r.overlapX(v.r) > 0) {\r\n            v[forward].insert(u);\r\n            u[reverse].insert(v);\r\n        }\r\n    };\r\n    f(\"next\", \"prev\");\r\n    f(\"prev\", \"next\");\r\n}\r\nfunction generateXConstraints(rs, vars) {\r\n    return generateConstraints(rs, vars, xRect, 1e-6);\r\n}\r\nexports.generateXConstraints = generateXConstraints;\r\nfunction generateYConstraints(rs, vars) {\r\n    return generateConstraints(rs, vars, yRect, 1e-6);\r\n}\r\nexports.generateYConstraints = generateYConstraints;\r\nfunction generateXGroupConstraints(root) {\r\n    return generateGroupConstraints(root, xRect, 1e-6);\r\n}\r\nexports.generateXGroupConstraints = generateXGroupConstraints;\r\nfunction generateYGroupConstraints(root) {\r\n    return generateGroupConstraints(root, yRect, 1e-6);\r\n}\r\nexports.generateYGroupConstraints = generateYGroupConstraints;\r\nfunction removeOverlaps(rs) {\r\n    var vs = rs.map(function (r) { return new vpsc_1.Variable(r.cx()); });\r\n    var cs = generateXConstraints(rs, vs);\r\n    var solver = new vpsc_1.Solver(vs, cs);\r\n    solver.solve();\r\n    vs.forEach(function (v, i) { return rs[i].setXCentre(v.position()); });\r\n    vs = rs.map(function (r) { return new vpsc_1.Variable(r.cy()); });\r\n    cs = generateYConstraints(rs, vs);\r\n    solver = new vpsc_1.Solver(vs, cs);\r\n    solver.solve();\r\n    vs.forEach(function (v, i) { return rs[i].setYCentre(v.position()); });\r\n}\r\nexports.removeOverlaps = removeOverlaps;\r\nvar IndexedVariable = (function (_super) {\r\n    __extends(IndexedVariable, _super);\r\n    function IndexedVariable(index, w) {\r\n        var _this = _super.call(this, 0, w) || this;\r\n        _this.index = index;\r\n        return _this;\r\n    }\r\n    return IndexedVariable;\r\n}(vpsc_1.Variable));\r\nexports.IndexedVariable = IndexedVariable;\r\nvar Projection = (function () {\r\n    function Projection(nodes, groups, rootGroup, constraints, avoidOverlaps) {\r\n        var _this = this;\r\n        if (rootGroup === void 0) { rootGroup = null; }\r\n        if (constraints === void 0) { constraints = null; }\r\n        if (avoidOverlaps === void 0) { avoidOverlaps = false; }\r\n        this.nodes = nodes;\r\n        this.groups = groups;\r\n        this.rootGroup = rootGroup;\r\n        this.avoidOverlaps = avoidOverlaps;\r\n        this.variables = nodes.map(function (v, i) {\r\n            return v.variable = new IndexedVariable(i, 1);\r\n        });\r\n        if (constraints)\r\n            this.createConstraints(constraints);\r\n        if (avoidOverlaps && rootGroup && typeof rootGroup.groups !== 'undefined') {\r\n            nodes.forEach(function (v) {\r\n                if (!v.width || !v.height) {\r\n                    v.bounds = new Rectangle(v.x, v.x, v.y, v.y);\r\n                    return;\r\n                }\r\n                var w2 = v.width / 2, h2 = v.height / 2;\r\n                v.bounds = new Rectangle(v.x - w2, v.x + w2, v.y - h2, v.y + h2);\r\n            });\r\n            computeGroupBounds(rootGroup);\r\n            var i = nodes.length;\r\n            groups.forEach(function (g) {\r\n                _this.variables[i] = g.minVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n                _this.variables[i] = g.maxVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n            });\r\n        }\r\n    }\r\n    Projection.prototype.createSeparation = function (c) {\r\n        return new vpsc_1.Constraint(this.nodes[c.left].variable, this.nodes[c.right].variable, c.gap, typeof c.equality !== \"undefined\" ? c.equality : false);\r\n    };\r\n    Projection.prototype.makeFeasible = function (c) {\r\n        var _this = this;\r\n        if (!this.avoidOverlaps)\r\n            return;\r\n        var axis = 'x', dim = 'width';\r\n        if (c.axis === 'x')\r\n            axis = 'y', dim = 'height';\r\n        var vs = c.offsets.map(function (o) { return _this.nodes[o.node]; }).sort(function (a, b) { return a[axis] - b[axis]; });\r\n        var p = null;\r\n        vs.forEach(function (v) {\r\n            if (p) {\r\n                var nextPos = p[axis] + p[dim];\r\n                if (nextPos > v[axis]) {\r\n                    v[axis] = nextPos;\r\n                }\r\n            }\r\n            p = v;\r\n        });\r\n    };\r\n    Projection.prototype.createAlignment = function (c) {\r\n        var _this = this;\r\n        var u = this.nodes[c.offsets[0].node].variable;\r\n        this.makeFeasible(c);\r\n        var cs = c.axis === 'x' ? this.xConstraints : this.yConstraints;\r\n        c.offsets.slice(1).forEach(function (o) {\r\n            var v = _this.nodes[o.node].variable;\r\n            cs.push(new vpsc_1.Constraint(u, v, o.offset, true));\r\n        });\r\n    };\r\n    Projection.prototype.createConstraints = function (constraints) {\r\n        var _this = this;\r\n        var isSep = function (c) { return typeof c.type === 'undefined' || c.type === 'separation'; };\r\n        this.xConstraints = constraints\r\n            .filter(function (c) { return c.axis === \"x\" && isSep(c); })\r\n            .map(function (c) { return _this.createSeparation(c); });\r\n        this.yConstraints = constraints\r\n            .filter(function (c) { return c.axis === \"y\" && isSep(c); })\r\n            .map(function (c) { return _this.createSeparation(c); });\r\n        constraints\r\n            .filter(function (c) { return c.type === 'alignment'; })\r\n            .forEach(function (c) { return _this.createAlignment(c); });\r\n    };\r\n    Projection.prototype.setupVariablesAndBounds = function (x0, y0, desired, getDesired) {\r\n        this.nodes.forEach(function (v, i) {\r\n            if (v.fixed) {\r\n                v.variable.weight = v.fixedWeight ? v.fixedWeight : 1000;\r\n                desired[i] = getDesired(v);\r\n            }\r\n            else {\r\n                v.variable.weight = 1;\r\n            }\r\n            var w = (v.width || 0) / 2, h = (v.height || 0) / 2;\r\n            var ix = x0[i], iy = y0[i];\r\n            v.bounds = new Rectangle(ix - w, ix + w, iy - h, iy + h);\r\n        });\r\n    };\r\n    Projection.prototype.xProject = function (x0, y0, x) {\r\n        if (!this.rootGroup && !(this.avoidOverlaps || this.xConstraints))\r\n            return;\r\n        this.project(x0, y0, x0, x, function (v) { return v.px; }, this.xConstraints, generateXGroupConstraints, function (v) { return v.bounds.setXCentre(x[v.variable.index] = v.variable.position()); }, function (g) {\r\n            var xmin = x[g.minVar.index] = g.minVar.position();\r\n            var xmax = x[g.maxVar.index] = g.maxVar.position();\r\n            var p2 = g.padding / 2;\r\n            g.bounds.x = xmin - p2;\r\n            g.bounds.X = xmax + p2;\r\n        });\r\n    };\r\n    Projection.prototype.yProject = function (x0, y0, y) {\r\n        if (!this.rootGroup && !this.yConstraints)\r\n            return;\r\n        this.project(x0, y0, y0, y, function (v) { return v.py; }, this.yConstraints, generateYGroupConstraints, function (v) { return v.bounds.setYCentre(y[v.variable.index] = v.variable.position()); }, function (g) {\r\n            var ymin = y[g.minVar.index] = g.minVar.position();\r\n            var ymax = y[g.maxVar.index] = g.maxVar.position();\r\n            var p2 = g.padding / 2;\r\n            g.bounds.y = ymin - p2;\r\n            ;\r\n            g.bounds.Y = ymax + p2;\r\n        });\r\n    };\r\n    Projection.prototype.projectFunctions = function () {\r\n        var _this = this;\r\n        return [\r\n            function (x0, y0, x) { return _this.xProject(x0, y0, x); },\r\n            function (x0, y0, y) { return _this.yProject(x0, y0, y); }\r\n        ];\r\n    };\r\n    Projection.prototype.project = function (x0, y0, start, desired, getDesired, cs, generateConstraints, updateNodeBounds, updateGroupBounds) {\r\n        this.setupVariablesAndBounds(x0, y0, desired, getDesired);\r\n        if (this.rootGroup && this.avoidOverlaps) {\r\n            computeGroupBounds(this.rootGroup);\r\n            cs = cs.concat(generateConstraints(this.rootGroup));\r\n        }\r\n        this.solve(this.variables, cs, start, desired);\r\n        this.nodes.forEach(updateNodeBounds);\r\n        if (this.rootGroup && this.avoidOverlaps) {\r\n            this.groups.forEach(updateGroupBounds);\r\n            computeGroupBounds(this.rootGroup);\r\n        }\r\n    };\r\n    Projection.prototype.solve = function (vs, cs, starting, desired) {\r\n        var solver = new vpsc_1.Solver(vs, cs);\r\n        solver.setStartingPositions(starting);\r\n        solver.setDesiredPositions(desired);\r\n        solver.solve();\r\n    };\r\n    return Projection;\r\n}());\r\nexports.Projection = Projection;\r\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"script"}