{"ast":null,"code":"import { MAX_COLOR_ALPHA } from './consts';\nimport { rgb2hsv } from './rgb2hsv';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n/** Converts an RGBA color to a color object (alpha defaults to 100). */\nexport function getColorFromRGBA(rgba) {\n  var _a = rgba.a,\n    a = _a === void 0 ? MAX_COLOR_ALPHA : _a,\n    b = rgba.b,\n    g = rgba.g,\n    r = rgba.r;\n  var _b = rgb2hsv(r, g, b),\n    h = _b.h,\n    s = _b.s,\n    v = _b.v;\n  var hex = rgb2hex(r, g, b);\n  var str = _rgbaOrHexString(r, g, b, a, hex);\n  var t = MAX_COLOR_ALPHA - a;\n  return {\n    a: a,\n    b: b,\n    g: g,\n    h: h,\n    hex: hex,\n    r: r,\n    s: s,\n    str: str,\n    v: v,\n    t: t\n  };\n}","map":{"version":3,"sources":["utilities/color/getColorFromRGBA.ts"],"names":[],"mappings":"AACA,SAAS,eAAe,QAAQ,UAAU;AAC1C,SAAS,OAAO,QAAQ,WAAW;AACnC,SAAS,OAAO,QAAQ,WAAW;AACnC,SAAS,gBAAgB,QAAQ,oBAAoB;AAErD;AACA,OAAM,SAAU,gBAAgB,CAAC,IAAU,EAAA;EACjC,IAAA,EAAA,GAAA,IAAA,CAAA,CAAmB;IAAnB,CAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,eAAA,GAAA,EAAmB;IAAE,CAAA,GAAA,IAAA,CAAA,CAAC;IAAE,CAAA,GAAA,IAAA,CAAA,CAAC;IAAE,CAAA,GAAA,IAAA,CAAA,CAAC;EAC9B,IAAA,EAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAA8B;IAA5B,CAAA,GAAA,EAAA,CAAA,CAAC;IAAE,CAAA,GAAA,EAAA,CAAA,CAAC;IAAE,CAAA,GAAA,EAAA,CAAA,CAAsB;EACpC,IAAM,GAAG,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5B,IAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EAC7C,IAAM,CAAC,GAAG,eAAe,GAAG,CAAC;EAE7B,OAAO;IAAE,CAAC,EAAA,CAAA;IAAE,CAAC,EAAA,CAAA;IAAE,CAAC,EAAA,CAAA;IAAE,CAAC,EAAA,CAAA;IAAE,GAAG,EAAA,GAAA;IAAE,CAAC,EAAA,CAAA;IAAE,CAAC,EAAA,CAAA;IAAE,GAAG,EAAA,GAAA;IAAE,CAAC,EAAA,CAAA;IAAE,CAAC,EAAA;EAAA,CAAE;AAC7C","sourcesContent":["import { IRGB, IColor } from './interfaces';\nimport { MAX_COLOR_ALPHA } from './consts';\nimport { rgb2hsv } from './rgb2hsv';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n\n/** Converts an RGBA color to a color object (alpha defaults to 100). */\nexport function getColorFromRGBA(rgba: IRGB): IColor {\n  const { a = MAX_COLOR_ALPHA, b, g, r } = rgba;\n  const { h, s, v } = rgb2hsv(r, g, b);\n  const hex = rgb2hex(r, g, b);\n  const str = _rgbaOrHexString(r, g, b, a, hex);\n  const t = MAX_COLOR_ALPHA - a;\n\n  return { a, b, g, h, hex, r, s, str, v, t };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}