{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function signingPolicy(authenticationProvider) {\n  return {\n    create: function (nextPolicy, options) {\n      return new SigningPolicy(nextPolicy, options, authenticationProvider);\n    }\n  };\n}\nvar SigningPolicy = /** @class */function (_super) {\n  __extends(SigningPolicy, _super);\n  function SigningPolicy(nextPolicy, options, authenticationProvider) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n    _this.authenticationProvider = authenticationProvider;\n    return _this;\n  }\n  SigningPolicy.prototype.signRequest = function (request) {\n    return this.authenticationProvider.signRequest(request);\n  };\n  SigningPolicy.prototype.sendRequest = function (request) {\n    var _this = this;\n    return this.signRequest(request).then(function (nextRequest) {\n      return _this._nextPolicy.sendRequest(nextRequest);\n    });\n  };\n  return SigningPolicy;\n}(BaseRequestPolicy);\nexport { SigningPolicy };","map":{"version":3,"sources":["../../../src/policies/signingPolicy.ts"],"names":[],"mappings":"AAAA;AACA;;AAKA,SACE,iBAAiB,QAIZ,iBAAiB;AAExB,OAAM,SAAU,aAAa,CAC3B,sBAAgD,EAAA;EAEhD,OAAO;IACL,MAAM,EAAE,SAAA,CAAC,UAAyB,EAAE,OAA6B,EAAA;MAC/D,OAAO,IAAI,aAAa,CAAC,UAAU,EAAE,OAAO,EAAE,sBAAsB,CAAC;IACvE;GACD;AACH;AAEA,IAAA,aAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAmC,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;EACjC,SAAA,aAAA,CACE,UAAyB,EACzB,OAA6B,EACtB,sBAAgD,EAAA;IAHzD,IAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,UAAU,EAAE,OAAO,CAAC,IAAA,IAAA;IAFnB,KAAA,CAAA,sBAAsB,GAAtB,sBAAsB;;EAG/B;EAEA,aAAA,CAAA,SAAA,CAAA,WAAW,GAAX,UAAY,OAAwB,EAAA;IAClC,OAAO,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,OAAO,CAAC;EACzD,CAAC;EAEM,aAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,UAAmB,OAAwB,EAAA;IAA3C,IAAA,KAAA,GAAA,IAAA;IACE,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,WAAW,EAAA;MAChD,OAAA,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC;IAAzC,CAAyC,CAC1C;EACH,CAAC;EACH,OAAA,aAAC;AAAD,CAAC,CAlBkC,iBAAiB,CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ServiceClientCredentials } from \"../credentials/serviceClientCredentials\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function signingPolicy(\n  authenticationProvider: ServiceClientCredentials\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SigningPolicy(nextPolicy, options, authenticationProvider);\n    }\n  };\n}\n\nexport class SigningPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    public authenticationProvider: ServiceClientCredentials\n  ) {\n    super(nextPolicy, options);\n  }\n\n  signRequest(request: WebResourceLike): Promise<WebResourceLike> {\n    return this.authenticationProvider.signRequest(request);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this.signRequest(request).then((nextRequest) =>\n      this._nextPolicy.sendRequest(nextRequest)\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}