{"ast":null,"code":"import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { getRTL } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected'\n};\nvar TAG_HEIGHT = 26;\nexport function getStyles(props) {\n  var _a, _b, _c, _d;\n  var className = props.className,\n    theme = props.theme,\n    selected = props.selected,\n    disabled = props.disabled;\n  var palette = theme.palette,\n    effects = theme.effects,\n    fonts = theme.fonts,\n    semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, fonts.medium, getFocusStyle(theme), {\n      boxSizing: 'content-box',\n      flexShrink: '1',\n      margin: 2,\n      height: TAG_HEIGHT,\n      lineHeight: TAG_HEIGHT,\n      cursor: 'default',\n      userSelect: 'none',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      maxWidth: 300,\n      minWidth: 0,\n      borderRadius: effects.roundedCorner2,\n      color: semanticColors.inputText,\n      background: !selected || disabled ? palette.neutralLighter : palette.themePrimary,\n      selectors: (_a = {\n        ':hover': [!disabled && !selected && {\n          color: palette.neutralDark,\n          background: palette.neutralLight,\n          selectors: {\n            '.ms-TagItem-close': {\n              color: palette.neutralPrimary\n            }\n          }\n        }, disabled && {\n          background: palette.neutralLighter\n        }, selected && !disabled && {\n          background: palette.themePrimary\n        }]\n      }, _a[HighContrastSelector] = {\n        border: \"1px solid \" + (!selected ? 'WindowText' : 'WindowFrame')\n      }, _a)\n    }, disabled && {\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _b)\n    }, selected && !disabled && [classNames.isSelected, {\n      color: palette.white\n    }], className],\n    text: [classNames.text, {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      minWidth: 30,\n      margin: '0 8px'\n    }, disabled && {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _c)\n    }],\n    close: [classNames.close, {\n      color: palette.neutralSecondary,\n      width: 30,\n      height: '100%',\n      flex: '0 0 auto',\n      borderRadius: getRTL(theme) ? effects.roundedCorner2 + \" 0 0 \" + effects.roundedCorner2 : \"0 \" + effects.roundedCorner2 + \" \" + effects.roundedCorner2 + \" 0\",\n      selectors: {\n        ':hover': {\n          background: palette.neutralQuaternaryAlt,\n          color: palette.neutralPrimary\n        },\n        ':active': {\n          color: palette.white,\n          backgroundColor: palette.themeDark\n        }\n      }\n    }, selected && {\n      color: palette.white,\n      selectors: {\n        ':hover': {\n          color: palette.white,\n          background: palette.themeDark\n        }\n      }\n    }, disabled && {\n      selectors: (_d = {}, _d[\".\" + ButtonGlobalClassNames.msButtonIcon] = {\n        color: palette.neutralSecondary\n      }, _d)\n    }]\n  };\n}","map":{"version":3,"sources":["components/pickers/TagPicker/TagItem.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\nimport { getRTL } from '../../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected',\n};\n\nconst TAG_HEIGHT = 26;\n\nexport function getStyles(props: ITagItemStyleProps): ITagItemStyles {\n  const { className, theme, selected, disabled } = props;\n\n  const { palette, effects, fonts, semanticColors } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      getFocusStyle(theme),\n      {\n        boxSizing: 'content-box',\n        flexShrink: '1',\n        margin: 2,\n        height: TAG_HEIGHT,\n        lineHeight: TAG_HEIGHT,\n        cursor: 'default',\n        userSelect: 'none',\n        display: 'flex',\n        flexWrap: 'nowrap',\n        maxWidth: 300,\n        minWidth: 0, // needed to prevent long tags from overflowing container\n        borderRadius: effects.roundedCorner2,\n        color: semanticColors.inputText,\n        background: !selected || disabled ? palette.neutralLighter : palette.themePrimary,\n        selectors: {\n          ':hover': [\n            !disabled &&\n              !selected && {\n                color: palette.neutralDark,\n                background: palette.neutralLight,\n                selectors: {\n                  '.ms-TagItem-close': {\n                    color: palette.neutralPrimary,\n                  },\n                },\n              },\n            disabled && { background: palette.neutralLighter },\n            selected && !disabled && { background: palette.themePrimary },\n          ],\n          [HighContrastSelector]: {\n            border: `1px solid ${!selected ? 'WindowText' : 'WindowFrame'}`,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n      selected &&\n        !disabled && [\n          classNames.isSelected,\n          {\n            color: palette.white,\n          },\n        ],\n      className,\n    ],\n    text: [\n      classNames.text,\n      {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        minWidth: 30,\n        margin: '0 8px',\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n    ],\n    close: [\n      classNames.close,\n      {\n        color: palette.neutralSecondary,\n        width: 30,\n        height: '100%',\n        flex: '0 0 auto',\n        borderRadius: getRTL(theme)\n          ? `${effects.roundedCorner2} 0 0 ${effects.roundedCorner2}`\n          : `0 ${effects.roundedCorner2} ${effects.roundedCorner2} 0`,\n        selectors: {\n          ':hover': {\n            background: palette.neutralQuaternaryAlt,\n            color: palette.neutralPrimary,\n          },\n          ':active': {\n            color: palette.white,\n            backgroundColor: palette.themeDark,\n          },\n        },\n      },\n      selected && {\n        color: palette.white,\n        selectors: {\n          ':hover': {\n            color: palette.white,\n            background: palette.themeDark,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: palette.neutralSecondary,\n          },\n        },\n      },\n    ],\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}