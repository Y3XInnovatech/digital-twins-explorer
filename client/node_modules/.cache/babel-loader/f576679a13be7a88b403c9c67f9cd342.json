{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __extends } from \"tslib\";\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { Constants } from \"../util/constants\";\nimport { getDefaultUserAgentKey, getPlatformSpecificData } from \"./msRestUserAgentPolicy\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nfunction getRuntimeInfo() {\n  var msRestRuntime = {\n    key: \"core-http\",\n    value: Constants.coreHttpVersion\n  };\n  return [msRestRuntime];\n}\nfunction getUserAgentString(telemetryInfo, keySeparator, valueSeparator) {\n  if (keySeparator === void 0) {\n    keySeparator = \" \";\n  }\n  if (valueSeparator === void 0) {\n    valueSeparator = \"/\";\n  }\n  return telemetryInfo.map(function (info) {\n    var value = info.value ? \"\" + valueSeparator + info.value : \"\";\n    return \"\" + info.key + value;\n  }).join(keySeparator);\n}\nexport var getDefaultUserAgentHeaderName = getDefaultUserAgentKey;\nexport function getDefaultUserAgentValue() {\n  var runtimeInfo = getRuntimeInfo();\n  var platformSpecificData = getPlatformSpecificData();\n  var userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n  return userAgent;\n}\nexport function userAgentPolicy(userAgentData) {\n  var key = !userAgentData || userAgentData.key === undefined || userAgentData.key === null ? getDefaultUserAgentKey() : userAgentData.key;\n  var value = !userAgentData || userAgentData.value === undefined || userAgentData.value === null ? getDefaultUserAgentValue() : userAgentData.value;\n  return {\n    create: function (nextPolicy, options) {\n      return new UserAgentPolicy(nextPolicy, options, key, value);\n    }\n  };\n}\nvar UserAgentPolicy = /** @class */function (_super) {\n  __extends(UserAgentPolicy, _super);\n  function UserAgentPolicy(_nextPolicy, _options, headerKey, headerValue) {\n    var _this = _super.call(this, _nextPolicy, _options) || this;\n    _this._nextPolicy = _nextPolicy;\n    _this._options = _options;\n    _this.headerKey = headerKey;\n    _this.headerValue = headerValue;\n    return _this;\n  }\n  UserAgentPolicy.prototype.sendRequest = function (request) {\n    this.addUserAgentHeader(request);\n    return this._nextPolicy.sendRequest(request);\n  };\n  UserAgentPolicy.prototype.addUserAgentHeader = function (request) {\n    if (!request.headers) {\n      request.headers = new HttpHeaders();\n    }\n    if (!request.headers.get(this.headerKey) && this.headerValue) {\n      request.headers.set(this.headerKey, this.headerValue);\n    }\n  };\n  return UserAgentPolicy;\n}(BaseRequestPolicy);\nexport { UserAgentPolicy };","map":{"version":3,"sources":["../../../src/policies/userAgentPolicy.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { Constants } from \"../util/constants\";\nimport { WebResourceLike } from \"../webResource\";\nimport { getDefaultUserAgentKey, getPlatformSpecificData } from \"./msRestUserAgentPolicy\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport type TelemetryInfo = { key?: string; value?: string };\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentOptions {\n  /*\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\nfunction getRuntimeInfo(): TelemetryInfo[] {\n  const msRestRuntime = {\n    key: \"core-http\",\n    value: Constants.coreHttpVersion\n  };\n\n  return [msRestRuntime];\n}\n\nfunction getUserAgentString(\n  telemetryInfo: TelemetryInfo[],\n  keySeparator = \" \",\n  valueSeparator = \"/\"\n): string {\n  return telemetryInfo\n    .map((info) => {\n      const value = info.value ? `${valueSeparator}${info.value}` : \"\";\n      return `${info.key}${value}`;\n    })\n    .join(keySeparator);\n}\n\nexport const getDefaultUserAgentHeaderName = getDefaultUserAgentKey;\n\nexport function getDefaultUserAgentValue(): string {\n  const runtimeInfo = getRuntimeInfo();\n  const platformSpecificData = getPlatformSpecificData();\n  const userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n  return userAgent;\n}\n\nexport function userAgentPolicy(userAgentData?: TelemetryInfo): RequestPolicyFactory {\n  const key: string =\n    !userAgentData || userAgentData.key === undefined || userAgentData.key === null\n      ? getDefaultUserAgentKey()\n      : userAgentData.key;\n  const value: string =\n    !userAgentData || userAgentData.value === undefined || userAgentData.value === null\n      ? getDefaultUserAgentValue()\n      : userAgentData.value;\n\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new UserAgentPolicy(nextPolicy, options, key, value);\n    }\n  };\n}\n\nexport class UserAgentPolicy extends BaseRequestPolicy {\n  constructor(\n    readonly _nextPolicy: RequestPolicy,\n    readonly _options: RequestPolicyOptions,\n    protected headerKey: string,\n    protected headerValue: string\n  ) {\n    super(_nextPolicy, _options);\n  }\n\n  sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    this.addUserAgentHeader(request);\n    return this._nextPolicy.sendRequest(request);\n  }\n\n  addUserAgentHeader(request: WebResourceLike): void {\n    if (!request.headers) {\n      request.headers = new HttpHeaders();\n    }\n\n    if (!request.headers.get(this.headerKey) && this.headerValue) {\n      request.headers.set(this.headerKey, this.headerValue);\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}