{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css, styled, classNamesFunction } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { composeRenderFunction } from '@uifabric/utilities';\nvar getClassNames = classNamesFunction();\nvar DetailsRowCheckBase = function (props) {\n  var _a = props.isVisible,\n    isVisible = _a === void 0 ? false : _a,\n    _b = props.canSelect,\n    canSelect = _b === void 0 ? false : _b,\n    _c = props.anySelected,\n    anySelected = _c === void 0 ? false : _c,\n    _d = props.selected,\n    selected = _d === void 0 ? false : _d,\n    _e = props.isHeader,\n    isHeader = _e === void 0 ? false : _e,\n    className = props.className,\n    checkClassName = props.checkClassName,\n    styles = props.styles,\n    theme = props.theme,\n    compact = props.compact,\n    onRenderDetailsCheckbox = props.onRenderDetailsCheckbox,\n    _f = props.useFastIcons,\n    useFastIcons = _f === void 0 ? true : _f,\n    // must be removed from buttonProps\n    buttonProps = __rest(props, [\"isVisible\", \"canSelect\", \"anySelected\", \"selected\", \"isHeader\", \"className\", \"checkClassName\", \"styles\", \"theme\", \"compact\", \"onRenderDetailsCheckbox\", \"useFastIcons\"]);\n  var defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n  var onRenderCheckbox = onRenderDetailsCheckbox ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender) : defaultCheckboxRender;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    canSelect: canSelect,\n    selected: selected,\n    anySelected: anySelected,\n    className: className,\n    isHeader: isHeader,\n    isVisible: isVisible,\n    compact: compact\n  });\n  var detailsCheckboxProps = {\n    checked: selected,\n    theme: theme\n  };\n  return canSelect ? React.createElement(\"div\", __assign({}, buttonProps, {\n    role: \"checkbox\",\n    // eslint-disable-next-line deprecation/deprecation\n    className: css(classNames.root, classNames.check),\n    \"aria-checked\": selected,\n    \"data-selection-toggle\": true,\n    \"data-automationid\": \"DetailsRowCheck\",\n    tabIndex: -1\n  }), onRenderCheckbox(detailsCheckboxProps)) :\n  // eslint-disable-next-line deprecation/deprecation\n  React.createElement(\"div\", __assign({}, buttonProps, {\n    className: css(classNames.root, classNames.check)\n  }));\n};\nvar FastCheck = React.memo(function (props) {\n  return React.createElement(Check, {\n    theme: props.theme,\n    checked: props.checked,\n    className: props.className,\n    useFastIcons: true\n  });\n});\nfunction _defaultCheckboxRender(checkboxProps) {\n  return React.createElement(Check, {\n    checked: checkboxProps.checked\n  });\n}\nfunction _fastDefaultCheckboxRender(checkboxProps) {\n  return React.createElement(FastCheck, {\n    theme: checkboxProps.theme,\n    checked: checkboxProps.checked\n  });\n}\nexport var DetailsRowCheck = styled(DetailsRowCheckBase, getStyles, undefined, {\n  scope: 'DetailsRowCheck'\n}, true);","map":{"version":3,"sources":["components/DetailsList/DetailsRowCheck.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  IDetailsRowCheckProps,\n  IDetailsCheckboxProps,\n  IDetailsRowCheckStyleProps,\n  IDetailsRowCheckStyles,\n} from './DetailsRowCheck.types';\nimport { css, styled, classNamesFunction } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { composeRenderFunction } from '@uifabric/utilities';\nimport { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>();\n\nconst DetailsRowCheckBase: React.FunctionComponent<IDetailsRowCheckProps> = props => {\n  const {\n    isVisible = false,\n    canSelect = false,\n    anySelected = false,\n    selected = false,\n    isHeader = false,\n    className,\n    checkClassName,\n    styles,\n    theme,\n    compact,\n    onRenderDetailsCheckbox,\n    useFastIcons = true, // must be removed from buttonProps\n    ...buttonProps\n  } = props;\n  const defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n\n  const onRenderCheckbox = onRenderDetailsCheckbox\n    ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender)\n    : defaultCheckboxRender;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    canSelect,\n    selected,\n    anySelected,\n    className,\n    isHeader,\n    isVisible,\n    compact,\n  });\n\n  const detailsCheckboxProps: IDetailsCheckboxProps = {\n    checked: selected,\n    theme,\n  };\n\n  return canSelect ? (\n    <div\n      {...buttonProps}\n      role=\"checkbox\"\n      // eslint-disable-next-line deprecation/deprecation\n      className={css(classNames.root, classNames.check)}\n      aria-checked={selected}\n      data-selection-toggle={true}\n      data-automationid=\"DetailsRowCheck\"\n      tabIndex={-1}\n    >\n      {onRenderCheckbox(detailsCheckboxProps)}\n    </div>\n  ) : (\n    // eslint-disable-next-line deprecation/deprecation\n    <div {...buttonProps} className={css(classNames.root, classNames.check)} />\n  );\n};\n\nconst FastCheck = React.memo((props: { theme?: ITheme; checked?: boolean; className?: string }) => {\n  return <Check theme={props.theme} checked={props.checked} className={props.className} useFastIcons />;\n});\n\nfunction _defaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <Check checked={checkboxProps.checked} />;\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <FastCheck theme={checkboxProps.theme} checked={checkboxProps.checked} />;\n}\n\nexport const DetailsRowCheck = styled<IDetailsRowCheckProps, IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>(\n  DetailsRowCheckBase,\n  getStyles,\n  undefined,\n  { scope: 'DetailsRowCheck' },\n  true,\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}