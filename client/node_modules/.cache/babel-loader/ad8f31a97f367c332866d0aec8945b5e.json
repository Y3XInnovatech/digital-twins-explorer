{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport { classNamesFunction, getNativeProps, inputProperties, css, initializeComponentRef } from '../../../Utilities';\nimport { composeRenderFunction } from '@uifabric/utilities';\nvar getClassNames = classNamesFunction();\nvar LARGE_IMAGE_SIZE = 71;\n/**\n * {@docCategory ChoiceGroup}\n */\nvar ChoiceGroupOptionBase = /** @class */function (_super) {\n  __extends(ChoiceGroupOptionBase, _super);\n  function ChoiceGroupOptionBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._onChange = function (evt) {\n      var onChange = _this.props.onChange;\n      if (onChange) {\n        onChange(evt, _this.props);\n      }\n    };\n    _this._onBlur = function (evt) {\n      var onBlur = _this.props.onBlur;\n      if (onBlur) {\n        onBlur(evt, _this.props);\n      }\n    };\n    _this._onFocus = function (evt) {\n      var onFocus = _this.props.onFocus;\n      if (onFocus) {\n        onFocus(evt, _this.props);\n      }\n    };\n    _this._onRenderField = function (props) {\n      var id = props.id,\n        imageSrc = props.imageSrc,\n        _a = props.imageAlt,\n        imageAlt = _a === void 0 ? '' : _a,\n        selectedImageSrc = props.selectedImageSrc,\n        iconProps = props.iconProps;\n      var imageSize = props.imageSize ? props.imageSize : {\n        width: 32,\n        height: 32\n      };\n      var onRenderLabel = props.onRenderLabel ? composeRenderFunction(props.onRenderLabel, _this._onRenderLabel) : _this._onRenderLabel;\n      var label = onRenderLabel(props);\n      return React.createElement(\"label\", {\n        htmlFor: id,\n        className: _this._classNames.field\n      }, imageSrc && React.createElement(\"div\", {\n        className: _this._classNames.innerField\n      }, React.createElement(\"div\", {\n        className: _this._classNames.imageWrapper\n      }, React.createElement(Image, {\n        src: imageSrc,\n        alt: imageAlt,\n        width: imageSize.width,\n        height: imageSize.height\n      })), React.createElement(\"div\", {\n        className: _this._classNames.selectedImageWrapper\n      }, React.createElement(Image, {\n        src: selectedImageSrc,\n        alt: imageAlt,\n        width: imageSize.width,\n        height: imageSize.height\n      }))), iconProps && React.createElement(\"div\", {\n        className: _this._classNames.innerField\n      }, React.createElement(\"div\", {\n        className: _this._classNames.iconWrapper\n      }, React.createElement(Icon, __assign({}, iconProps)))), imageSrc || iconProps ? React.createElement(\"div\", {\n        className: _this._classNames.labelWrapper\n      }, label) : label);\n    };\n    _this._onRenderLabel = function (props) {\n      return React.createElement(\"span\", {\n        id: props.labelId,\n        className: \"ms-ChoiceFieldLabel\"\n      }, props.text);\n    };\n    initializeComponentRef(_this);\n    return _this;\n  }\n  ChoiceGroupOptionBase.prototype.render = function () {\n    var _a = this.props,\n      ariaLabel = _a.ariaLabel,\n      focused = _a.focused,\n      required = _a.required,\n      theme = _a.theme,\n      iconProps = _a.iconProps,\n      imageSrc = _a.imageSrc,\n      imageSize = _a.imageSize,\n      disabled = _a.disabled,\n      // eslint-disable-next-line deprecation/deprecation\n      checked = _a.checked,\n      id = _a.id,\n      styles = _a.styles,\n      name = _a.name,\n      _b = _a.onRenderField,\n      onRenderField = _b === void 0 ? this._onRenderField : _b,\n      rest = __rest(_a, [\"ariaLabel\", \"focused\", \"required\", \"theme\", \"iconProps\", \"imageSrc\", \"imageSize\", \"disabled\", \"checked\", \"id\", \"styles\", \"name\", \"onRenderField\"]);\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      hasIcon: !!iconProps,\n      hasImage: !!imageSrc,\n      checked: checked,\n      disabled: disabled,\n      imageIsLarge: !!imageSrc && (imageSize.width > LARGE_IMAGE_SIZE || imageSize.height > LARGE_IMAGE_SIZE),\n      imageSize: imageSize,\n      focused: focused\n    });\n    var _c = getNativeProps(rest, inputProperties),\n      className = _c.className,\n      nativeProps = __rest(_c, [\"className\"]);\n    return React.createElement(\"div\", {\n      className: this._classNames.root\n    }, React.createElement(\"div\", {\n      className: this._classNames.choiceFieldWrapper\n    }, React.createElement(\"input\", __assign({\n      \"aria-label\": ariaLabel,\n      id: id,\n      className: css(this._classNames.input, className),\n      type: \"radio\",\n      name: name,\n      disabled: disabled,\n      checked: checked,\n      required: required\n    }, nativeProps, {\n      onChange: this._onChange,\n      onFocus: this._onFocus,\n      onBlur: this._onBlur\n    })), onRenderField(this.props, this._onRenderField)));\n  };\n  ChoiceGroupOptionBase.defaultProps = {\n    // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n    imageSize: {\n      width: 32,\n      height: 32\n    }\n  };\n  return ChoiceGroupOptionBase;\n}(React.Component);\nexport { ChoiceGroupOptionBase };","map":{"version":3,"sources":["components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport {\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles,\n} from './ChoiceGroupOption.types';\nimport { classNamesFunction, getNativeProps, inputProperties, css, initializeComponentRef } from '../../../Utilities';\nimport { IProcessedStyleSet } from '../../../Styling';\nimport { composeRenderFunction } from '@uifabric/utilities';\n\nconst getClassNames = classNamesFunction<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>();\n\nconst LARGE_IMAGE_SIZE = 71;\n\n/**\n * {@docCategory ChoiceGroup}\n */\nexport class ChoiceGroupOptionBase extends React.Component<IChoiceGroupOptionProps, {}> {\n  public static defaultProps: Partial<IChoiceGroupOptionProps> = {\n    // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n    imageSize: { width: 32, height: 32 },\n  };\n\n  private _classNames: IProcessedStyleSet<IChoiceGroupOptionStyles>;\n\n  constructor(props: IChoiceGroupOptionProps) {\n    super(props);\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaLabel,\n      focused,\n      required,\n      theme,\n      iconProps,\n      imageSrc,\n      imageSize,\n      disabled,\n      // eslint-disable-next-line deprecation/deprecation\n      checked,\n      id,\n      styles,\n      name,\n      onRenderField = this._onRenderField,\n      ...rest\n    } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      hasIcon: !!iconProps,\n      hasImage: !!imageSrc,\n      checked,\n      disabled,\n      imageIsLarge: !!imageSrc && (imageSize!.width > LARGE_IMAGE_SIZE || imageSize!.height > LARGE_IMAGE_SIZE),\n      imageSize,\n      focused,\n    });\n\n    const { className, ...nativeProps } = getNativeProps<{ className: string }>(rest, inputProperties);\n\n    return (\n      <div className={this._classNames.root}>\n        <div className={this._classNames.choiceFieldWrapper}>\n          <input\n            aria-label={ariaLabel}\n            id={id}\n            className={css(this._classNames.input, className)}\n            type=\"radio\"\n            name={name}\n            disabled={disabled}\n            checked={checked}\n            required={required}\n            {...nativeProps}\n            onChange={this._onChange}\n            onFocus={this._onFocus}\n            onBlur={this._onBlur}\n          />\n          {onRenderField(this.props, this._onRenderField)}\n        </div>\n      </div>\n    );\n  }\n\n  private _onChange = (evt: React.FormEvent<HTMLInputElement>): void => {\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(evt, this.props);\n    }\n  };\n\n  private _onBlur = (evt: React.FocusEvent<HTMLElement>) => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(evt, this.props);\n    }\n  };\n\n  private _onFocus = (evt: React.FocusEvent<HTMLElement>) => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(evt, this.props);\n    }\n  };\n\n  private _onRenderField = (props: IChoiceGroupOptionProps): JSX.Element => {\n    const { id, imageSrc, imageAlt = '', selectedImageSrc, iconProps } = props;\n\n    const imageSize = props.imageSize ? props.imageSize : { width: 32, height: 32 };\n\n    const onRenderLabel = props.onRenderLabel\n      ? composeRenderFunction(props.onRenderLabel, this._onRenderLabel)\n      : this._onRenderLabel;\n\n    const label = onRenderLabel(props);\n\n    return (\n      <label htmlFor={id} className={this._classNames.field}>\n        {imageSrc && (\n          <div className={this._classNames.innerField}>\n            <div className={this._classNames.imageWrapper}>\n              <Image src={imageSrc} alt={imageAlt} width={imageSize.width} height={imageSize.height} />\n            </div>\n            <div className={this._classNames.selectedImageWrapper}>\n              <Image src={selectedImageSrc} alt={imageAlt} width={imageSize.width} height={imageSize.height} />\n            </div>\n          </div>\n        )}\n        {iconProps && (\n          <div className={this._classNames.innerField}>\n            <div className={this._classNames.iconWrapper}>\n              <Icon {...iconProps} />\n            </div>\n          </div>\n        )}\n        {imageSrc || iconProps ? <div className={this._classNames.labelWrapper}>{label}</div> : label}\n      </label>\n    );\n  };\n\n  private _onRenderLabel = (props: IChoiceGroupOptionProps): JSX.Element => {\n    return (\n      <span id={props.labelId} className=\"ms-ChoiceFieldLabel\">\n        {props.text}\n      </span>\n    );\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}