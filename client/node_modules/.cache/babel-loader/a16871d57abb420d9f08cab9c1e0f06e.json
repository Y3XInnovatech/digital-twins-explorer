{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nvar getClassNames = classNamesFunction({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\nvar LabelBase = /** @class */function (_super) {\n  __extends(LabelBase, _super);\n  function LabelBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LabelBase.prototype.render = function () {\n    var _a = this.props,\n      _b = _a.as,\n      RootType = _b === void 0 ? 'label' : _b,\n      children = _a.children,\n      className = _a.className,\n      disabled = _a.disabled,\n      styles = _a.styles,\n      required = _a.required,\n      theme = _a.theme;\n    var classNames = getClassNames(styles, {\n      className: className,\n      disabled: disabled,\n      required: required,\n      theme: theme\n    });\n    return React.createElement(RootType, __assign({}, getNativeProps(this.props, divProperties), {\n      className: classNames.root\n    }), children);\n  };\n  return LabelBase;\n}(React.Component);\nexport { LabelBase };","map":{"version":3,"sources":["components/Label/Label.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,aAAa,EAAE,cAAc,QAAQ,iBAAiB;AAC/D,SAAS,kBAAkB,QAAQ,iBAAiB;AAGpD,IAAM,aAAa,GAAG,kBAAkB,CAAiC;EACvE;EACA;EACA;EACA,SAAS,EAAE;CACZ,CAAC;AAEF,IAAA,SAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA+B,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;EAA/B,SAAA,SAAA,CAAA,EAAA;;EAeA;EAdS,SAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACQ,IAAA,EAAA,GAAA,IAAA,CAAA,KAA+F;MAA7F,EAAA,GAAA,EAAA,CAAA,EAAsB;MAAtB,QAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,OAAA,GAAA,EAAsB;MAAE,QAAA,GAAA,EAAA,CAAA,QAAQ;MAAE,SAAA,GAAA,EAAA,CAAA,SAAS;MAAE,QAAA,GAAA,EAAA,CAAA,QAAQ;MAAE,MAAA,GAAA,EAAA,CAAA,MAAM;MAAE,QAAA,GAAA,EAAA,CAAA,QAAQ;MAAE,KAAA,GAAA,EAAA,CAAA,KAAoB;IACrG,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;MACvC,SAAS,EAAA,SAAA;MACT,QAAQ,EAAA,QAAA;MACR,QAAQ,EAAA,QAAA;MACR,KAAK,EAAE;KACR,CAAC;IACF,OACE,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA,QAAA,CAAA,CAAA,CAAA,EAAK,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC,EAAA;MAAE,SAAS,EAAE,UAAU,CAAC;IAAI,CAAA,CAAA,EAChF,QAAQ,CACA;EAEf,CAAC;EACH,OAAA,SAAC;AAAD,CAAC,CAf8B,KAAK,CAAC,SAAS,CAAA","sourcesContent":["import * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nimport { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nconst getClassNames = classNamesFunction<ILabelStyleProps, ILabelStyles>({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class LabelBase extends React.Component<ILabelProps, {}> {\n  public render(): JSX.Element {\n    const { as: RootType = 'label', children, className, disabled, styles, required, theme } = this.props;\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      required,\n      theme: theme!,\n    });\n    return (\n      <RootType {...getNativeProps(this.props, divProperties)} className={classNames.root}>\n        {children}\n      </RootType>\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}