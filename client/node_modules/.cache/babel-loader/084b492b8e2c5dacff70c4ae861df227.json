{"ast":null,"code":"import { concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\nvar DEFAULT_BUTTON_HEIGHT = '32px';\nvar DEFAULT_BUTTON_MIN_WIDTH = '80px';\nexport var getStyles = memoizeFunction(function (theme, customStyles, primary) {\n  var baseButtonStyles = getBaseButtonStyles(theme);\n  var splitButtonStyles = getSplitButtonStyles(theme);\n  var defaultButtonStyles = {\n    root: {\n      minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n      height: DEFAULT_BUTTON_HEIGHT\n    },\n    label: {\n      fontWeight: FontWeights.semibold\n    }\n  };\n  return concatStyleSets(baseButtonStyles, defaultButtonStyles, primary ? primaryStyles(theme) : standardStyles(theme), splitButtonStyles, customStyles);\n});","map":{"version":3,"sources":["components/Button/DefaultButton/DefaultButton.styles.ts"],"names":[],"mappings":"AACA,SAAiB,eAAe,EAAE,WAAW,QAAQ,kBAAkB;AACvE,SAAS,eAAe,QAAQ,oBAAoB;AACpD,SAAS,SAAS,IAAI,mBAAmB,QAAQ,sBAAsB;AACvE,SAAS,SAAS,IAAI,oBAAoB,QAAQ,mCAAmC;AAErF,SAAS,aAAa,EAAE,cAAc,QAAQ,iBAAiB;AAE/D,IAAM,qBAAqB,GAAG,MAAM;AACpC,IAAM,wBAAwB,GAAG,MAAM;AAEvC,OAAO,IAAM,SAAS,GAAG,eAAe,CACtC,UAAC,KAAa,EAAE,YAA4B,EAAE,OAAiB,EAAA;EAC7D,IAAM,gBAAgB,GAAkB,mBAAmB,CAAC,KAAK,CAAC;EAClE,IAAM,iBAAiB,GAAkB,oBAAoB,CAAC,KAAK,CAAC;EACpE,IAAM,mBAAmB,GAAkB;IACzC,IAAI,EAAE;MACJ,QAAQ,EAAE,wBAAwB;MAClC,MAAM,EAAE;KACT;IACD,KAAK,EAAE;MACL,UAAU,EAAE,WAAW,CAAC;IACzB;GACF;EAED,OAAO,eAAe,CACpB,gBAAgB,EAChB,mBAAmB,EACnB,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,EACtD,iBAAiB,EACjB,YAAY,CACZ;AACJ,CAAC,CACF","sourcesContent":["import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\n\nconst DEFAULT_BUTTON_HEIGHT = '32px';\nconst DEFAULT_BUTTON_MIN_WIDTH = '80px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const defaultButtonStyles: IButtonStyles = {\n      root: {\n        minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n        height: DEFAULT_BUTTON_HEIGHT,\n      },\n      label: {\n        fontWeight: FontWeights.semibold,\n      },\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      defaultButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      splitButtonStyles,\n      customStyles,\n    )!;\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}