{"ast":null,"code":"var AdapterResult = /** @class */function () {\n  function AdapterResult(params) {\n    this.result = params.result;\n    this.errorInfo = params.errorInfo;\n  }\n  AdapterResult.prototype.hasNoData = function () {\n    var _a;\n    if (this.result && 'hasNoData' in this.result) {\n      return this.result.hasNoData();\n    } else {\n      return this.result == null || ((_a = this.result) === null || _a === void 0 ? void 0 : _a.data) == null;\n    }\n  };\n  AdapterResult.prototype.hasError = function () {\n    var _a;\n    return ((_a = this.getErrors()) === null || _a === void 0 ? void 0 : _a.length) > 0;\n  };\n  AdapterResult.prototype.getData = function () {\n    if (this.hasNoData()) {\n      return null;\n    }\n    return this.result.data;\n  };\n  /** Returns error array if errors are present.  If no errors present, returns null */\n  AdapterResult.prototype.getErrors = function () {\n    var _a, _b;\n    if (((_a = this.errorInfo) === null || _a === void 0 ? void 0 : _a.errors) && ((_b = this.errorInfo) === null || _b === void 0 ? void 0 : _b.errors.length) > 0) {\n      return this.errorInfo.errors;\n    }\n    return null;\n  };\n  /** Returns catastrophic error if present, otherwise returns null */\n  AdapterResult.prototype.getCatastrophicError = function () {\n    var _a;\n    if ((_a = this.errorInfo) === null || _a === void 0 ? void 0 : _a.catastrophicError) {\n      return this.errorInfo.catastrophicError;\n    }\n    return null;\n  };\n  return AdapterResult;\n}();\nexport { AdapterResult as A };","map":{"version":3,"sources":["../../src/Models/Classes/AdapterResult.ts"],"names":[],"mappings":"AAGA,IAAA,aAAA,GAAA,aAAA,YAAA;EAII,SAAA,aAAA,CAAY,MAA8B,EAAA;IACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM;IAC3B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;EACpC;EAED,aAAA,CAAA,SAAA,CAAA,SAAS,GAAT,YAAA;;IACI,IAAI,IAAI,CAAC,MAAM,IAAI,WAAW,IAAI,IAAI,CAAC,MAAM,EAAE;MAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAA,CAAE;IACjC,CAAA,MAAM;MACH,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,KAAI,IAAI;IAC1D;GACJ;EAED,aAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;;IACI,OAAO,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,CAAA,CAAE,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC;GACtC;EAED,aAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACI,IAAI,IAAI,CAAC,SAAS,CAAA,CAAE,EAAE;MAClB,OAAO,IAAI;IACd;IACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI;GAC1B;;EAGD,aAAA,CAAA,SAAA,CAAA,SAAS,GAAT,YAAA;;IACI,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,KAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,MAAM,IAAG,CAAC,EAAE;MAC7D,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM;IAC/B;IACD,OAAO,IAAI;GACd;;EAGD,aAAA,CAAA,SAAA,CAAA,oBAAoB,GAApB,YAAA;;IACI,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,iBAAiB,EAAE;MACnC,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB;IAC1C;IACD,OAAO,IAAI;GACd;EACL,OAAC,aAAA;AAAD,CAAC,CAAA,CAAA","sourcesContent":["import { IAdapterData, IErrorInfo } from '../Constants/Interfaces';\nimport { AdapterResultParams } from '../Constants/Types';\n\nclass AdapterResult<T extends IAdapterData> {\n    result: T;\n    errorInfo: IErrorInfo;\n\n    constructor(params: AdapterResultParams<T>) {\n        this.result = params.result;\n        this.errorInfo = params.errorInfo;\n    }\n\n    hasNoData() {\n        if (this.result && 'hasNoData' in this.result) {\n            return this.result.hasNoData();\n        } else {\n            return this.result == null || this.result?.data == null;\n        }\n    }\n\n    hasError() {\n        return this.getErrors()?.length > 0;\n    }\n\n    getData() {\n        if (this.hasNoData()) {\n            return null;\n        }\n        return this.result.data;\n    }\n\n    /** Returns error array if errors are present.  If no errors present, returns null */\n    getErrors() {\n        if (this.errorInfo?.errors && this.errorInfo?.errors.length > 0) {\n            return this.errorInfo.errors;\n        }\n        return null;\n    }\n\n    /** Returns catastrophic error if present, otherwise returns null */\n    getCatastrophicError() {\n        if (this.errorInfo?.catastrophicError) {\n            return this.errorInfo.catastrophicError;\n        }\n        return null;\n    }\n}\n\nexport default AdapterResult;\n"]},"metadata":{},"sourceType":"module"}