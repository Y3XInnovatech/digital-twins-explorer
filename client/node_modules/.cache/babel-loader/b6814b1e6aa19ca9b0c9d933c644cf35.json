{"ast":null,"code":"/**\n * Detects whether an element's content has horizontal overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasHorizontalOverflow(element) {\n  return element.clientWidth < element.scrollWidth;\n}\n/**\n * Detects whether an element's content has vertical overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasVerticalOverflow(element) {\n  return element.clientHeight < element.scrollHeight;\n}\n/**\n * Detects whether an element's content has overflow in any direction\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasOverflow(element) {\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\n}","map":{"version":3,"sources":["overflow.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;AACH,OAAM,SAAU,qBAAqB,CAAC,OAAoB,EAAA;EACxD,OAAO,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW;AAClD;AAEA;;;;;;AAMG;AACH,OAAM,SAAU,mBAAmB,CAAC,OAAoB,EAAA;EACtD,OAAO,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY;AACpD;AAEA;;;;;;AAMG;AACH,OAAM,SAAU,WAAW,CAAC,OAAoB,EAAA;EAC9C,OAAO,qBAAqB,CAAC,OAAO,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC;AACvE","sourcesContent":["/**\n * Detects whether an element's content has horizontal overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasHorizontalOverflow(element: HTMLElement): boolean {\n  return element.clientWidth < element.scrollWidth;\n}\n\n/**\n * Detects whether an element's content has vertical overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasVerticalOverflow(element: HTMLElement): boolean {\n  return element.clientHeight < element.scrollHeight;\n}\n\n/**\n * Detects whether an element's content has overflow in any direction\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasOverflow(element: HTMLElement): boolean {\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}