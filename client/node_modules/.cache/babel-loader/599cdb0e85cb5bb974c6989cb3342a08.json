{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Icon } from '../../Icon';\nimport { Image } from '../../Image';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory DocumentCard}\n */\nvar DocumentCardImageBase = /** @class */function (_super) {\n  __extends(DocumentCardImageBase, _super);\n  function DocumentCardImageBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._onImageLoad = function () {\n      _this.setState({\n        imageHasLoaded: true\n      });\n    };\n    initializeComponentRef(_this);\n    _this.state = {\n      imageHasLoaded: false\n    };\n    return _this;\n  }\n  DocumentCardImageBase.prototype.render = function () {\n    var _a = this.props,\n      styles = _a.styles,\n      width = _a.width,\n      height = _a.height,\n      imageFit = _a.imageFit,\n      imageSrc = _a.imageSrc;\n    this._classNames = getClassNames(styles, this.props);\n    return React.createElement(\"div\", {\n      className: this._classNames.root\n    }, imageSrc && React.createElement(Image, {\n      width: width,\n      height: height,\n      imageFit: imageFit,\n      src: imageSrc,\n      role: \"presentation\",\n      alt: \"\",\n      onLoad: this._onImageLoad\n    }), this.state.imageHasLoaded ? this._renderCornerIcon() : this._renderCenterIcon());\n  };\n  DocumentCardImageBase.prototype._renderCenterIcon = function () {\n    var iconProps = this.props.iconProps;\n    return React.createElement(\"div\", {\n      className: this._classNames.centeredIconWrapper\n    }, React.createElement(Icon, __assign({\n      className: this._classNames.centeredIcon\n    }, iconProps)));\n  };\n  DocumentCardImageBase.prototype._renderCornerIcon = function () {\n    var iconProps = this.props.iconProps;\n    return React.createElement(Icon, __assign({\n      className: this._classNames.cornerIcon\n    }, iconProps));\n  };\n  return DocumentCardImageBase;\n}(React.Component);\nexport { DocumentCardImageBase };","map":{"version":3,"sources":["components/DocumentCard/DocumentCardImage.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,IAAI,QAAQ,YAAY;AACjC,SAAS,KAAK,QAAQ,aAAa;AAEnC,SAAS,kBAAkB,EAAE,sBAAsB,QAAQ,iBAAiB;AAW5E,IAAM,aAAa,GAAG,kBAAkB,CAAA,CAA0D;AAElG;;AAEG;AACH,IAAA,qBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA2C,SAAA,CAAA,qBAAA,EAAA,MAAA,CAAA;EAGzC,SAAA,qBAAA,CAAY,KAA8B,EAAA;IAA1C,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IAAA,IAAA;IA6BN,KAAA,CAAA,YAAY,GAAG,YAAA;MACrB,KAAI,CAAC,QAAQ,CAAC;QAAE,cAAc,EAAE;MAAI,CAAE,CAAC;IACzC,CAAC;IA7BC,sBAAsB,CAAC,KAAI,CAAC;IAC5B,KAAI,CAAC,KAAK,GAAG;MAAE,cAAc,EAAE;IAAK,CAAE;;EACxC;EAEO,qBAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACQ,IAAA,EAAA,GAAA,IAAA,CAAA,KAA0D;MAAxD,MAAA,GAAA,EAAA,CAAA,MAAM;MAAE,KAAA,GAAA,EAAA,CAAA,KAAK;MAAE,MAAA,GAAA,EAAA,CAAA,MAAM;MAAE,QAAA,GAAA,EAAA,CAAA,QAAQ;MAAE,QAAA,GAAA,EAAA,CAAA,QAAuB;IAEhE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE,IAAI,CAAC,KAAK,CAAC;IAErD,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC;IAAI,CAAA,EAClC,QAAQ,IACP,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA;MACJ,KAAK,EAAE,KAAK;MACZ,MAAM,EAAE,MAAM;MACd,QAAQ,EAAE,QAAQ;MAClB,GAAG,EAAE,QAAQ;MACb,IAAI,EAAC,cAAc;MACnB,GAAG,EAAC,EAAE;MACN,MAAM,EAAE,IAAI,CAAC;IAAY,CAAA,CAE5B,EACA,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAA,CAAE,GAAG,IAAI,CAAC,iBAAiB,CAAA,CAAE,CAC5E;EAEV,CAAC;EAMO,qBAAA,CAAA,SAAA,CAAA,iBAAiB,GAAzB,YAAA;IACU,IAAA,SAAA,GAAA,IAAA,CAAA,KAAA,CAAA,SAAS;IACjB,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC;IAAmB,CAAA,EAClD,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,QAAA,CAAA;MAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC;IAAY,CAAA,EAAM,SAAS,CAAA,CAAI,CAC7D;EAEV,CAAC;EAEO,qBAAA,CAAA,SAAA,CAAA,iBAAiB,GAAzB,YAAA;IACU,IAAA,SAAA,GAAA,IAAA,CAAA,KAAA,CAAA,SAAS;IACjB,OAAO,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,QAAA,CAAA;MAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC;IAAU,CAAA,EAAM,SAAS,CAAA,CAAI;EACxE,CAAC;EACH,OAAA,qBAAC;AAAD,CAAC,CAlD0C,KAAK,CAAC,SAAS,CAAA","sourcesContent":["import * as React from 'react';\nimport { Icon } from '../../Icon';\nimport { Image } from '../../Image';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport {\n  IDocumentCardImageProps,\n  IDocumentCardImageStyleProps,\n  IDocumentCardImageStyles,\n} from './DocumentCardImage.types';\n\nexport interface IDocumentCardImageState {\n  readonly imageHasLoaded: boolean;\n}\n\nconst getClassNames = classNamesFunction<IDocumentCardImageStyleProps, IDocumentCardImageStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardImageBase extends React.Component<IDocumentCardImageProps, IDocumentCardImageState> {\n  private _classNames: IProcessedStyleSet<IDocumentCardImageStyles>;\n\n  constructor(props: IDocumentCardImageProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this.state = { imageHasLoaded: false };\n  }\n\n  public render(): JSX.Element {\n    const { styles, width, height, imageFit, imageSrc } = this.props;\n\n    this._classNames = getClassNames(styles!, this.props);\n\n    return (\n      <div className={this._classNames.root}>\n        {imageSrc && (\n          <Image\n            width={width}\n            height={height}\n            imageFit={imageFit}\n            src={imageSrc}\n            role=\"presentation\"\n            alt=\"\"\n            onLoad={this._onImageLoad}\n          />\n        )}\n        {this.state.imageHasLoaded ? this._renderCornerIcon() : this._renderCenterIcon()}\n      </div>\n    );\n  }\n\n  private _onImageLoad = () => {\n    this.setState({ imageHasLoaded: true });\n  };\n\n  private _renderCenterIcon(): JSX.Element {\n    const { iconProps } = this.props;\n    return (\n      <div className={this._classNames.centeredIconWrapper}>\n        <Icon className={this._classNames.centeredIcon} {...iconProps} />\n      </div>\n    );\n  }\n\n  private _renderCornerIcon(): JSX.Element {\n    const { iconProps } = this.props;\n    return <Icon className={this._classNames.cornerIcon} {...iconProps} />;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}