{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { css, KeyCodes, initializeComponentRef } from '../../../Utilities';\nimport { SuggestionsCore } from './SuggestionsCore';\nimport * as stylesImport from './SuggestionsControl.scss';\nimport { hiddenContentStyle, mergeStyles } from '../../../Styling';\nvar styles = stylesImport;\nexport var SuggestionItemType;\n(function (SuggestionItemType) {\n  SuggestionItemType[SuggestionItemType[\"header\"] = 0] = \"header\";\n  SuggestionItemType[SuggestionItemType[\"suggestion\"] = 1] = \"suggestion\";\n  SuggestionItemType[SuggestionItemType[\"footer\"] = 2] = \"footer\";\n})(SuggestionItemType || (SuggestionItemType = {}));\nvar SuggestionsHeaderFooterItem = /** @class */function (_super) {\n  __extends(SuggestionsHeaderFooterItem, _super);\n  function SuggestionsHeaderFooterItem(props) {\n    var _this = _super.call(this, props) || this;\n    initializeComponentRef(_this);\n    return _this;\n  }\n  SuggestionsHeaderFooterItem.prototype.render = function () {\n    var _a;\n    var _b = this.props,\n      renderItem = _b.renderItem,\n      onExecute = _b.onExecute,\n      isSelected = _b.isSelected,\n      id = _b.id,\n      className = _b.className;\n    return onExecute ? React.createElement(\"div\", {\n      id: id,\n      onClick: onExecute,\n      className: css('ms-Suggestions-sectionButton', className, styles.actionButton, (_a = {}, _a['is-selected ' + styles.buttonSelected] = isSelected, _a))\n    }, renderItem()) : React.createElement(\"div\", {\n      id: id,\n      className: css('ms-Suggestions-section', className, styles.suggestionsTitle)\n    }, renderItem());\n  };\n  return SuggestionsHeaderFooterItem;\n}(React.Component);\nexport { SuggestionsHeaderFooterItem };\n/**\n * Class when used with SuggestionsStore, renders a suggestions control with customizable headers and footers\n */\nvar SuggestionsControl = /** @class */function (_super) {\n  __extends(SuggestionsControl, _super);\n  function SuggestionsControl(suggestionsProps) {\n    var _this = _super.call(this, suggestionsProps) || this;\n    _this._selectedElement = React.createRef();\n    _this._suggestions = React.createRef();\n    _this.SuggestionsOfProperType = SuggestionsCore;\n    initializeComponentRef(_this);\n    _this.state = {\n      selectedHeaderIndex: -1,\n      selectedFooterIndex: -1,\n      suggestions: suggestionsProps.suggestions\n    };\n    return _this;\n  }\n  SuggestionsControl.prototype.componentDidMount = function () {\n    this.resetSelectedItem();\n  };\n  SuggestionsControl.prototype.componentDidUpdate = function () {\n    this.scrollSelected();\n  };\n  SuggestionsControl.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    var _this = this;\n    if (newProps.suggestions) {\n      this.setState({\n        suggestions: newProps.suggestions\n      }, function () {\n        _this.resetSelectedItem();\n      });\n    }\n  };\n  SuggestionsControl.prototype.componentWillUnmount = function () {\n    var _a;\n    (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.deselectAllSuggestions();\n  };\n  SuggestionsControl.prototype.render = function () {\n    var _a = this.props,\n      className = _a.className,\n      headerItemsProps = _a.headerItemsProps,\n      footerItemsProps = _a.footerItemsProps,\n      suggestionsAvailableAlertText = _a.suggestionsAvailableAlertText;\n    var screenReaderTextStyles = mergeStyles(hiddenContentStyle);\n    var shouldAlertSuggestionsAvailableText = this.state.suggestions && this.state.suggestions.length > 0 && suggestionsAvailableAlertText;\n    return React.createElement(\"div\", {\n      className: css('ms-Suggestions', className ? className : '', styles.root)\n    }, headerItemsProps && this.renderHeaderItems(), this._renderSuggestions(), footerItemsProps && this.renderFooterItems(), shouldAlertSuggestionsAvailableText ? React.createElement(\"span\", {\n      role: \"alert\",\n      \"aria-live\": \"polite\",\n      className: screenReaderTextStyles\n    }, suggestionsAvailableAlertText) : null);\n  };\n  Object.defineProperty(SuggestionsControl.prototype, \"currentSuggestion\", {\n    get: function () {\n      var _a;\n      return ((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.getCurrentItem()) || undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SuggestionsControl.prototype, \"currentSuggestionIndex\", {\n    get: function () {\n      return this._suggestions.current ? this._suggestions.current.currentIndex : -1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SuggestionsControl.prototype, \"selectedElement\", {\n    get: function () {\n      var _a;\n      return this._selectedElement.current ? this._selectedElement.current : (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.selectedElement;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  SuggestionsControl.prototype.hasSuggestionSelected = function () {\n    var _a;\n    return ((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.hasSuggestionSelected()) || false;\n  };\n  SuggestionsControl.prototype.hasSelection = function () {\n    var _a = this.state,\n      selectedHeaderIndex = _a.selectedHeaderIndex,\n      selectedFooterIndex = _a.selectedFooterIndex;\n    return selectedHeaderIndex !== -1 || this.hasSuggestionSelected() || selectedFooterIndex !== -1;\n  };\n  SuggestionsControl.prototype.executeSelectedAction = function () {\n    var _a;\n    var _b = this.props,\n      headerItemsProps = _b.headerItemsProps,\n      footerItemsProps = _b.footerItemsProps;\n    var _c = this.state,\n      selectedHeaderIndex = _c.selectedHeaderIndex,\n      selectedFooterIndex = _c.selectedFooterIndex;\n    if (headerItemsProps && selectedHeaderIndex !== -1 && selectedHeaderIndex < headerItemsProps.length) {\n      var selectedHeaderItem = headerItemsProps[selectedHeaderIndex];\n      if (selectedHeaderItem.onExecute) {\n        selectedHeaderItem.onExecute();\n      }\n    } else if ((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.hasSuggestionSelected()) {\n      this.props.completeSuggestion();\n    } else if (footerItemsProps && selectedFooterIndex !== -1 && selectedFooterIndex < footerItemsProps.length) {\n      var selectedFooterItem = footerItemsProps[selectedFooterIndex];\n      if (selectedFooterItem.onExecute) {\n        selectedFooterItem.onExecute();\n      }\n    }\n  };\n  SuggestionsControl.prototype.removeSuggestion = function (index) {\n    var _a, _b;\n    (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.removeSuggestion(index ? index : (_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.currentIndex);\n  };\n  /**\n   * Handles the key down, returns true, if the event was handled, false otherwise\n   * @param keyCode - The keyCode to handle\n   */\n  SuggestionsControl.prototype.handleKeyDown = function (keyCode) {\n    var _a, _b, _c, _d;\n    var _e = this.state,\n      selectedHeaderIndex = _e.selectedHeaderIndex,\n      selectedFooterIndex = _e.selectedFooterIndex;\n    var isKeyDownHandled = false;\n    if (keyCode === KeyCodes.down) {\n      if (selectedHeaderIndex === -1 && !((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.hasSuggestionSelected()) && selectedFooterIndex === -1) {\n        this.selectFirstItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if ((_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.hasSuggestionSelected()) {\n        this.selectNextItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.up) {\n      if (selectedHeaderIndex === -1 && !((_c = this._suggestions.current) === null || _c === void 0 ? void 0 : _c.hasSuggestionSelected()) && selectedFooterIndex === -1) {\n        this.selectLastItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if ((_d = this._suggestions.current) === null || _d === void 0 ? void 0 : _d.hasSuggestionSelected()) {\n        this.selectPreviousItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.enter || keyCode === KeyCodes.tab) {\n      if (this.hasSelection()) {\n        this.executeSelectedAction();\n        isKeyDownHandled = true;\n      }\n    }\n    return isKeyDownHandled;\n  };\n  // TODO get the element to scroll into view properly regardless of direction.\n  SuggestionsControl.prototype.scrollSelected = function () {\n    if (this._selectedElement.current) {\n      this._selectedElement.current.scrollIntoView(false);\n    }\n  };\n  SuggestionsControl.prototype.renderHeaderItems = function () {\n    var _this = this;\n    var _a = this.props,\n      headerItemsProps = _a.headerItemsProps,\n      suggestionsHeaderContainerAriaLabel = _a.suggestionsHeaderContainerAriaLabel;\n    var selectedHeaderIndex = this.state.selectedHeaderIndex;\n    return headerItemsProps ? React.createElement(\"div\", {\n      className: css('ms-Suggestions-headerContainer', styles.suggestionsContainer),\n      id: \"suggestionHeader-list\",\n      role: \"list\",\n      \"aria-label\": suggestionsHeaderContainerAriaLabel\n    }, headerItemsProps.map(function (headerItemProps, index) {\n      var isSelected = selectedHeaderIndex !== -1 && selectedHeaderIndex === index;\n      return headerItemProps.shouldShow() ? React.createElement(\"div\", {\n        ref: isSelected ? _this._selectedElement : undefined,\n        id: 'sug-header' + index,\n        key: 'sug-header' + index,\n        role: \"listitem\",\n        \"aria-label\": headerItemProps.ariaLabel\n      }, React.createElement(SuggestionsHeaderFooterItem, {\n        id: 'sug-header-item' + index,\n        isSelected: isSelected,\n        renderItem: headerItemProps.renderItem,\n        onExecute: headerItemProps.onExecute,\n        className: headerItemProps.className\n      })) : null;\n    })) : null;\n  };\n  SuggestionsControl.prototype.renderFooterItems = function () {\n    var _this = this;\n    var _a = this.props,\n      footerItemsProps = _a.footerItemsProps,\n      suggestionsFooterContainerAriaLabel = _a.suggestionsFooterContainerAriaLabel;\n    var selectedFooterIndex = this.state.selectedFooterIndex;\n    return footerItemsProps ? React.createElement(\"div\", {\n      className: css('ms-Suggestions-footerContainer', styles.suggestionsContainer),\n      id: \"suggestionFooter-list\",\n      role: \"list\",\n      \"aria-label\": suggestionsFooterContainerAriaLabel\n    }, footerItemsProps.map(function (footerItemProps, index) {\n      var isSelected = selectedFooterIndex !== -1 && selectedFooterIndex === index;\n      return footerItemProps.shouldShow() ? React.createElement(\"div\", {\n        ref: isSelected ? _this._selectedElement : undefined,\n        id: 'sug-footer' + index,\n        key: 'sug-footer' + index,\n        role: \"listitem\",\n        \"aria-label\": footerItemProps.ariaLabel\n      }, React.createElement(SuggestionsHeaderFooterItem, {\n        id: 'sug-footer-item' + index,\n        isSelected: isSelected,\n        renderItem: footerItemProps.renderItem,\n        onExecute: footerItemProps.onExecute,\n        className: footerItemProps.className\n      })) : null;\n    })) : null;\n  };\n  SuggestionsControl.prototype._renderSuggestions = function () {\n    var TypedSuggestions = this.SuggestionsOfProperType;\n    return React.createElement(TypedSuggestions, __assign({\n      ref: this._suggestions\n    }, this.props, {\n      suggestions: this.state.suggestions\n    }));\n  };\n  /**\n   * Selects the next selectable item\n   */\n  SuggestionsControl.prototype.selectNextItem = function (itemType, originalItemType) {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the first selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectNextItemOfItemType(itemType);\n      return;\n    }\n    var startedItemType = originalItemType !== undefined ? originalItemType : itemType;\n    // Try to set the selection to the next selectable item, of the same suggestion item type group\n    // If this is the original item type, use the current index\n    var selectionChanged = this._selectNextItemOfItemType(itemType, startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined);\n    // If the selection did not change, try to select from the next suggestion type group\n    if (!selectionChanged) {\n      this.selectNextItem(this._getNextItemSectionType(itemType), startedItemType);\n    }\n  };\n  /**\n   * Selects the previous selectable item\n   */\n  SuggestionsControl.prototype.selectPreviousItem = function (itemType, originalItemType) {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the last selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectPreviousItemOfItemType(itemType);\n      return;\n    }\n    var startedItemType = originalItemType !== undefined ? originalItemType : itemType;\n    // Try to set the selection to the previous selectable item, of the same suggestion item type group\n    var selectionChanged = this._selectPreviousItemOfItemType(itemType, startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined);\n    // If the selection did not change, try to select from the previous suggestion type group\n    if (!selectionChanged) {\n      this.selectPreviousItem(this._getPreviousItemSectionType(itemType), startedItemType);\n    }\n  };\n  /**\n   * Resets the selected state and selects the first selectable item\n   */\n  SuggestionsControl.prototype.resetSelectedItem = function () {\n    var _a;\n    this.setState({\n      selectedHeaderIndex: -1,\n      selectedFooterIndex: -1\n    });\n    (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.deselectAllSuggestions();\n    // Select the first item if the shouldSelectFirstItem prop is not set or it is set and it returns true\n    if (this.props.shouldSelectFirstItem === undefined || this.props.shouldSelectFirstItem()) {\n      this.selectFirstItem();\n    }\n  };\n  /**\n   * Selects the first item\n   */\n  SuggestionsControl.prototype.selectFirstItem = function () {\n    if (this._selectNextItemOfItemType(SuggestionItemType.header)) {\n      return;\n    }\n    if (this._selectNextItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n    this._selectNextItemOfItemType(SuggestionItemType.footer);\n  };\n  /**\n   * Selects the last item\n   */\n  SuggestionsControl.prototype.selectLastItem = function () {\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.footer)) {\n      return;\n    }\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n    this._selectPreviousItemOfItemType(SuggestionItemType.header);\n  };\n  /**\n   * Selects the next item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index, default is -1\n   */\n  SuggestionsControl.prototype._selectNextItemOfItemType = function (itemType, currentIndex) {\n    if (currentIndex === void 0) {\n      currentIndex = -1;\n    }\n    var _a, _b;\n    if (itemType === SuggestionItemType.suggestion) {\n      if (this.state.suggestions.length > currentIndex + 1) {\n        (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.setSelectedSuggestion(currentIndex + 1);\n        this.setState({\n          selectedHeaderIndex: -1,\n          selectedFooterIndex: -1\n        });\n        return true;\n      }\n    } else {\n      var isHeader = itemType === SuggestionItemType.header;\n      var itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n      if (itemProps && itemProps.length > currentIndex + 1) {\n        for (var i = currentIndex + 1; i < itemProps.length; i++) {\n          var item = itemProps[i];\n          if (item.onExecute && item.shouldShow()) {\n            this.setState({\n              selectedHeaderIndex: isHeader ? i : -1\n            });\n            this.setState({\n              selectedFooterIndex: isHeader ? -1 : i\n            });\n            (_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.deselectAllSuggestions();\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * Selects the previous item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index. If none is provided, the default is the items length of specified type\n   */\n  SuggestionsControl.prototype._selectPreviousItemOfItemType = function (itemType, currentIndex) {\n    var _a, _b;\n    if (itemType === SuggestionItemType.suggestion) {\n      var index = currentIndex !== undefined ? currentIndex : this.state.suggestions.length;\n      if (index > 0) {\n        (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.setSelectedSuggestion(index - 1);\n        this.setState({\n          selectedHeaderIndex: -1,\n          selectedFooterIndex: -1\n        });\n        return true;\n      }\n    } else {\n      var isHeader = itemType === SuggestionItemType.header;\n      var itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n      if (itemProps) {\n        var index = currentIndex !== undefined ? currentIndex : itemProps.length;\n        if (index > 0) {\n          for (var i = index - 1; i >= 0; i--) {\n            var item = itemProps[i];\n            if (item.onExecute && item.shouldShow()) {\n              this.setState({\n                selectedHeaderIndex: isHeader ? i : -1\n              });\n              this.setState({\n                selectedFooterIndex: isHeader ? -1 : i\n              });\n              (_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.deselectAllSuggestions();\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  };\n  SuggestionsControl.prototype._getCurrentIndexForType = function (itemType) {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return this.state.selectedHeaderIndex;\n      case SuggestionItemType.suggestion:\n        return this._suggestions.current.currentIndex;\n      case SuggestionItemType.footer:\n        return this.state.selectedFooterIndex;\n    }\n  };\n  SuggestionsControl.prototype._getNextItemSectionType = function (itemType) {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.suggestion;\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.footer;\n      case SuggestionItemType.footer:\n        return SuggestionItemType.header;\n    }\n  };\n  SuggestionsControl.prototype._getPreviousItemSectionType = function (itemType) {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.footer;\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.header;\n      case SuggestionItemType.footer:\n        return SuggestionItemType.suggestion;\n    }\n  };\n  return SuggestionsControl;\n}(React.Component);\nexport { SuggestionsControl };","map":{"version":3,"sources":["components/FloatingPicker/Suggestions/SuggestionsControl.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css, KeyCodes, initializeComponentRef } from '../../../Utilities';\nimport { IButton } from '../../../Button';\nimport { ISuggestionModel } from '../../../Pickers';\nimport {\n  ISuggestionsHeaderFooterItemProps,\n  ISuggestionsControlProps,\n  ISuggestionsCoreProps,\n  ISuggestionsHeaderFooterProps,\n} from './Suggestions.types';\nimport { SuggestionsCore } from './SuggestionsCore';\nimport * as stylesImport from './SuggestionsControl.scss';\nimport { hiddenContentStyle, mergeStyles } from '../../../Styling';\n\nconst styles: any = stylesImport;\n\nexport enum SuggestionItemType {\n  header,\n  suggestion,\n  footer,\n}\n\nexport interface ISuggestionsControlState<T> {\n  selectedHeaderIndex: number;\n  selectedFooterIndex: number;\n  suggestions: ISuggestionModel<T>[];\n}\n\nexport class SuggestionsHeaderFooterItem extends React.Component<ISuggestionsHeaderFooterItemProps, {}> {\n  constructor(props: ISuggestionsHeaderFooterItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { renderItem, onExecute, isSelected, id, className } = this.props;\n    return onExecute ? (\n      <div\n        id={id}\n        onClick={onExecute}\n        className={css('ms-Suggestions-sectionButton', className, styles.actionButton, {\n          ['is-selected ' + styles.buttonSelected]: isSelected,\n        })}\n      >\n        {renderItem()}\n      </div>\n    ) : (\n      <div id={id} className={css('ms-Suggestions-section', className, styles.suggestionsTitle)}>\n        {renderItem()}\n      </div>\n    );\n  }\n}\n\n/**\n * Class when used with SuggestionsStore, renders a suggestions control with customizable headers and footers\n */\nexport class SuggestionsControl<T> extends React.Component<ISuggestionsControlProps<T>, ISuggestionsControlState<T>> {\n  protected _forceResolveButton: IButton;\n  protected _searchForMoreButton: IButton;\n  protected _selectedElement = React.createRef<HTMLDivElement>();\n  protected _suggestions = React.createRef<SuggestionsCore<T>>();\n  private SuggestionsOfProperType: new (props: ISuggestionsCoreProps<T>) => SuggestionsCore<\n    T\n  > = SuggestionsCore as new (props: ISuggestionsCoreProps<T>) => SuggestionsCore<T>;\n\n  constructor(suggestionsProps: ISuggestionsControlProps<T>) {\n    super(suggestionsProps);\n\n    initializeComponentRef(this);\n    this.state = {\n      selectedHeaderIndex: -1,\n      selectedFooterIndex: -1,\n      suggestions: suggestionsProps.suggestions,\n    };\n  }\n\n  public componentDidMount(): void {\n    this.resetSelectedItem();\n  }\n\n  public componentDidUpdate(): void {\n    this.scrollSelected();\n  }\n\n  public UNSAFE_componentWillReceiveProps(newProps: ISuggestionsControlProps<T>): void {\n    if (newProps.suggestions) {\n      this.setState({ suggestions: newProps.suggestions }, () => {\n        this.resetSelectedItem();\n      });\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._suggestions.current?.deselectAllSuggestions();\n  }\n\n  public render(): JSX.Element {\n    const { className, headerItemsProps, footerItemsProps, suggestionsAvailableAlertText } = this.props;\n\n    const screenReaderTextStyles = mergeStyles(hiddenContentStyle);\n    const shouldAlertSuggestionsAvailableText =\n      this.state.suggestions && this.state.suggestions.length > 0 && suggestionsAvailableAlertText;\n\n    return (\n      <div className={css('ms-Suggestions', className ? className : '', styles.root)}>\n        {headerItemsProps && this.renderHeaderItems()}\n        {this._renderSuggestions()}\n        {footerItemsProps && this.renderFooterItems()}\n        {shouldAlertSuggestionsAvailableText ? (\n          <span role=\"alert\" aria-live=\"polite\" className={screenReaderTextStyles}>\n            {suggestionsAvailableAlertText}\n          </span>\n        ) : null}\n      </div>\n    );\n  }\n\n  public get currentSuggestion(): ISuggestionModel<T> | undefined {\n    return this._suggestions.current?.getCurrentItem() || undefined;\n  }\n\n  public get currentSuggestionIndex(): number {\n    return this._suggestions.current ? this._suggestions.current.currentIndex : -1;\n  }\n\n  public get selectedElement(): HTMLDivElement | undefined {\n    return this._selectedElement.current ? this._selectedElement.current : this._suggestions.current?.selectedElement;\n  }\n\n  public hasSuggestionSelected(): boolean {\n    return this._suggestions.current?.hasSuggestionSelected() || false;\n  }\n\n  public hasSelection(): boolean {\n    const { selectedHeaderIndex, selectedFooterIndex } = this.state;\n    return selectedHeaderIndex !== -1 || this.hasSuggestionSelected() || selectedFooterIndex !== -1;\n  }\n\n  public executeSelectedAction(): void {\n    const { headerItemsProps, footerItemsProps } = this.props;\n    const { selectedHeaderIndex, selectedFooterIndex } = this.state;\n\n    if (headerItemsProps && selectedHeaderIndex !== -1 && selectedHeaderIndex < headerItemsProps.length) {\n      const selectedHeaderItem = headerItemsProps[selectedHeaderIndex];\n      if (selectedHeaderItem.onExecute) {\n        selectedHeaderItem.onExecute();\n      }\n    } else if (this._suggestions.current?.hasSuggestionSelected()) {\n      this.props.completeSuggestion();\n    } else if (footerItemsProps && selectedFooterIndex !== -1 && selectedFooterIndex < footerItemsProps.length) {\n      const selectedFooterItem = footerItemsProps[selectedFooterIndex];\n      if (selectedFooterItem.onExecute) {\n        selectedFooterItem.onExecute();\n      }\n    }\n  }\n\n  public removeSuggestion(index?: number): void {\n    this._suggestions.current?.removeSuggestion(index ? index : this._suggestions.current?.currentIndex);\n  }\n\n  /**\n   * Handles the key down, returns true, if the event was handled, false otherwise\n   * @param keyCode - The keyCode to handle\n   */\n  public handleKeyDown(keyCode: number): boolean {\n    const { selectedHeaderIndex, selectedFooterIndex } = this.state;\n    let isKeyDownHandled = false;\n    if (keyCode === KeyCodes.down) {\n      if (\n        selectedHeaderIndex === -1 &&\n        !this._suggestions.current?.hasSuggestionSelected() &&\n        selectedFooterIndex === -1\n      ) {\n        this.selectFirstItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if (this._suggestions.current?.hasSuggestionSelected()) {\n        this.selectNextItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.up) {\n      if (\n        selectedHeaderIndex === -1 &&\n        !this._suggestions.current?.hasSuggestionSelected() &&\n        selectedFooterIndex === -1\n      ) {\n        this.selectLastItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if (this._suggestions.current?.hasSuggestionSelected()) {\n        this.selectPreviousItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.enter || keyCode === KeyCodes.tab) {\n      if (this.hasSelection()) {\n        this.executeSelectedAction();\n        isKeyDownHandled = true;\n      }\n    }\n\n    return isKeyDownHandled;\n  }\n\n  // TODO get the element to scroll into view properly regardless of direction.\n  public scrollSelected(): void {\n    if (this._selectedElement.current) {\n      this._selectedElement.current.scrollIntoView(false);\n    }\n  }\n\n  protected renderHeaderItems(): JSX.Element | null {\n    const { headerItemsProps, suggestionsHeaderContainerAriaLabel } = this.props;\n    const { selectedHeaderIndex } = this.state;\n\n    return headerItemsProps ? (\n      <div\n        className={css('ms-Suggestions-headerContainer', styles.suggestionsContainer)}\n        id=\"suggestionHeader-list\"\n        role=\"list\"\n        aria-label={suggestionsHeaderContainerAriaLabel}\n      >\n        {headerItemsProps.map((headerItemProps: ISuggestionsHeaderFooterProps, index: number) => {\n          const isSelected = selectedHeaderIndex !== -1 && selectedHeaderIndex === index;\n          return headerItemProps.shouldShow() ? (\n            <div\n              ref={isSelected ? this._selectedElement : undefined}\n              id={'sug-header' + index}\n              key={'sug-header' + index}\n              role=\"listitem\"\n              aria-label={headerItemProps.ariaLabel}\n            >\n              <SuggestionsHeaderFooterItem\n                id={'sug-header-item' + index}\n                isSelected={isSelected}\n                renderItem={headerItemProps.renderItem}\n                onExecute={headerItemProps.onExecute}\n                className={headerItemProps.className}\n              />\n            </div>\n          ) : null;\n        })}\n      </div>\n    ) : null;\n  }\n\n  protected renderFooterItems(): JSX.Element | null {\n    const { footerItemsProps, suggestionsFooterContainerAriaLabel } = this.props;\n    const { selectedFooterIndex } = this.state;\n    return footerItemsProps ? (\n      <div\n        className={css('ms-Suggestions-footerContainer', styles.suggestionsContainer)}\n        id=\"suggestionFooter-list\"\n        role=\"list\"\n        aria-label={suggestionsFooterContainerAriaLabel}\n      >\n        {footerItemsProps.map((footerItemProps: ISuggestionsHeaderFooterProps, index: number) => {\n          const isSelected = selectedFooterIndex !== -1 && selectedFooterIndex === index;\n          return footerItemProps.shouldShow() ? (\n            <div\n              ref={isSelected ? this._selectedElement : undefined}\n              id={'sug-footer' + index}\n              key={'sug-footer' + index}\n              role=\"listitem\"\n              aria-label={footerItemProps.ariaLabel}\n            >\n              <SuggestionsHeaderFooterItem\n                id={'sug-footer-item' + index}\n                isSelected={isSelected}\n                renderItem={footerItemProps.renderItem}\n                onExecute={footerItemProps.onExecute}\n                className={footerItemProps.className}\n              />\n            </div>\n          ) : null;\n        })}\n      </div>\n    ) : null;\n  }\n\n  protected _renderSuggestions(): JSX.Element {\n    const TypedSuggestions = this.SuggestionsOfProperType;\n\n    return <TypedSuggestions ref={this._suggestions} {...this.props} suggestions={this.state.suggestions} />;\n  }\n\n  /**\n   * Selects the next selectable item\n   */\n  protected selectNextItem(itemType: SuggestionItemType, originalItemType?: SuggestionItemType): void {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the first selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectNextItemOfItemType(itemType);\n      return;\n    }\n\n    const startedItemType = originalItemType !== undefined ? originalItemType : itemType;\n\n    // Try to set the selection to the next selectable item, of the same suggestion item type group\n    // If this is the original item type, use the current index\n    const selectionChanged = this._selectNextItemOfItemType(\n      itemType,\n      startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined,\n    );\n\n    // If the selection did not change, try to select from the next suggestion type group\n    if (!selectionChanged) {\n      this.selectNextItem(this._getNextItemSectionType(itemType), startedItemType);\n    }\n  }\n\n  /**\n   * Selects the previous selectable item\n   */\n  protected selectPreviousItem(itemType: SuggestionItemType, originalItemType?: SuggestionItemType): void {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the last selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectPreviousItemOfItemType(itemType);\n      return;\n    }\n\n    const startedItemType = originalItemType !== undefined ? originalItemType : itemType;\n\n    // Try to set the selection to the previous selectable item, of the same suggestion item type group\n    const selectionChanged = this._selectPreviousItemOfItemType(\n      itemType,\n      startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined,\n    );\n\n    // If the selection did not change, try to select from the previous suggestion type group\n    if (!selectionChanged) {\n      this.selectPreviousItem(this._getPreviousItemSectionType(itemType), startedItemType);\n    }\n  }\n\n  /**\n   * Resets the selected state and selects the first selectable item\n   */\n  protected resetSelectedItem(): void {\n    this.setState({ selectedHeaderIndex: -1, selectedFooterIndex: -1 });\n    this._suggestions.current?.deselectAllSuggestions();\n\n    // Select the first item if the shouldSelectFirstItem prop is not set or it is set and it returns true\n    if (this.props.shouldSelectFirstItem === undefined || this.props.shouldSelectFirstItem()) {\n      this.selectFirstItem();\n    }\n  }\n\n  /**\n   * Selects the first item\n   */\n  protected selectFirstItem(): void {\n    if (this._selectNextItemOfItemType(SuggestionItemType.header)) {\n      return;\n    }\n\n    if (this._selectNextItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n\n    this._selectNextItemOfItemType(SuggestionItemType.footer);\n  }\n\n  /**\n   * Selects the last item\n   */\n  protected selectLastItem(): void {\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.footer)) {\n      return;\n    }\n\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n\n    this._selectPreviousItemOfItemType(SuggestionItemType.header);\n  }\n\n  /**\n   * Selects the next item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index, default is -1\n   */\n  private _selectNextItemOfItemType(itemType: SuggestionItemType, currentIndex: number = -1): boolean {\n    if (itemType === SuggestionItemType.suggestion) {\n      if (this.state.suggestions.length > currentIndex + 1) {\n        this._suggestions.current?.setSelectedSuggestion(currentIndex + 1);\n        this.setState({ selectedHeaderIndex: -1, selectedFooterIndex: -1 });\n        return true;\n      }\n    } else {\n      const isHeader = itemType === SuggestionItemType.header;\n      const itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n\n      if (itemProps && itemProps.length > currentIndex + 1) {\n        for (let i = currentIndex + 1; i < itemProps.length; i++) {\n          const item = itemProps[i];\n          if (item.onExecute && item.shouldShow()) {\n            this.setState({ selectedHeaderIndex: isHeader ? i : -1 });\n            this.setState({ selectedFooterIndex: isHeader ? -1 : i });\n            this._suggestions.current?.deselectAllSuggestions();\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Selects the previous item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index. If none is provided, the default is the items length of specified type\n   */\n  private _selectPreviousItemOfItemType(itemType: SuggestionItemType, currentIndex?: number): boolean {\n    if (itemType === SuggestionItemType.suggestion) {\n      const index = currentIndex !== undefined ? currentIndex : this.state.suggestions.length;\n      if (index > 0) {\n        this._suggestions.current?.setSelectedSuggestion(index - 1);\n        this.setState({ selectedHeaderIndex: -1, selectedFooterIndex: -1 });\n        return true;\n      }\n    } else {\n      const isHeader = itemType === SuggestionItemType.header;\n      const itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n      if (itemProps) {\n        const index = currentIndex !== undefined ? currentIndex : itemProps.length;\n        if (index > 0) {\n          for (let i = index - 1; i >= 0; i--) {\n            const item = itemProps[i];\n            if (item.onExecute && item.shouldShow()) {\n              this.setState({ selectedHeaderIndex: isHeader ? i : -1 });\n              this.setState({ selectedFooterIndex: isHeader ? -1 : i });\n              this._suggestions.current?.deselectAllSuggestions();\n              return true;\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  private _getCurrentIndexForType(itemType: SuggestionItemType): number {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return this.state.selectedHeaderIndex;\n      case SuggestionItemType.suggestion:\n        return this._suggestions.current!.currentIndex;\n      case SuggestionItemType.footer:\n        return this.state.selectedFooterIndex;\n    }\n  }\n\n  private _getNextItemSectionType(itemType: SuggestionItemType): SuggestionItemType {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.suggestion;\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.footer;\n      case SuggestionItemType.footer:\n        return SuggestionItemType.header;\n    }\n  }\n\n  private _getPreviousItemSectionType(itemType: SuggestionItemType): SuggestionItemType {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.footer;\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.header;\n      case SuggestionItemType.footer:\n        return SuggestionItemType.suggestion;\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}