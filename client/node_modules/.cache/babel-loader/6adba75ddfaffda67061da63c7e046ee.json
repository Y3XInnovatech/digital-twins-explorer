{"ast":null,"code":"import { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { serializeRuleEntries } from './styleToClassName';\n/**\n * Registers keyframe definitions.\n *\n * @public\n */\nexport function keyframes(timeline) {\n  var stylesheet = Stylesheet.getInstance();\n  var name = stylesheet.getClassName();\n  var rulesArray = [];\n  for (var prop in timeline) {\n    if (timeline.hasOwnProperty(prop)) {\n      rulesArray.push(prop, '{', serializeRuleEntries(getStyleOptions(), timeline[prop]), '}');\n    }\n  }\n  var rules = rulesArray.join('');\n  stylesheet.insertRule(\"@keyframes \" + name + \"{\" + rules + \"}\", true);\n  stylesheet.cacheClassName(name, rules, [], ['keyframes', rules]);\n  return name;\n}","map":{"version":3,"sources":["keyframes.ts"],"names":[],"mappings":"AACA,SAAS,eAAe,QAAQ,qBAAqB;AACrD,SAAS,UAAU,QAAQ,cAAc;AACzC,SAAS,oBAAoB,QAAQ,oBAAoB;AAEzD;;;;AAIG;AACH,OAAM,SAAU,SAAS,CAAC,QAAoB,EAAA;EAC5C,IAAM,UAAU,GAAG,UAAU,CAAC,WAAW,CAAA,CAAE;EAC3C,IAAM,IAAI,GAAG,UAAU,CAAC,YAAY,CAAA,CAAE;EAEtC,IAAM,UAAU,GAAa,EAAE;EAE/B,KAAK,IAAM,IAAI,IAAI,QAAQ,EAAE;IAC3B,IAAI,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;MACjC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,oBAAoB,CAAC,eAAe,CAAA,CAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC;IACzF;EACF;EACD,IAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;EAEjC,UAAU,CAAC,UAAU,CAAC,aAAA,GAAc,IAAI,GAAA,GAAA,GAAI,KAAK,GAAA,GAAG,EAAE,IAAI,CAAC;EAE3D,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;EAEhE,OAAO,IAAI;AACb","sourcesContent":["import { IKeyframes } from './IKeyframes';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { serializeRuleEntries } from './styleToClassName';\n\n/**\n * Registers keyframe definitions.\n *\n * @public\n */\nexport function keyframes(timeline: IKeyframes): string {\n  const stylesheet = Stylesheet.getInstance();\n  const name = stylesheet.getClassName();\n\n  const rulesArray: string[] = [];\n\n  for (const prop in timeline) {\n    if (timeline.hasOwnProperty(prop)) {\n      rulesArray.push(prop, '{', serializeRuleEntries(getStyleOptions(), timeline[prop]), '}');\n    }\n  }\n  const rules = rulesArray.join('');\n\n  stylesheet.insertRule(`@keyframes ${name}{${rules}}`, true);\n\n  stylesheet.cacheClassName(name, rules, [], ['keyframes', rules]);\n\n  return name;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}