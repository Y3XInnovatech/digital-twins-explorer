{"ast":null,"code":"import { getWindow } from './dom/getWindow';\n/**\n * Fetches an item from session storage without throwing an exception\n * @param key The key of the item to fetch from session storage\n */\nexport function getItem(key) {\n  var result = null;\n  try {\n    var win = getWindow();\n    result = win ? win.sessionStorage.getItem(key) : null;\n  } catch (e) {\n    /* Eat the exception */\n  }\n  return result;\n}\n/**\n * Inserts an item into session storage without throwing an exception\n * @param key The key of the item to add to session storage\n * @param data The data to put into session storage\n */\nexport function setItem(key, data) {\n  var _a;\n  try {\n    (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage.setItem(key, data);\n  } catch (e) {\n    /* Eat the exception */\n  }\n}","map":{"version":3,"sources":["sessionStorage.ts"],"names":[],"mappings":"AAAA,SAAS,SAAS,QAAQ,iBAAiB;AAE3C;;;AAGG;AACH,OAAM,SAAU,OAAO,CAAC,GAAW,EAAA;EACjC,IAAI,MAAM,GAAG,IAAI;EACjB,IAAI;IACF,IAAM,GAAG,GAAG,SAAS,CAAA,CAAE;IACvB,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI;GACtD,CAAC,OAAO,CAAC,EAAE;IACV;EAAA;EAEF,OAAO,MAAM;AACf;AAEA;;;;AAIG;AACH,OAAM,SAAU,OAAO,CAAC,GAAW,EAAE,IAAY,EAAA;;EAC/C,IAAI;IACF,CAAA,EAAA,GAAA,SAAS,CAAA,CAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAA;GAC9C,CAAC,OAAO,CAAC,EAAE;IACV;EAAA;AAEJ","sourcesContent":["import { getWindow } from './dom/getWindow';\n\n/**\n * Fetches an item from session storage without throwing an exception\n * @param key The key of the item to fetch from session storage\n */\nexport function getItem(key: string): string | null {\n  let result = null;\n  try {\n    const win = getWindow();\n    result = win ? win.sessionStorage.getItem(key) : null;\n  } catch (e) {\n    /* Eat the exception */\n  }\n  return result;\n}\n\n/**\n * Inserts an item into session storage without throwing an exception\n * @param key The key of the item to add to session storage\n * @param data The data to put into session storage\n */\nexport function setItem(key: string, data: string): void {\n  try {\n    getWindow()?.sessionStorage.setItem(key, data);\n  } catch (e) {\n    /* Eat the exception */\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}