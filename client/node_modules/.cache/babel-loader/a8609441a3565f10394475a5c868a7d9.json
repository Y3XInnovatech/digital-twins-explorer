{"ast":null,"code":"import { fontFace } from '@uifabric/merge-styles';\nimport { FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport { createFontStyles } from './createFontStyles';\nimport { getLanguage, getWindow } from '@uifabric/utilities';\n// Default urls.\nvar DefaultBaseUrl = 'https://static2.sharepointonline.com/files/fabric/assets';\n// Standard font styling.\nexport var DefaultFontStyles = createFontStyles(getLanguage('sessionStorage'));\nfunction _registerFontFace(fontFamily, url, fontWeight, localFontName) {\n  fontFamily = \"'\" + fontFamily + \"'\";\n  var localFontSrc = localFontName !== undefined ? \"local('\" + localFontName + \"'),\" : '';\n  fontFace({\n    fontFamily: fontFamily,\n    src: localFontSrc + (\"url('\" + url + \".woff2') format('woff2'),\") + (\"url('\" + url + \".woff') format('woff')\"),\n    fontWeight: fontWeight,\n    fontStyle: 'normal',\n    fontDisplay: 'swap'\n  });\n}\nfunction _registerFontFaceSet(baseUrl, fontFamily, cdnFolder, cdnFontName, localFontName) {\n  if (cdnFontName === void 0) {\n    cdnFontName = 'segoeui';\n  }\n  var urlBase = baseUrl + \"/\" + cdnFolder + \"/\" + cdnFontName;\n  _registerFontFace(fontFamily, urlBase + '-light', FontWeights.light, localFontName && localFontName + ' Light');\n  _registerFontFace(fontFamily, urlBase + '-semilight', FontWeights.semilight, localFontName && localFontName + ' SemiLight');\n  _registerFontFace(fontFamily, urlBase + '-regular', FontWeights.regular, localFontName);\n  _registerFontFace(fontFamily, urlBase + '-semibold', FontWeights.semibold, localFontName && localFontName + ' SemiBold');\n  _registerFontFace(fontFamily, urlBase + '-bold', FontWeights.bold, localFontName && localFontName + ' Bold');\n}\nexport function registerDefaultFontFaces(baseUrl) {\n  if (baseUrl) {\n    var fontUrl = baseUrl + \"/fonts\";\n    // Produce @font-face definitions for all supported web fonts.\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Thai, 'leelawadeeui-thai', 'leelawadeeui');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Arabic, 'segoeui-arabic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Cyrillic, 'segoeui-cyrillic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.EastEuropean, 'segoeui-easteuropean');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Greek, 'segoeui-greek');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Hebrew, 'segoeui-hebrew');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Vietnamese, 'segoeui-vietnamese');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.WestEuropean, 'segoeui-westeuropean', 'segoeui', 'Segoe UI');\n    _registerFontFaceSet(fontUrl, LocalizedFontFamilies.Selawik, 'selawik', 'selawik');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Armenian, 'segoeui-armenian');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Georgian, 'segoeui-georgian');\n    // Leelawadee UI (Thai) does not have a 'light' weight, so we override\n    // the font-face generated above to use the 'semilight' weight instead.\n    _registerFontFace('Leelawadee UI Web', fontUrl + \"/leelawadeeui-thai/leelawadeeui-semilight\", FontWeights.light);\n    // Leelawadee UI (Thai) does not have a 'semibold' weight, so we override\n    // the font-face generated above to use the 'bold' weight instead.\n    _registerFontFace('Leelawadee UI Web', fontUrl + \"/leelawadeeui-thai/leelawadeeui-bold\", FontWeights.semibold);\n  }\n}\n/**\n * Reads the fontBaseUrl from window.FabricConfig.fontBaseUrl or falls back to a default.\n */\nfunction _getFontBaseUrl() {\n  var _a, _b, _c;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var fabricConfig = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.FabricConfig;\n  return _c = (_b = fabricConfig) === null || _b === void 0 ? void 0 : _b.fontBaseUrl, _c !== null && _c !== void 0 ? _c : DefaultBaseUrl;\n}\n/**\n * Register the font faces.\n */\nregisterDefaultFontFaces(_getFontBaseUrl());","map":{"version":3,"sources":["fonts/DefaultFontStyles.ts"],"names":[],"mappings":"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","sourcesContent":["import { fontFace, IFontWeight } from '@uifabric/merge-styles';\nimport { FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport { createFontStyles } from './createFontStyles';\nimport { getLanguage, getWindow } from '@uifabric/utilities';\nimport { IFontStyles } from '../types/IFontStyles';\nimport { IFabricConfig } from '../types/IFabricConfig';\n\n// Default urls.\nconst DefaultBaseUrl = 'https://static2.sharepointonline.com/files/fabric/assets';\n\n// Standard font styling.\nexport const DefaultFontStyles: IFontStyles = createFontStyles(getLanguage('sessionStorage'));\n\nfunction _registerFontFace(fontFamily: string, url: string, fontWeight?: IFontWeight, localFontName?: string): void {\n  fontFamily = `'${fontFamily}'`;\n\n  const localFontSrc = localFontName !== undefined ? `local('${localFontName}'),` : '';\n\n  fontFace({\n    fontFamily,\n    src: localFontSrc + `url('${url}.woff2') format('woff2'),` + `url('${url}.woff') format('woff')`,\n    fontWeight,\n    fontStyle: 'normal',\n    fontDisplay: 'swap',\n  });\n}\n\nfunction _registerFontFaceSet(\n  baseUrl: string,\n  fontFamily: string,\n  cdnFolder: string,\n  cdnFontName: string = 'segoeui',\n  localFontName?: string,\n): void {\n  const urlBase = `${baseUrl}/${cdnFolder}/${cdnFontName}`;\n\n  _registerFontFace(fontFamily, urlBase + '-light', FontWeights.light, localFontName && localFontName + ' Light');\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semilight',\n    FontWeights.semilight,\n    localFontName && localFontName + ' SemiLight',\n  );\n  _registerFontFace(fontFamily, urlBase + '-regular', FontWeights.regular, localFontName);\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semibold',\n    FontWeights.semibold,\n    localFontName && localFontName + ' SemiBold',\n  );\n  _registerFontFace(fontFamily, urlBase + '-bold', FontWeights.bold, localFontName && localFontName + ' Bold');\n}\n\nexport function registerDefaultFontFaces(baseUrl: string): void {\n  if (baseUrl) {\n    const fontUrl = `${baseUrl}/fonts`;\n\n    // Produce @font-face definitions for all supported web fonts.\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Thai, 'leelawadeeui-thai', 'leelawadeeui');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Arabic, 'segoeui-arabic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Cyrillic, 'segoeui-cyrillic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.EastEuropean, 'segoeui-easteuropean');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Greek, 'segoeui-greek');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Hebrew, 'segoeui-hebrew');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Vietnamese, 'segoeui-vietnamese');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.WestEuropean, 'segoeui-westeuropean', 'segoeui', 'Segoe UI');\n    _registerFontFaceSet(fontUrl, LocalizedFontFamilies.Selawik, 'selawik', 'selawik');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Armenian, 'segoeui-armenian');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Georgian, 'segoeui-georgian');\n\n    // Leelawadee UI (Thai) does not have a 'light' weight, so we override\n    // the font-face generated above to use the 'semilight' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-semilight`, FontWeights.light);\n\n    // Leelawadee UI (Thai) does not have a 'semibold' weight, so we override\n    // the font-face generated above to use the 'bold' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-bold`, FontWeights.semibold);\n  }\n}\n\n/**\n * Reads the fontBaseUrl from window.FabricConfig.fontBaseUrl or falls back to a default.\n */\nfunction _getFontBaseUrl(): string {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fabricConfig: IFabricConfig | undefined = (getWindow() as any)?.FabricConfig;\n\n  return fabricConfig?.fontBaseUrl ?? DefaultBaseUrl;\n}\n\n/**\n * Register the font faces.\n */\nregisterDefaultFontFaces(_getFontBaseUrl());\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}