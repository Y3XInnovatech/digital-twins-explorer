{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, getId, getNativeProps, inputProperties, classNamesFunction, initializeComponentRef } from '../../../../Utilities';\nimport { getStyles } from './EditingItem.styles';\nvar EditingItem = /** @class */function (_super) {\n  __extends(EditingItem, _super);\n  function EditingItem(props) {\n    var _this = _super.call(this, props) || this;\n    _this._editingFloatingPicker = React.createRef();\n    _this._renderEditingSuggestions = function () {\n      var FloatingPicker = _this.props.onRenderFloatingPicker;\n      var floatingPickerProps = _this.props.floatingPickerProps;\n      if (!FloatingPicker || !floatingPickerProps) {\n        return React.createElement(React.Fragment, null);\n      }\n      return React.createElement(FloatingPicker, __assign({\n        componentRef: _this._editingFloatingPicker,\n        onChange: _this._onSuggestionSelected,\n        inputElement: _this._editingInput,\n        selectedItems: []\n      }, floatingPickerProps));\n    };\n    _this._resolveInputRef = function (ref) {\n      _this._editingInput = ref;\n      _this.forceUpdate(function () {\n        _this._editingInput.focus();\n      });\n    };\n    _this._onInputClick = function () {\n      _this._editingFloatingPicker.current && _this._editingFloatingPicker.current.showPicker(true /*updatevalue*/);\n    };\n    _this._onInputBlur = function (ev) {\n      if (_this._editingFloatingPicker.current && ev.relatedTarget !== null) {\n        var target = ev.relatedTarget;\n        if (target.className.indexOf('ms-Suggestions-itemButton') === -1 && target.className.indexOf('ms-Suggestions-sectionButton') === -1) {\n          _this._editingFloatingPicker.current.forceResolveSuggestion();\n        }\n      }\n    };\n    _this._onInputChange = function (ev) {\n      var value = ev.target.value;\n      if (value === '') {\n        if (_this.props.onRemoveItem) {\n          _this.props.onRemoveItem();\n        }\n      } else {\n        _this._editingFloatingPicker.current && _this._editingFloatingPicker.current.onQueryStringChanged(value);\n      }\n    };\n    _this._onSuggestionSelected = function (item) {\n      _this.props.onEditingComplete(_this.props.item, item);\n    };\n    initializeComponentRef(_this);\n    // eslint-disable-next-line react/no-unused-state\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n  EditingItem.prototype.componentDidMount = function () {\n    var getEditingItemText = this.props.getEditingItemText;\n    var itemText = getEditingItemText(this.props.item);\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(itemText);\n    this._editingInput.value = itemText;\n    this._editingInput.focus();\n  };\n  EditingItem.prototype.render = function () {\n    var itemId = getId();\n    var nativeProps = getNativeProps(this.props, inputProperties);\n    var getClassNames = classNamesFunction();\n    var classNames = getClassNames(getStyles);\n    return React.createElement(\"div\", {\n      \"aria-labelledby\": 'editingItemPersona-' + itemId,\n      className: classNames.root\n    }, React.createElement(\"input\", __assign({\n      autoCapitalize: 'off',\n      autoComplete: 'off'\n    }, nativeProps, {\n      ref: this._resolveInputRef,\n      onChange: this._onInputChange,\n      onKeyDown: this._onInputKeyDown,\n      onBlur: this._onInputBlur,\n      onClick: this._onInputClick,\n      \"data-lpignore\": true,\n      className: classNames.input,\n      id: itemId\n    })), this._renderEditingSuggestions());\n  };\n  EditingItem.prototype._onInputKeyDown = function (ev) {\n    if (ev.which === KeyCodes.backspace || ev.which === KeyCodes.del) {\n      ev.stopPropagation();\n    }\n  };\n  return EditingItem;\n}(React.Component);\nexport { EditingItem };","map":{"version":3,"sources":["components/SelectedItemsList/SelectedPeopleList/Items/EditingItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  getId,\n  getNativeProps,\n  inputProperties,\n  classNamesFunction,\n  initializeComponentRef,\n} from '../../../../Utilities';\nimport { FloatingPeoplePicker } from '../../../../FloatingPicker';\nimport { IExtendedPersonaProps } from '../SelectedPeopleList';\nimport { IPeoplePickerItemState } from './ExtendedSelectedItem';\nimport { IEditingSelectedPeopleItemProps } from './EditingItem.types';\nimport { getStyles } from './EditingItem.styles';\nimport { IEditingSelectedPeopleItemStyles, IEditingSelectedPeopleItemStylesProps } from './EditingItem.types';\n\nexport class EditingItem extends React.Component<IEditingSelectedPeopleItemProps, IPeoplePickerItemState> {\n  private _editingInput: HTMLInputElement;\n  private _editingFloatingPicker = React.createRef<FloatingPeoplePicker>();\n\n  constructor(props: IEditingSelectedPeopleItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    // eslint-disable-next-line react/no-unused-state\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public componentDidMount(): void {\n    const getEditingItemText = this.props.getEditingItemText as (item: IExtendedPersonaProps) => string;\n    const itemText = getEditingItemText(this.props.item);\n\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(itemText);\n    this._editingInput.value = itemText;\n    this._editingInput.focus();\n  }\n\n  public render(): JSX.Element {\n    const itemId = getId();\n    const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(this.props, inputProperties);\n    const getClassNames = classNamesFunction<IEditingSelectedPeopleItemStylesProps, IEditingSelectedPeopleItemStyles>();\n    const classNames = getClassNames(getStyles);\n    return (\n      <div aria-labelledby={'editingItemPersona-' + itemId} className={classNames.root}>\n        <input\n          autoCapitalize={'off'}\n          autoComplete={'off'}\n          {...nativeProps}\n          ref={this._resolveInputRef}\n          onChange={this._onInputChange}\n          onKeyDown={this._onInputKeyDown}\n          onBlur={this._onInputBlur}\n          onClick={this._onInputClick}\n          data-lpignore={true}\n          className={classNames.input}\n          id={itemId}\n        />\n        {this._renderEditingSuggestions()}\n      </div>\n    );\n  }\n\n  private _renderEditingSuggestions = (): JSX.Element => {\n    const FloatingPicker = this.props.onRenderFloatingPicker;\n    const floatingPickerProps = this.props.floatingPickerProps;\n    if (!FloatingPicker || !floatingPickerProps) {\n      return <></>;\n    }\n    return (\n      <FloatingPicker\n        componentRef={this._editingFloatingPicker}\n        onChange={this._onSuggestionSelected}\n        inputElement={this._editingInput}\n        selectedItems={[]}\n        {...floatingPickerProps}\n      />\n    );\n  };\n\n  private _resolveInputRef = (ref: HTMLInputElement): void => {\n    this._editingInput = ref;\n\n    this.forceUpdate(() => {\n      this._editingInput.focus();\n    });\n  };\n\n  private _onInputClick = (): void => {\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.showPicker(true /*updatevalue*/);\n  };\n\n  private _onInputBlur = (ev: React.FocusEvent<HTMLElement>): void => {\n    if (this._editingFloatingPicker.current && ev.relatedTarget !== null) {\n      const target = ev.relatedTarget as HTMLElement;\n      if (\n        target.className.indexOf('ms-Suggestions-itemButton') === -1 &&\n        target.className.indexOf('ms-Suggestions-sectionButton') === -1\n      ) {\n        this._editingFloatingPicker.current.forceResolveSuggestion();\n      }\n    }\n  };\n\n  private _onInputChange = (ev: React.FormEvent<HTMLElement>): void => {\n    const value: string = (ev.target as HTMLInputElement).value;\n\n    if (value === '') {\n      if (this.props.onRemoveItem) {\n        this.props.onRemoveItem();\n      }\n    } else {\n      this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(value);\n    }\n  };\n\n  private _onInputKeyDown(ev: React.KeyboardEvent<HTMLInputElement>): void {\n    if (ev.which === KeyCodes.backspace || ev.which === KeyCodes.del) {\n      ev.stopPropagation();\n    }\n  }\n\n  private _onSuggestionSelected = (item: IExtendedPersonaProps): void => {\n    this.props.onEditingComplete(this.props.item, item);\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}