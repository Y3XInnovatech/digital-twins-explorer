{"ast":null,"code":"import * as React from 'react';\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory TagPicker}\n */\nexport var TagItemBase = function (props) {\n  var theme = props.theme,\n    styles = props.styles,\n    selected = props.selected,\n    disabled = props.disabled,\n    enableTagFocusInDisabledPicker = props.enableTagFocusInDisabledPicker,\n    children = props.children,\n    className = props.className,\n    index = props.index,\n    onRemoveItem = props.onRemoveItem,\n    removeButtonAriaLabel = props.removeButtonAriaLabel,\n    _a = props.title,\n    title = _a === void 0 ? typeof props.children === 'string' ? props.children : props.item.name : _a;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: 'listitem',\n    key: index,\n    \"data-selection-index\": index,\n    \"data-is-focusable\": (enableTagFocusInDisabledPicker || !disabled) && true\n  }, React.createElement(\"span\", {\n    className: classNames.text,\n    \"aria-label\": title,\n    title: title\n  }, children), React.createElement(IconButton, {\n    onClick: onRemoveItem,\n    disabled: disabled,\n    iconProps: {\n      iconName: 'Cancel',\n      styles: {\n        root: {\n          fontSize: '12px'\n        }\n      }\n    },\n    className: classNames.close,\n    ariaLabel: removeButtonAriaLabel\n  }));\n};\nexport var TagItem = styled(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem'\n});","map":{"version":3,"sources":["components/pickers/TagPicker/TagItem.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAE9B,SAAS,MAAM,EAAE,kBAAkB,QAAQ,oBAAoB;AAC/D,SAAS,UAAU,QAAQ,iBAAiB;AAG5C,SAAS,SAAS,QAAQ,kBAAkB;AAE5C,IAAM,aAAa,GAAG,kBAAkB,CAAA,CAAsC;AAE9E;;AAEG;AACH,OAAO,IAAM,WAAW,GAAG,SAAA,CAAC,KAAoB,EAAA;EAE5C,IAAA,KAAA,GAAA,KAAA,CAAA,KAAK;IACL,MAAA,GAAA,KAAA,CAAA,MAAM;IACN,QAAA,GAAA,KAAA,CAAA,QAAQ;IACR,QAAA,GAAA,KAAA,CAAA,QAAQ;IACR,8BAAA,GAAA,KAAA,CAAA,8BAA8B;IAC9B,QAAA,GAAA,KAAA,CAAA,QAAQ;IACR,SAAA,GAAA,KAAA,CAAA,SAAS;IACT,KAAA,GAAA,KAAA,CAAA,KAAK;IACL,YAAA,GAAA,KAAA,CAAA,YAAY;IACZ,qBAAA,GAAA,KAAA,CAAA,qBAAqB;IACrB,EAAA,GAAA,KAAA,CAAA,KAA6E;IAA7E,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,OAAA,KAAA,CAAA,QAAA,KAAA,QAAA,GAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,IAAA,CAAA,IAAA,GAAA,EAA6E;EAG/E,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;IACvC,KAAK,EAAE,KAAM;IACb,SAAS,EAAA,SAAA;IACT,QAAQ,EAAA,QAAA;IACR,QAAQ,EAAA;GACT,CAAC;EAEF,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACE,SAAS,EAAE,UAAU,CAAC,IAAI;IAC1B,IAAI,EAAE,UAAU;IAChB,GAAG,EAAE,KAAK;IAAA,sBAAA,EACY,KAAK;IAAA,mBAAA,EACR,CAAC,8BAA8B,IAAI,CAAC,QAAQ,KAAK;EAAI,CAAA,EAExE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,UAAU,CAAC,IAAI;IAAA,YAAA,EAAc,KAAK;IAAE,KAAK,EAAE;EAAK,CAAA,EAC9D,QAAQ,CACJ,EACP,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;IACT,OAAO,EAAE,YAAY;IACrB,QAAQ,EAAE,QAAQ;IAClB,SAAS,EAAE;MAAE,QAAQ,EAAE,QAAQ;MAAE,MAAM,EAAE;QAAE,IAAI,EAAE;UAAE,QAAQ,EAAE;QAAM;MAAE;IAAE,CAAE;IACzE,SAAS,EAAE,UAAU,CAAC,KAAK;IAC3B,SAAS,EAAE;EAAqB,CAAA,CAChC,CACE;AAEV,CAAC;AAED,OAAO,IAAM,OAAO,GAAG,MAAM,CAAoD,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE;EAClH,KAAK,EAAE;CACR,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\n\nimport { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\nimport { getStyles } from './TagItem.styles';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel,\n    title = typeof props.children === 'string' ? props.children : props.item.name,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n  });\n\n  return (\n    <div\n      className={classNames.root}\n      role={'listitem'}\n      key={index}\n      data-selection-index={index}\n      data-is-focusable={(enableTagFocusInDisabledPicker || !disabled) && true}\n    >\n      <span className={classNames.text} aria-label={title} title={title}>\n        {children}\n      </span>\n      <IconButton\n        onClick={onRemoveItem}\n        disabled={disabled}\n        iconProps={{ iconName: 'Cancel', styles: { root: { fontSize: '12px' } } }}\n        className={classNames.close}\n        ariaLabel={removeButtonAriaLabel}\n      />\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem',\n});\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}