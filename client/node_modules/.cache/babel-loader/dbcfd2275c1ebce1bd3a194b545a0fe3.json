{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * @ignore\n * @internal\n */\nvar OpenCensusTraceStateWrapper = /** @class */function () {\n  function OpenCensusTraceStateWrapper(state) {\n    this._state = state;\n  }\n  OpenCensusTraceStateWrapper.prototype.get = function (_key) {\n    throw new Error(\"Method not implemented.\");\n  };\n  OpenCensusTraceStateWrapper.prototype.set = function (_key, _value) {\n    throw new Error(\"Method not implemented.\");\n  };\n  OpenCensusTraceStateWrapper.prototype.unset = function (_key) {\n    throw new Error(\"Method not implemented\");\n  };\n  OpenCensusTraceStateWrapper.prototype.serialize = function () {\n    return this._state || \"\";\n  };\n  return OpenCensusTraceStateWrapper;\n}();\nexport { OpenCensusTraceStateWrapper };","map":{"version":3,"sources":["../../../../src/tracers/opencensus/openCensusTraceStateWrapper.ts"],"names":[],"mappings":"AAAA;AACA;AAIA;;;AAGG;AACH,IAAA,2BAAA,GAAA,aAAA,YAAA;EAGE,SAAA,2BAAA,CAAY,KAAc,EAAA;IACxB,IAAI,CAAC,MAAM,GAAG,KAAK;EACrB;EAEA,2BAAA,CAAA,SAAA,CAAA,GAAG,GAAH,UAAI,IAAY,EAAA;IACd,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC;EAC5C,CAAC;EAED,2BAAA,CAAA,SAAA,CAAA,GAAG,GAAH,UAAI,IAAY,EAAE,MAAc,EAAA;IAC9B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC;EAC5C,CAAC;EAED,2BAAA,CAAA,SAAA,CAAA,KAAK,GAAL,UAAM,IAAY,EAAA;IAChB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC;EAC3C,CAAC;EAED,2BAAA,CAAA,SAAA,CAAA,SAAS,GAAT,YAAA;IACE,OAAO,IAAI,CAAC,MAAM,IAAI,EAAE;EAC1B,CAAC;EACH,OAAA,2BAAC;AAAD,CAAC,CAAA,CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TraceState } from \"@opentelemetry/api\";\n\n/**\n * @ignore\n * @internal\n */\nexport class OpenCensusTraceStateWrapper implements TraceState {\n  private readonly _state?: string;\n\n  constructor(state?: string) {\n    this._state = state;\n  }\n\n  get(_key: string): string | undefined {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  set(_key: string, _value: string): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  unset(_key: string): void {\n    throw new Error(\"Method not implemented\");\n  }\n\n  serialize(): string {\n    return this._state || \"\";\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}