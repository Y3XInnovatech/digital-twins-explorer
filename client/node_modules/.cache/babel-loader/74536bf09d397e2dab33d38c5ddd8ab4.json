{"ast":null,"code":"import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\nexport function getVirtualParent(child) {\n  var parent;\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n  return parent;\n}","map":{"version":3,"sources":["getVirtualParent.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAgB,QAAQ,oBAAoB;AACrD;;;;AAIG;AACH,OAAM,SAAU,gBAAgB,CAAC,KAAkB,EAAA;EACjD,IAAI,MAA+B;EACnC,IAAI,KAAK,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;IACpC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM;EAC/B;EACD,OAAO,MAAM;AACf","sourcesContent":["import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\nexport function getVirtualParent(child: HTMLElement): HTMLElement | undefined {\n  let parent: HTMLElement | undefined;\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n  return parent;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}