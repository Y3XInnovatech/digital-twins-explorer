{"ast":null,"code":"import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport { mergeStyleSets, getGlobalClassNames, getScreenSelector, ScreenWidthMaxMedium, hiddenContentStyle } from '../../Styling';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nvar CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\nvar MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\nexport var getSplitButtonVerticalDividerClassNames = memoizeFunction(/* eslint-disable deprecation/deprecation */\nfunction (theme) {\n  var _a;\n  return mergeStyleSets(getDividerClassNames(theme), {\n    /* eslint-enable deprecation/deprecation */\n    wrapper: {\n      position: 'absolute',\n      right: 28,\n      selectors: (_a = {}, _a[MediumScreenSelector] = {\n        right: 32\n      }, _a)\n    },\n    divider: {\n      height: 16,\n      width: 1\n    }\n  });\n});\nvar GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText',\n  splitMenu: 'ms-ContextualMenu-splitMenu',\n  screenReaderText: 'ms-ContextualMenu-screenReaderText'\n};\n/**\n * @deprecated To be removed in 7.0.\n * @internal\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * It should be cleaned up in 7.0.\n *\n * TODO: Audit perf. impact of and potentially remove memoizeFunction.\n * https://github.com/microsoft/fluentui/issues/5534\n */\nexport var getItemClassNames = memoizeFunction(function (theme, disabled, expanded, checked, isAnchorLink, knownIcon, itemClassName, dividerClassName, iconClassName, subMenuClassName, primaryDisabled, className) {\n  var _a, _b, _c, _d;\n  var styles = getMenuItemStyles(theme);\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return mergeStyleSets({\n    item: [classNames.item, styles.item, itemClassName],\n    divider: [classNames.divider, styles.divider, dividerClassName],\n    root: [classNames.root, styles.root, checked && [classNames.isChecked, styles.rootChecked], isAnchorLink && styles.anchorLink, expanded && [classNames.isExpanded, styles.rootExpanded], disabled && [classNames.isDisabled, styles.rootDisabled], !disabled && !expanded && [{\n      selectors: (_a = {\n        ':hover': styles.rootHovered,\n        ':active': styles.rootPressed\n      }, _a[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _a[\".\" + IsFocusVisibleClassName + \" &:hover\"] = {\n        background: 'inherit;'\n      }, _a)\n    }], className],\n    splitPrimary: [styles.root, {\n      width: \"calc(100% - \" + CONTEXTUAL_SPLIT_MENU_MINWIDTH + \")\"\n    }, checked && ['is-checked', styles.rootChecked], (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled], !(disabled || primaryDisabled) && !checked && [{\n      selectors: (_b = {\n        ':hover': styles.rootHovered\n      },\n      // when hovering over the splitPrimary also affect the splitMenu\n      _b[\":hover ~ .\" + classNames.splitMenu] = styles.rootHovered, _b[':active'] = styles.rootPressed, _b[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _b[\".\" + IsFocusVisibleClassName + \" &:hover\"] = {\n        background: 'inherit;'\n      }, _b)\n    }]],\n    splitMenu: [classNames.splitMenu, styles.root, {\n      flexBasis: '0',\n      padding: '0 8px',\n      minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH\n    }, expanded && ['is-expanded', styles.rootExpanded], disabled && ['is-disabled', styles.rootDisabled], !disabled && !expanded && [{\n      selectors: (_c = {\n        ':hover': styles.rootHovered,\n        ':active': styles.rootPressed\n      }, _c[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _c[\".\" + IsFocusVisibleClassName + \" &:hover\"] = {\n        background: 'inherit;'\n      }, _c)\n    }]],\n    anchorLink: styles.anchorLink,\n    linkContent: [classNames.linkContent, styles.linkContent],\n    linkContentMenu: [classNames.linkContentMenu, styles.linkContent, {\n      justifyContent: 'center'\n    }],\n    icon: [classNames.icon, knownIcon && styles.iconColor, styles.icon, iconClassName, disabled && [classNames.isDisabled, styles.iconDisabled]],\n    iconColor: styles.iconColor,\n    checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n    subMenuIcon: [classNames.subMenuIcon, styles.subMenuIcon, subMenuClassName, expanded && {\n      color: theme.palette.neutralPrimary\n    }, disabled && [styles.iconDisabled]],\n    label: [classNames.label, styles.label],\n    secondaryText: [classNames.secondaryText, styles.secondaryText],\n    splitContainer: [styles.splitButtonFlexContainer, !disabled && !checked && [{\n      selectors: (_d = {}, _d[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _d)\n    }]],\n    screenReaderText: [classNames.screenReaderText, styles.screenReaderText, hiddenContentStyle, {\n      visibility: 'hidden'\n    }]\n  });\n});\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props - the ContextualMenuItem style props used to generate its styles.\n */\nexport var getItemStyles = function (props) {\n  var theme = props.theme,\n    disabled = props.disabled,\n    expanded = props.expanded,\n    checked = props.checked,\n    isAnchorLink = props.isAnchorLink,\n    knownIcon = props.knownIcon,\n    itemClassName = props.itemClassName,\n    dividerClassName = props.dividerClassName,\n    iconClassName = props.iconClassName,\n    subMenuClassName = props.subMenuClassName,\n    primaryDisabled = props.primaryDisabled,\n    className = props.className;\n  // eslint-disable-next-line deprecation/deprecation\n  return getItemClassNames(theme, disabled, expanded, checked, isAnchorLink, knownIcon, itemClassName, dividerClassName, iconClassName, subMenuClassName, primaryDisabled, className);\n};","map":{"version":3,"sources":["components/ContextualMenu/ContextualMenu.classNames.ts"],"names":[],"mappings":"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","sourcesContent":["import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport {\n  ITheme,\n  mergeStyleSets,\n  getGlobalClassNames,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  hiddenContentStyle,\n} from '../../Styling';\nimport { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nimport { IContextualMenuItemStyles, IContextualMenuItemStyleProps } from './ContextualMenuItem.types';\nimport { IContextualMenuSubComponentStyles } from './ContextualMenu.types';\n\n/**\n * @deprecated in favor of mergeStyles API.\n */\nexport interface IContextualMenuClassNames {\n  container?: string;\n  root?: string;\n  list?: string;\n  header?: string;\n  title?: string;\n  subComponentStyles?: IContextualMenuSubComponentStyles;\n}\n\n/**\n * @deprecated in favor of mergeStyles API.\n */\nexport interface IMenuItemClassNames {\n  item?: string;\n  divider?: string;\n  root?: string;\n  linkContent?: string;\n  icon?: string;\n  checkmarkIcon?: string;\n  subMenuIcon?: string;\n  label?: string;\n  secondaryText?: string;\n  splitContainer?: string;\n  splitPrimary?: string;\n  splitMenu?: string;\n  linkContentMenu?: string;\n  screenReaderText?: string;\n}\n\nconst CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getSplitButtonVerticalDividerClassNames = memoizeFunction(\n  /* eslint-disable deprecation/deprecation */\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets(getDividerClassNames(theme), {\n      /* eslint-enable deprecation/deprecation */\n      wrapper: {\n        position: 'absolute',\n        right: 28, // width of the splitMenu based on the padding plus icon fontSize\n        selectors: {\n          [MediumScreenSelector]: {\n            right: 32, // fontSize of the icon increased from 12px to 16px\n          },\n        },\n      },\n      divider: {\n        height: 16,\n        width: 1,\n      },\n    });\n  },\n);\n\nconst GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText',\n  splitMenu: 'ms-ContextualMenu-splitMenu',\n  screenReaderText: 'ms-ContextualMenu-screenReaderText',\n};\n\n/**\n * @deprecated To be removed in 7.0.\n * @internal\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * It should be cleaned up in 7.0.\n *\n * TODO: Audit perf. impact of and potentially remove memoizeFunction.\n * https://github.com/microsoft/fluentui/issues/5534\n */\nexport const getItemClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n    className?: string,\n  ): IContextualMenuItemStyles => {\n    const styles = getMenuItemStyles(theme);\n    const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n    return mergeStyleSets({\n      item: [classNames.item, styles.item, itemClassName],\n      divider: [classNames.divider, styles.divider, dividerClassName],\n      root: [\n        classNames.root,\n        styles.root,\n        checked && [classNames.isChecked, styles.rootChecked],\n        isAnchorLink && styles.anchorLink,\n        expanded && [classNames.isExpanded, styles.rootExpanded],\n        disabled && [classNames.isDisabled, styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n        className,\n      ],\n      splitPrimary: [\n        styles.root,\n        {\n          width: `calc(100% - ${CONTEXTUAL_SPLIT_MENU_MINWIDTH})`,\n        },\n        checked && ['is-checked', styles.rootChecked],\n        (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled],\n        !(disabled || primaryDisabled) &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                // when hovering over the splitPrimary also affect the splitMenu\n                [`:hover ~ .${classNames.splitMenu}`]: styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      splitMenu: [\n        classNames.splitMenu,\n        styles.root,\n        {\n          flexBasis: '0',\n          padding: '0 8px',\n          minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH,\n        },\n        expanded && ['is-expanded', styles.rootExpanded],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      anchorLink: styles.anchorLink,\n      linkContent: [classNames.linkContent, styles.linkContent],\n      linkContentMenu: [\n        classNames.linkContentMenu,\n        styles.linkContent,\n        {\n          justifyContent: 'center',\n        },\n      ],\n      icon: [\n        classNames.icon,\n        knownIcon && styles.iconColor,\n        styles.icon,\n        iconClassName,\n        disabled && [classNames.isDisabled, styles.iconDisabled],\n      ],\n      iconColor: styles.iconColor,\n      checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n      subMenuIcon: [\n        classNames.subMenuIcon,\n        styles.subMenuIcon,\n        subMenuClassName,\n        expanded && { color: theme.palette.neutralPrimary },\n        disabled && [styles.iconDisabled],\n      ],\n      label: [classNames.label, styles.label],\n      secondaryText: [classNames.secondaryText, styles.secondaryText],\n      splitContainer: [\n        styles.splitButtonFlexContainer,\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n              },\n            },\n          ],\n      ],\n      screenReaderText: [\n        classNames.screenReaderText,\n        styles.screenReaderText,\n        hiddenContentStyle,\n        { visibility: 'hidden' },\n      ],\n    });\n  },\n);\n\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props - the ContextualMenuItem style props used to generate its styles.\n */\nexport const getItemStyles = (props: IContextualMenuItemStyleProps): IContextualMenuItemStyles => {\n  const {\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  } = props;\n\n  // eslint-disable-next-line deprecation/deprecation\n  return getItemClassNames(\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}