{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __awaiter, __extends, __generator } from \"tslib\";\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nvar DisbleResponseDecompressionNotSupportedInBrowser = new Error(\"DisableResponseDecompressionPolicy is not supported in browser environment\");\n/**\n * {@link DisableResponseDecompressionPolicy} is not supported in browser and attempting\n * to use it will results in error being thrown.\n */\nexport function disableResponseDecompressionPolicy() {\n  return {\n    create: function (_nextPolicy, _options) {\n      throw DisbleResponseDecompressionNotSupportedInBrowser;\n    }\n  };\n}\nvar DisableResponseDecompressionPolicy = /** @class */function (_super) {\n  __extends(DisableResponseDecompressionPolicy, _super);\n  function DisableResponseDecompressionPolicy(nextPolicy, options) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n    throw DisbleResponseDecompressionNotSupportedInBrowser;\n    return _this;\n  }\n  DisableResponseDecompressionPolicy.prototype.sendRequest = function (_request) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw DisbleResponseDecompressionNotSupportedInBrowser;\n      });\n    });\n  };\n  return DisableResponseDecompressionPolicy;\n}(BaseRequestPolicy);\nexport { DisableResponseDecompressionPolicy };","map":{"version":3,"sources":["../../../src/policies/disableResponseDecompressionPolicy.browser.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA;;AAEG;AACH,SACE,iBAAiB,QAIZ,iBAAiB;AAIxB,IAAM,gDAAgD,GAAG,IAAI,KAAK,CAChE,4EAA4E,CAC7E;AAED;;;AAGG;AACH,OAAM,SAAU,kCAAkC,CAAA,EAAA;EAChD,OAAO;IACL,MAAM,EAAE,SAAA,CAAC,WAA0B,EAAE,QAA8B,EAAA;MACjE,MAAM,gDAAgD;IACxD;GACD;AACH;AAEA,IAAA,kCAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAwD,SAAA,CAAA,kCAAA,EAAA,MAAA,CAAA;EACtD,SAAA,kCAAA,CAAY,UAAyB,EAAE,OAA6B,EAAA;IAApE,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,UAAU,EAAE,OAAO,CAAC,IAAA,IAAA;IAC1B,MAAM,gDAAgD;;EACxD;EAEa,kCAAA,CAAA,SAAA,CAAA,WAAW,GAAxB,UAAyB,QAAqB,EAAA;;;QAC5C,MAAM,gDAAgD;;;GACvD;EACH,OAAA,kCAAC;AAAD,CAAC,CATuD,iBAAiB,CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"./requestPolicy\";\nimport { WebResource } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\n\nconst DisbleResponseDecompressionNotSupportedInBrowser = new Error(\n  \"DisableResponseDecompressionPolicy is not supported in browser environment\"\n);\n\n/**\n * {@link DisableResponseDecompressionPolicy} is not supported in browser and attempting\n * to use it will results in error being thrown.\n */\nexport function disableResponseDecompressionPolicy(): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw DisbleResponseDecompressionNotSupportedInBrowser;\n    }\n  };\n}\n\nexport class DisableResponseDecompressionPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw DisbleResponseDecompressionNotSupportedInBrowser;\n  }\n\n  public async sendRequest(_request: WebResource): Promise<HttpOperationResponse> {\n    throw DisbleResponseDecompressionNotSupportedInBrowser;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}