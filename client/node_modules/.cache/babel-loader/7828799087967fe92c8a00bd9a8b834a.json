{"ast":null,"code":"var _vendorSettings;\nexport function getVendorSettings() {\n  if (!_vendorSettings) {\n    var doc = typeof document !== 'undefined' ? document : undefined;\n    var nav = typeof navigator !== 'undefined' ? navigator : undefined;\n    var userAgent = nav ? nav.userAgent.toLowerCase() : undefined;\n    if (!doc) {\n      _vendorSettings = {\n        isWebkit: true,\n        isMoz: true,\n        isOpera: true,\n        isMs: true\n      };\n    } else {\n      _vendorSettings = {\n        isWebkit: !!(doc && 'WebkitAppearance' in doc.documentElement.style),\n        isMoz: !!(userAgent && userAgent.indexOf('firefox') > -1),\n        isOpera: !!(userAgent && userAgent.indexOf('opera') > -1),\n        isMs: !!(nav && (/rv:11.0/i.test(nav.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)))\n      };\n    }\n  }\n  return _vendorSettings;\n}\n/**\n * Sets the vendor settings for prefixing and vendor specific operations.\n */\nexport function setVendorSettings(vendorSettings) {\n  _vendorSettings = vendorSettings;\n}","map":{"version":3,"sources":["getVendorSettings.ts"],"names":[],"mappings":"AAOA,IAAI,eAA4C;AAEhD,OAAM,SAAU,iBAAiB,CAAA,EAAA;EAC/B,IAAI,CAAC,eAAe,EAAE;IACpB,IAAM,GAAG,GAAG,OAAO,QAAQ,KAAK,WAAW,GAAG,QAAQ,GAAG,SAAS;IAClE,IAAM,GAAG,GAAG,OAAO,SAAS,KAAK,WAAW,GAAG,SAAS,GAAG,SAAS;IACpE,IAAM,SAAS,GAAG,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,WAAW,CAAA,CAAE,GAAG,SAAS;IAE/D,IAAI,CAAC,GAAG,EAAE;MACR,eAAe,GAAG;QAChB,QAAQ,EAAE,IAAI;QACd,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;QACb,IAAI,EAAE;OACP;KACF,MAAM;MACL,eAAe,GAAG;QAChB,QAAQ,EAAE,CAAC,EAAE,GAAG,IAAI,kBAAkB,IAAI,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC;QACpE,KAAK,EAAE,CAAC,EAAE,SAAS,IAAI,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACzD,OAAO,EAAE,CAAC,EAAE,SAAS,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACzD,IAAI,EAAE,CAAC,EAAE,GAAG,KAAK,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;OAC3F;IACF;EACF;EAED,OAAO,eAAe;AACxB;AAEA;;AAEG;AACH,OAAM,SAAU,iBAAiB,CAAC,cAAgC,EAAA;EAChE,eAAe,GAAG,cAAc;AAClC","sourcesContent":["export interface IVendorSettings {\n  isWebkit?: boolean;\n  isMoz?: boolean;\n  isMs?: boolean;\n  isOpera?: boolean;\n}\n\nlet _vendorSettings: IVendorSettings | undefined;\n\nexport function getVendorSettings(): IVendorSettings {\n  if (!_vendorSettings) {\n    const doc = typeof document !== 'undefined' ? document : undefined;\n    const nav = typeof navigator !== 'undefined' ? navigator : undefined;\n    const userAgent = nav ? nav.userAgent.toLowerCase() : undefined;\n\n    if (!doc) {\n      _vendorSettings = {\n        isWebkit: true,\n        isMoz: true,\n        isOpera: true,\n        isMs: true,\n      };\n    } else {\n      _vendorSettings = {\n        isWebkit: !!(doc && 'WebkitAppearance' in doc.documentElement.style),\n        isMoz: !!(userAgent && userAgent.indexOf('firefox') > -1),\n        isOpera: !!(userAgent && userAgent.indexOf('opera') > -1),\n        isMs: !!(nav && (/rv:11.0/i.test(nav.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent))),\n      };\n    }\n  }\n\n  return _vendorSettings;\n}\n\n/**\n * Sets the vendor settings for prefixing and vendor specific operations.\n */\nexport function setVendorSettings(vendorSettings?: IVendorSettings): void {\n  _vendorSettings = vendorSettings;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}