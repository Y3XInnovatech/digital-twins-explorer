{"ast":null,"code":"import { Shade } from '../../utilities/color/shades';\nimport { getColorFromString } from '../../utilities/color/getColorFromString';\nimport { mapEnumByName } from '../../Utilities';\n/* This is the set of rules for our default theme.\n   We start with three base slots, defining the background, foreground (text), and\n   primary color (sometimes called theme color). Each Fabric slot is generated from\n   shades (or tints) of one of those three, creating the Fabric palette.\n   Then, we have semantic slots, the new thing intended to eventually replace the\n   Fabric palette. The semantic slots inherit from the Fabric palette. */\n/* The most minimal set of slots we start with. All other ones can be generated based on rules.\n * This is not so much an enum as it is a list. The enum is used to insure \"type\"-safety.\n * For now, we are only dealing with color. */\nexport var BaseSlots;\n(function (BaseSlots) {\n  BaseSlots[BaseSlots[\"primaryColor\"] = 0] = \"primaryColor\";\n  BaseSlots[BaseSlots[\"backgroundColor\"] = 1] = \"backgroundColor\";\n  BaseSlots[BaseSlots[\"foregroundColor\"] = 2] = \"foregroundColor\";\n})(BaseSlots || (BaseSlots = {}));\n/* The original Fabric palette, only for back-compat. */\nexport var FabricSlots;\n(function (FabricSlots) {\n  FabricSlots[FabricSlots[\"themePrimary\"] = 0] = \"themePrimary\";\n  FabricSlots[FabricSlots[\"themeLighterAlt\"] = 1] = \"themeLighterAlt\";\n  FabricSlots[FabricSlots[\"themeLighter\"] = 2] = \"themeLighter\";\n  FabricSlots[FabricSlots[\"themeLight\"] = 3] = \"themeLight\";\n  FabricSlots[FabricSlots[\"themeTertiary\"] = 4] = \"themeTertiary\";\n  FabricSlots[FabricSlots[\"themeSecondary\"] = 5] = \"themeSecondary\";\n  FabricSlots[FabricSlots[\"themeDarkAlt\"] = 6] = \"themeDarkAlt\";\n  FabricSlots[FabricSlots[\"themeDark\"] = 7] = \"themeDark\";\n  FabricSlots[FabricSlots[\"themeDarker\"] = 8] = \"themeDarker\";\n  FabricSlots[FabricSlots[\"neutralLighterAlt\"] = 9] = \"neutralLighterAlt\";\n  FabricSlots[FabricSlots[\"neutralLighter\"] = 10] = \"neutralLighter\";\n  FabricSlots[FabricSlots[\"neutralLight\"] = 11] = \"neutralLight\";\n  FabricSlots[FabricSlots[\"neutralQuaternaryAlt\"] = 12] = \"neutralQuaternaryAlt\";\n  FabricSlots[FabricSlots[\"neutralQuaternary\"] = 13] = \"neutralQuaternary\";\n  FabricSlots[FabricSlots[\"neutralTertiaryAlt\"] = 14] = \"neutralTertiaryAlt\";\n  FabricSlots[FabricSlots[\"neutralTertiary\"] = 15] = \"neutralTertiary\";\n  // deprecated: neutralSecondaryAlt, // BaseSlots.foregroundColor, Shade[Shade.Shade4]);\n  FabricSlots[FabricSlots[\"neutralSecondary\"] = 16] = \"neutralSecondary\";\n  FabricSlots[FabricSlots[\"neutralPrimaryAlt\"] = 17] = \"neutralPrimaryAlt\";\n  FabricSlots[FabricSlots[\"neutralPrimary\"] = 18] = \"neutralPrimary\";\n  FabricSlots[FabricSlots[\"neutralDark\"] = 19] = \"neutralDark\";\n  FabricSlots[FabricSlots[\"black\"] = 20] = \"black\";\n  FabricSlots[FabricSlots[\"white\"] = 21] = \"white\";\n})(FabricSlots || (FabricSlots = {}));\n/* List of all the semantic color slots for this theme.\n * This is not so much an enum as it is a list. The enum is used to insure \"type\"-safety. */\nexport var SemanticColorSlots;\n(function (SemanticColorSlots) {\n  SemanticColorSlots[SemanticColorSlots[\"bodyBackground\"] = 0] = \"bodyBackground\";\n  SemanticColorSlots[SemanticColorSlots[\"bodyText\"] = 1] = \"bodyText\";\n  SemanticColorSlots[SemanticColorSlots[\"disabledBackground\"] = 2] = \"disabledBackground\";\n  SemanticColorSlots[SemanticColorSlots[\"disabledText\"] = 3] = \"disabledText\";\n})(SemanticColorSlots || (SemanticColorSlots = {}));\nexport function themeRulesStandardCreator() {\n  var slotRules = {};\n  /*** BASE COLORS and their SHADES */\n  // iterate through each base slot and make the SlotRules for those\n  mapEnumByName(BaseSlots, function (baseSlot) {\n    // first make the SlotRule for the unshaded base Color\n    slotRules[baseSlot] = {\n      name: baseSlot,\n      isCustomized: true,\n      dependentRules: []\n    };\n    // then make a rule for each shade of this base color, but skip unshaded\n    mapEnumByName(Shade, function (shadeName, shadeValue) {\n      if (shadeName === Shade[Shade.Unshaded]) {\n        return;\n      }\n      var inherits = slotRules[baseSlot];\n      var thisSlotRule = {\n        name: baseSlot + shadeName,\n        inherits: slotRules[baseSlot],\n        asShade: shadeValue,\n        isCustomized: false,\n        isBackgroundShade: baseSlot === BaseSlots[BaseSlots.backgroundColor] ? true : false,\n        dependentRules: []\n      };\n      slotRules[baseSlot + shadeName] = thisSlotRule;\n      inherits.dependentRules.push(thisSlotRule);\n      return undefined;\n    });\n    return undefined;\n  });\n  // set default colors for the base colors\n  slotRules[BaseSlots[BaseSlots.primaryColor]].color = getColorFromString('#0078d4');\n  slotRules[BaseSlots[BaseSlots.backgroundColor]].color = getColorFromString('#ffffff');\n  slotRules[BaseSlots[BaseSlots.foregroundColor]].color = getColorFromString('#323130');\n  function _makeFabricSlotRule(slotName, inheritedBase, inheritedShade, isBackgroundShade) {\n    if (isBackgroundShade === void 0) {\n      isBackgroundShade = false;\n    }\n    var inherits = slotRules[BaseSlots[inheritedBase]];\n    var thisSlotRule = {\n      name: slotName,\n      inherits: inherits,\n      asShade: inheritedShade,\n      isCustomized: false,\n      isBackgroundShade: isBackgroundShade,\n      dependentRules: []\n    };\n    slotRules[slotName] = thisSlotRule;\n    inherits.dependentRules.push(thisSlotRule);\n  }\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themePrimary], BaseSlots.primaryColor, Shade.Unshaded);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeLighterAlt], BaseSlots.primaryColor, Shade.Shade1);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeLighter], BaseSlots.primaryColor, Shade.Shade2);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeLight], BaseSlots.primaryColor, Shade.Shade3);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeTertiary], BaseSlots.primaryColor, Shade.Shade4);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeSecondary], BaseSlots.primaryColor, Shade.Shade5);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeDarkAlt], BaseSlots.primaryColor, Shade.Shade6);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeDark], BaseSlots.primaryColor, Shade.Shade7);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeDarker], BaseSlots.primaryColor, Shade.Shade8);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralLighterAlt], BaseSlots.backgroundColor, Shade.Shade1, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralLighter], BaseSlots.backgroundColor, Shade.Shade2, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralLight], BaseSlots.backgroundColor, Shade.Shade3, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralQuaternaryAlt], BaseSlots.backgroundColor, Shade.Shade4, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralQuaternary], BaseSlots.backgroundColor, Shade.Shade5, true);\n  // bg6 or fg2\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralTertiaryAlt], BaseSlots.backgroundColor, Shade.Shade6, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralTertiary], BaseSlots.foregroundColor, Shade.Shade3);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralSecondary], BaseSlots.foregroundColor, Shade.Shade4);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralPrimaryAlt], BaseSlots.foregroundColor, Shade.Shade5);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralPrimary], BaseSlots.foregroundColor, Shade.Unshaded);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralDark], BaseSlots.foregroundColor, Shade.Shade7);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.black], BaseSlots.foregroundColor, Shade.Shade8);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.white], BaseSlots.backgroundColor, Shade.Unshaded, true);\n  slotRules[FabricSlots[FabricSlots.neutralLighterAlt]].color = getColorFromString('#faf9f8');\n  slotRules[FabricSlots[FabricSlots.neutralLighter]].color = getColorFromString('#f3f2f1');\n  slotRules[FabricSlots[FabricSlots.neutralLight]].color = getColorFromString('#edebe9');\n  slotRules[FabricSlots[FabricSlots.neutralQuaternaryAlt]].color = getColorFromString('#e1dfdd');\n  slotRules[FabricSlots[FabricSlots.neutralDark]].color = getColorFromString('#201f1e');\n  slotRules[FabricSlots[FabricSlots.neutralTertiaryAlt]].color = getColorFromString('#c8c6c4');\n  slotRules[FabricSlots[FabricSlots.black]].color = getColorFromString('#000000');\n  slotRules[FabricSlots[FabricSlots.neutralDark]].color = getColorFromString('#201f1e');\n  slotRules[FabricSlots[FabricSlots.neutralPrimaryAlt]].color = getColorFromString('#3b3a39');\n  slotRules[FabricSlots[FabricSlots.neutralSecondary]].color = getColorFromString('#605e5c');\n  slotRules[FabricSlots[FabricSlots.neutralTertiary]].color = getColorFromString('#a19f9d');\n  slotRules[FabricSlots[FabricSlots.white]].color = getColorFromString('#ffffff');\n  slotRules[FabricSlots[FabricSlots.themeDarker]].color = getColorFromString('#004578');\n  slotRules[FabricSlots[FabricSlots.themeDark]].color = getColorFromString('#005a9e');\n  slotRules[FabricSlots[FabricSlots.themeDarkAlt]].color = getColorFromString('#106ebe');\n  slotRules[FabricSlots[FabricSlots.themeSecondary]].color = getColorFromString('#2b88d8');\n  slotRules[FabricSlots[FabricSlots.themeTertiary]].color = getColorFromString('#71afe5');\n  slotRules[FabricSlots[FabricSlots.themeLight]].color = getColorFromString('#c7e0f4');\n  slotRules[FabricSlots[FabricSlots.themeLighter]].color = getColorFromString('#deecf9');\n  slotRules[FabricSlots[FabricSlots.themeLighterAlt]].color = getColorFromString('#eff6fc');\n  slotRules[FabricSlots[FabricSlots.neutralLighterAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralLighter]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralLight]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralQuaternaryAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralDark]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralTertiaryAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.black]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralDark]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralPrimaryAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralSecondary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralTertiary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.white]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeDarker]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeDark]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeDarkAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themePrimary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeSecondary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeTertiary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeLight]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeLighter]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeLighterAlt]].isCustomized = true;\n  return slotRules;\n}","map":{"version":3,"sources":["components/ThemeGenerator/ThemeRulesStandard.ts"],"names":[],"mappings":"AAAA,SAAS,KAAK,QAAQ,8BAA8B;AACpD,SAAS,kBAAkB,QAAQ,0CAA0C;AAC7E,SAAS,aAAa,QAAQ,iBAAiB;AAI/C;;;;;AAKyE;AAEzE;;AAE8C;AAC9C,OAAA,IAAY,SAIX;AAJD,CAAA,UAAY,SAAS,EAAA;EACnB,SAAA,CAAA,SAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAY;EACZ,SAAA,CAAA,SAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAe;EACf,SAAA,CAAA,SAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAe;AACjB,CAAC,EAJW,SAAS,KAAT,SAAS,GAAA,CAAA,CAAA,CAAA,CAAA;AAMrB;AACA,OAAA,IAAY,WA0BX;AA1BD,CAAA,UAAY,WAAW,EAAA;EACrB,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAY;EACZ,WAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAe;EACf,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAY;EACZ,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAU;EACV,WAAA,CAAA,WAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAa;EACb,WAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAc;EACd,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAY;EACZ,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAS;EACT,WAAA,CAAA,WAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAW;EAEX,WAAA,CAAA,WAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAiB;EACjB,WAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,gBAAc;EACd,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,EAAA,CAAA,GAAA,cAAY;EACZ,WAAA,CAAA,WAAA,CAAA,sBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,sBAAoB;EACpB,WAAA,CAAA,WAAA,CAAA,mBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,mBAAiB;EACjB,WAAA,CAAA,WAAA,CAAA,oBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,oBAAkB;EAClB,WAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,iBAAe;EACf;EACA,WAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAgB;EAChB,WAAA,CAAA,WAAA,CAAA,mBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,mBAAiB;EACjB,WAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,gBAAc;EACd,WAAA,CAAA,WAAA,CAAA,aAAA,CAAA,GAAA,EAAA,CAAA,GAAA,aAAW;EAEX,WAAA,CAAA,WAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAK;EACL,WAAA,CAAA,WAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAK;AACP,CAAC,EA1BW,WAAW,KAAX,WAAW,GAAA,CAAA,CAAA,CAAA,CAAA;AA4BvB;AAC4F;AAC5F,OAAA,IAAY,kBAKX;AALD,CAAA,UAAY,kBAAkB,EAAA;EAC5B,kBAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAc;EACd,kBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAQ;EACR,kBAAA,CAAA,kBAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,oBAAkB;EAClB,kBAAA,CAAA,kBAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAY;AACd,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,GAAA,CAAA,CAAA,CAAA,CAAA;AAO9B,OAAM,SAAU,yBAAyB,CAAA,EAAA;EACvC,IAAM,SAAS,GAAgB,CAAA,CAAE;EAEjC;EACA;EACA,aAAa,CAAC,SAAS,EAAE,UAAC,QAAgB,EAAA;IACxC;IACA,SAAS,CAAC,QAAQ,CAAC,GAAG;MACpB,IAAI,EAAE,QAAQ;MACd,YAAY,EAAE,IAAI;MAClB,cAAc,EAAE;KACjB;IAED;IACA,aAAa,CAAC,KAAK,EAAE,UAAC,SAAiB,EAAE,UAAiB,EAAA;MACxD,IAAI,SAAS,KAAK,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;QACvC;MACD;MACD,IAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;MACpC,IAAM,YAAY,GAAG;QACnB,IAAI,EAAE,QAAQ,GAAG,SAAS;QAC1B,QAAQ,EAAE,SAAS,CAAC,QAAQ,CAAC;QAC7B,OAAO,EAAE,UAAU;QACnB,YAAY,EAAE,KAAK;QACnB,iBAAiB,EAAE,QAAQ,KAAK,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,IAAI,GAAG,KAAK;QACnF,cAAc,EAAE;OACjB;MACD,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,YAAY;MAC9C,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC;MAE1C,OAAO,SAAS;IAClB,CAAC,CAAC;IAEF,OAAO,SAAS;EAClB,CAAC,CAAC;EAEF;EACA,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EAClF,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACrF,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EAErF,SAAS,mBAAmB,CAC1B,QAAgB,EAChB,aAAwB,EACxB,cAAqB,EACrB,iBAAyB,EAAA;IAAzB,IAAA,iBAAA,KAAA,KAAA,CAAA,EAAA;MAAA,iBAAA,GAAA,KAAyB;IAAA;IAEzB,IAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;IACpD,IAAM,YAAY,GAAG;MACnB,IAAI,EAAE,QAAQ;MACd,QAAQ,EAAE,QAAQ;MAClB,OAAO,EAAE,cAAc;MACvB,YAAY,EAAE,KAAK;MACnB,iBAAiB,EAAE,iBAAiB;MACpC,cAAc,EAAE;KACjB;IACD,SAAS,CAAC,QAAQ,CAAC,GAAG,YAAY;IAClC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC;EAC5C;EACA,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,QAAQ,CAAC;EAClG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC;EACnG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC;EAChG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC;EAC9F,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC;EACjG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC;EAClG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC;EAChG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC;EAC7F,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC;EAE/F,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;EAC9G,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;EAC3G,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;EACzG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,oBAAoB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;EACjH,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;EAC9G;EACA,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;EAC/G,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC;EACtG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC;EACvG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC;EACxG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,QAAQ,CAAC;EACvG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC;EAElG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC;EAC5F,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC;EAEpG,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EAC3F,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACxF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACtF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EAC9F,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACrF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EAE5F,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EAC/E,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACrF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EAC3F,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EAC1F,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACzF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EAE/E,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACrF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACnF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACtF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACxF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACvF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACpF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EACtF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC;EAEzF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACzE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACtE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACpE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EAC5E,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACnE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EAE1E,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EAC7D,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACnE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACzE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACxE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACvE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EAE7D,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACnE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACjE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACpE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACpE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACtE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACrE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EAClE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EACpE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI;EAEvE,OAAO,SAAS;AAClB","sourcesContent":["import { Shade } from '../../utilities/color/shades';\nimport { getColorFromString } from '../../utilities/color/getColorFromString';\nimport { mapEnumByName } from '../../Utilities';\n\nimport { IThemeRules } from './IThemeRules';\n\n/* This is the set of rules for our default theme.\n   We start with three base slots, defining the background, foreground (text), and\n   primary color (sometimes called theme color). Each Fabric slot is generated from\n   shades (or tints) of one of those three, creating the Fabric palette.\n   Then, we have semantic slots, the new thing intended to eventually replace the\n   Fabric palette. The semantic slots inherit from the Fabric palette. */\n\n/* The most minimal set of slots we start with. All other ones can be generated based on rules.\n * This is not so much an enum as it is a list. The enum is used to insure \"type\"-safety.\n * For now, we are only dealing with color. */\nexport enum BaseSlots {\n  primaryColor,\n  backgroundColor,\n  foregroundColor,\n}\n\n/* The original Fabric palette, only for back-compat. */\nexport enum FabricSlots {\n  themePrimary, // BaseSlots.primaryColor, Shade[Shade.Unshaded]);\n  themeLighterAlt, // BaseSlots.primaryColor, Shade[Shade.Shade1]);\n  themeLighter, // BaseSlots.primaryColor, Shade[Shade.Shade2]);\n  themeLight, // BaseSlots.primaryColor, Shade[Shade.Shade3]);\n  themeTertiary, // BaseSlots.primaryColor, Shade[Shade.Shade4]);\n  themeSecondary, // BaseSlots.primaryColor, Shade[Shade.Shade5]);\n  themeDarkAlt, // BaseSlots.primaryColor, Shade[Shade.Shade6]);\n  themeDark, // BaseSlots.primaryColor, Shade[Shade.Shade7]);\n  themeDarker, // BaseSlots.primaryColor, Shade[Shade.Shade8]);\n\n  neutralLighterAlt, // BaseSlots.backgroundColor, Shade[Shade.Shade1]);\n  neutralLighter, // BaseSlots.backgroundColor, Shade[Shade.Shade2]);\n  neutralLight, // BaseSlots.backgroundColor, Shade[Shade.Shade3]);\n  neutralQuaternaryAlt, // BaseSlots.backgroundColor, Shade[Shade.Shade4]);\n  neutralQuaternary, // BaseSlots.backgroundColor, Shade[Shade.Shade5]);\n  neutralTertiaryAlt, // BaseSlots.backgroundColor, Shade[Shade.Shade6]); // bg6 or fg2\n  neutralTertiary, // BaseSlots.foregroundColor, Shade[Shade.Shade3]);\n  // deprecated: neutralSecondaryAlt, // BaseSlots.foregroundColor, Shade[Shade.Shade4]);\n  neutralSecondary, // BaseSlots.foregroundColor, Shade[Shade.Shade5]);\n  neutralPrimaryAlt, // BaseSlots.foregroundColor, Shade[Shade.Shade6]);\n  neutralPrimary, // BaseSlots.foregroundColor, Shade[Shade.Unshaded]);\n  neutralDark, // BaseSlots.foregroundColor, Shade[Shade.Shade7]);\n\n  black, // BaseSlots.foregroundColor, Shade[Shade.Shade8]);\n  white, // BaseSlots.backgroundColor, Shade[Shade.Unshaded]);\n}\n\n/* List of all the semantic color slots for this theme.\n * This is not so much an enum as it is a list. The enum is used to insure \"type\"-safety. */\nexport enum SemanticColorSlots {\n  bodyBackground,\n  bodyText,\n  disabledBackground,\n  disabledText,\n}\n\nexport function themeRulesStandardCreator(): IThemeRules {\n  const slotRules: IThemeRules = {};\n\n  /*** BASE COLORS and their SHADES */\n  // iterate through each base slot and make the SlotRules for those\n  mapEnumByName(BaseSlots, (baseSlot: string) => {\n    // first make the SlotRule for the unshaded base Color\n    slotRules[baseSlot] = {\n      name: baseSlot,\n      isCustomized: true,\n      dependentRules: [],\n    };\n\n    // then make a rule for each shade of this base color, but skip unshaded\n    mapEnumByName(Shade, (shadeName: string, shadeValue: Shade) => {\n      if (shadeName === Shade[Shade.Unshaded]) {\n        return;\n      }\n      const inherits = slotRules[baseSlot];\n      const thisSlotRule = {\n        name: baseSlot + shadeName,\n        inherits: slotRules[baseSlot],\n        asShade: shadeValue,\n        isCustomized: false,\n        isBackgroundShade: baseSlot === BaseSlots[BaseSlots.backgroundColor] ? true : false,\n        dependentRules: [],\n      };\n      slotRules[baseSlot + shadeName] = thisSlotRule;\n      inherits.dependentRules.push(thisSlotRule);\n\n      return undefined;\n    });\n\n    return undefined;\n  });\n\n  // set default colors for the base colors\n  slotRules[BaseSlots[BaseSlots.primaryColor]].color = getColorFromString('#0078d4');\n  slotRules[BaseSlots[BaseSlots.backgroundColor]].color = getColorFromString('#ffffff');\n  slotRules[BaseSlots[BaseSlots.foregroundColor]].color = getColorFromString('#323130');\n\n  function _makeFabricSlotRule(\n    slotName: string,\n    inheritedBase: BaseSlots,\n    inheritedShade: Shade,\n    isBackgroundShade = false,\n  ): void {\n    const inherits = slotRules[BaseSlots[inheritedBase]];\n    const thisSlotRule = {\n      name: slotName,\n      inherits: inherits,\n      asShade: inheritedShade,\n      isCustomized: false,\n      isBackgroundShade: isBackgroundShade,\n      dependentRules: [],\n    };\n    slotRules[slotName] = thisSlotRule;\n    inherits.dependentRules.push(thisSlotRule);\n  }\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themePrimary], BaseSlots.primaryColor, Shade.Unshaded);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeLighterAlt], BaseSlots.primaryColor, Shade.Shade1);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeLighter], BaseSlots.primaryColor, Shade.Shade2);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeLight], BaseSlots.primaryColor, Shade.Shade3);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeTertiary], BaseSlots.primaryColor, Shade.Shade4);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeSecondary], BaseSlots.primaryColor, Shade.Shade5);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeDarkAlt], BaseSlots.primaryColor, Shade.Shade6);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeDark], BaseSlots.primaryColor, Shade.Shade7);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeDarker], BaseSlots.primaryColor, Shade.Shade8);\n\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralLighterAlt], BaseSlots.backgroundColor, Shade.Shade1, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralLighter], BaseSlots.backgroundColor, Shade.Shade2, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralLight], BaseSlots.backgroundColor, Shade.Shade3, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralQuaternaryAlt], BaseSlots.backgroundColor, Shade.Shade4, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralQuaternary], BaseSlots.backgroundColor, Shade.Shade5, true);\n  // bg6 or fg2\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralTertiaryAlt], BaseSlots.backgroundColor, Shade.Shade6, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralTertiary], BaseSlots.foregroundColor, Shade.Shade3);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralSecondary], BaseSlots.foregroundColor, Shade.Shade4);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralPrimaryAlt], BaseSlots.foregroundColor, Shade.Shade5);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralPrimary], BaseSlots.foregroundColor, Shade.Unshaded);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralDark], BaseSlots.foregroundColor, Shade.Shade7);\n\n  _makeFabricSlotRule(FabricSlots[FabricSlots.black], BaseSlots.foregroundColor, Shade.Shade8);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.white], BaseSlots.backgroundColor, Shade.Unshaded, true);\n\n  slotRules[FabricSlots[FabricSlots.neutralLighterAlt]].color = getColorFromString('#faf9f8');\n  slotRules[FabricSlots[FabricSlots.neutralLighter]].color = getColorFromString('#f3f2f1');\n  slotRules[FabricSlots[FabricSlots.neutralLight]].color = getColorFromString('#edebe9');\n  slotRules[FabricSlots[FabricSlots.neutralQuaternaryAlt]].color = getColorFromString('#e1dfdd');\n  slotRules[FabricSlots[FabricSlots.neutralDark]].color = getColorFromString('#201f1e');\n  slotRules[FabricSlots[FabricSlots.neutralTertiaryAlt]].color = getColorFromString('#c8c6c4');\n\n  slotRules[FabricSlots[FabricSlots.black]].color = getColorFromString('#000000');\n  slotRules[FabricSlots[FabricSlots.neutralDark]].color = getColorFromString('#201f1e');\n  slotRules[FabricSlots[FabricSlots.neutralPrimaryAlt]].color = getColorFromString('#3b3a39');\n  slotRules[FabricSlots[FabricSlots.neutralSecondary]].color = getColorFromString('#605e5c');\n  slotRules[FabricSlots[FabricSlots.neutralTertiary]].color = getColorFromString('#a19f9d');\n  slotRules[FabricSlots[FabricSlots.white]].color = getColorFromString('#ffffff');\n\n  slotRules[FabricSlots[FabricSlots.themeDarker]].color = getColorFromString('#004578');\n  slotRules[FabricSlots[FabricSlots.themeDark]].color = getColorFromString('#005a9e');\n  slotRules[FabricSlots[FabricSlots.themeDarkAlt]].color = getColorFromString('#106ebe');\n  slotRules[FabricSlots[FabricSlots.themeSecondary]].color = getColorFromString('#2b88d8');\n  slotRules[FabricSlots[FabricSlots.themeTertiary]].color = getColorFromString('#71afe5');\n  slotRules[FabricSlots[FabricSlots.themeLight]].color = getColorFromString('#c7e0f4');\n  slotRules[FabricSlots[FabricSlots.themeLighter]].color = getColorFromString('#deecf9');\n  slotRules[FabricSlots[FabricSlots.themeLighterAlt]].color = getColorFromString('#eff6fc');\n\n  slotRules[FabricSlots[FabricSlots.neutralLighterAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralLighter]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralLight]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralQuaternaryAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralDark]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralTertiaryAlt]].isCustomized = true;\n\n  slotRules[FabricSlots[FabricSlots.black]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralDark]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralPrimaryAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralSecondary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.neutralTertiary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.white]].isCustomized = true;\n\n  slotRules[FabricSlots[FabricSlots.themeDarker]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeDark]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeDarkAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themePrimary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeSecondary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeTertiary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeLight]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeLighter]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeLighterAlt]].isCustomized = true;\n\n  return slotRules;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}