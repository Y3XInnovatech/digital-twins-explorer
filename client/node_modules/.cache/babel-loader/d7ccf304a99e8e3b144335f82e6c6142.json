{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, KeyCodes, getNativeProps, divProperties, warnDeprecations, initializeComponentRef } from '../../Utilities';\nimport { DocumentCardType } from './DocumentCard.types';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'DocumentCard';\n/**\n * {@docCategory DocumentCard}\n */\nvar DocumentCardBase = /** @class */function (_super) {\n  __extends(DocumentCardBase, _super);\n  function DocumentCardBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._rootElement = React.createRef();\n    _this._onClick = function (ev) {\n      _this._onAction(ev);\n    };\n    _this._onKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n        _this._onAction(ev);\n      }\n    };\n    _this._onAction = function (ev) {\n      var _a = _this.props,\n        onClick = _a.onClick,\n        onClickHref = _a.onClickHref,\n        onClickTarget = _a.onClickTarget;\n      if (onClick) {\n        onClick(ev);\n      } else if (!onClick && onClickHref) {\n        // If no onClick Function was provided and we do have an onClickHref, redirect to the onClickHref\n        if (onClickTarget) {\n          window.open(onClickHref, onClickTarget, 'noreferrer noopener nofollow');\n        } else {\n          window.location.href = onClickHref;\n        }\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    };\n    initializeComponentRef(_this);\n    warnDeprecations(COMPONENT_NAME, props, {\n      accentColor: undefined\n    });\n    return _this;\n  }\n  DocumentCardBase.prototype.render = function () {\n    // eslint-disable-next-line deprecation/deprecation\n    var _a = this.props,\n      onClick = _a.onClick,\n      onClickHref = _a.onClickHref,\n      children = _a.children,\n      type = _a.type,\n      accentColor = _a.accentColor,\n      styles = _a.styles,\n      theme = _a.theme,\n      className = _a.className;\n    var nativeProps = getNativeProps(this.props, divProperties, ['className', 'onClick', 'type', 'role']);\n    var actionable = onClick || onClickHref ? true : false;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      actionable: actionable,\n      compact: type === DocumentCardType.compact ? true : false\n    });\n    // Override the border color if an accent color was provided (compact card only)\n    var style;\n    if (type === DocumentCardType.compact && accentColor) {\n      style = {\n        borderBottomColor: accentColor\n      };\n    }\n    // if this element is actionable it should have an aria role\n    var role = this.props.role || (actionable ? onClick ? 'button' : 'link' : undefined);\n    var tabIndex = actionable ? 0 : undefined;\n    return React.createElement(\"div\", __assign({\n      ref: this._rootElement,\n      tabIndex: tabIndex,\n      \"data-is-focusable\": actionable,\n      role: role,\n      className: this._classNames.root,\n      onKeyDown: actionable ? this._onKeyDown : undefined,\n      onClick: actionable ? this._onClick : undefined,\n      style: style\n    }, nativeProps), children);\n  };\n  DocumentCardBase.prototype.focus = function () {\n    if (this._rootElement.current) {\n      this._rootElement.current.focus();\n    }\n  };\n  DocumentCardBase.defaultProps = {\n    type: DocumentCardType.normal\n  };\n  return DocumentCardBase;\n}(React.Component);\nexport { DocumentCardBase };","map":{"version":3,"sources":["components/DocumentCard/DocumentCard.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IProcessedStyleSet } from '../../Styling';\nimport {\n  classNamesFunction,\n  KeyCodes,\n  getNativeProps,\n  divProperties,\n  warnDeprecations,\n  initializeComponentRef,\n} from '../../Utilities';\nimport {\n  DocumentCardType,\n  IDocumentCard,\n  IDocumentCardProps,\n  IDocumentCardStyleProps,\n  IDocumentCardStyles,\n} from './DocumentCard.types';\n\nconst getClassNames = classNamesFunction<IDocumentCardStyleProps, IDocumentCardStyles>();\n\nconst COMPONENT_NAME = 'DocumentCard';\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardBase extends React.Component<IDocumentCardProps, any> implements IDocumentCard {\n  public static defaultProps: IDocumentCardProps = {\n    type: DocumentCardType.normal,\n  };\n\n  private _rootElement = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IDocumentCardStyles>;\n\n  constructor(props: IDocumentCardProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    warnDeprecations(COMPONENT_NAME, props, {\n      accentColor: undefined,\n    });\n  }\n\n  public render(): JSX.Element {\n    // eslint-disable-next-line deprecation/deprecation\n    const { onClick, onClickHref, children, type, accentColor, styles, theme, className } = this.props;\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, [\n      'className',\n      'onClick',\n      'type',\n      'role',\n    ]);\n    const actionable = onClick || onClickHref ? true : false;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      actionable,\n      compact: type === DocumentCardType.compact ? true : false,\n    });\n\n    // Override the border color if an accent color was provided (compact card only)\n    let style;\n    if (type === DocumentCardType.compact && accentColor) {\n      style = {\n        borderBottomColor: accentColor,\n      };\n    }\n\n    // if this element is actionable it should have an aria role\n    const role = this.props.role || (actionable ? (onClick ? 'button' : 'link') : undefined);\n    const tabIndex = actionable ? 0 : undefined;\n\n    return (\n      <div\n        ref={this._rootElement}\n        tabIndex={tabIndex}\n        data-is-focusable={actionable}\n        role={role}\n        className={this._classNames.root}\n        onKeyDown={actionable ? this._onKeyDown : undefined}\n        onClick={actionable ? this._onClick : undefined}\n        style={style}\n        {...nativeProps}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  public focus(): void {\n    if (this._rootElement.current) {\n      this._rootElement.current.focus();\n    }\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    this._onAction(ev);\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      this._onAction(ev);\n    }\n  };\n\n  private _onAction = (ev: React.SyntheticEvent<HTMLElement>): void => {\n    const { onClick, onClickHref, onClickTarget } = this.props;\n\n    if (onClick) {\n      onClick(ev);\n    } else if (!onClick && onClickHref) {\n      // If no onClick Function was provided and we do have an onClickHref, redirect to the onClickHref\n      if (onClickTarget) {\n        window.open(onClickHref, onClickTarget, 'noreferrer noopener nofollow');\n      } else {\n        window.location.href = onClickHref;\n      }\n\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}