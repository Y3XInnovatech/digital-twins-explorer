{"ast":null,"code":"export function getAllSelectedOptions(options, selectedIndices) {\n  var selectedOptions = [];\n  for (var _i = 0, selectedIndices_1 = selectedIndices; _i < selectedIndices_1.length; _i++) {\n    var index = selectedIndices_1[_i];\n    var option = options[index];\n    if (option) {\n      selectedOptions.push(option);\n    }\n  }\n  return selectedOptions;\n}","map":{"version":3,"sources":["utilities/selectableOption/SelectableOption.ts"],"names":[],"mappings":"AAEA,OAAM,SAAU,qBAAqB,CAAC,OAA4B,EAAE,eAAyB,EAAA;EAC3F,IAAM,eAAe,GAAwB,EAAE;EAC/C,KAAoB,IAAA,EAAA,GAAA,CAAe,EAAf,iBAAA,GAAA,eAAe,EAAf,EAAA,GAAA,iBAAA,CAAA,MAAe,EAAf,EAAA,EAAe,EAAE;IAAhC,IAAM,KAAK,GAAA,iBAAA,CAAA,EAAA,CAAA;IACd,IAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;IAE7B,IAAI,MAAM,EAAE;MACV,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7B;EACF;EAED,OAAO,eAAe;AACxB","sourcesContent":["import { ISelectableOption } from '../../utilities/selectableOption/SelectableOption.types';\n\nexport function getAllSelectedOptions(options: ISelectableOption[], selectedIndices: number[]): ISelectableOption[] {\n  const selectedOptions: ISelectableOption[] = [];\n  for (const index of selectedIndices) {\n    const option = options[index];\n\n    if (option) {\n      selectedOptions.push(option);\n    }\n  }\n\n  return selectedOptions;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}