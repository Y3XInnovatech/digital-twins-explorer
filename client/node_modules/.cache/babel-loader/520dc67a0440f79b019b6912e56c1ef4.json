{"ast":null,"code":"import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory Shimmer}\n */\nexport var ShimmerGapBase = function (props) {\n  // eslint-disable-next-line deprecation/deprecation\n  var height = props.height,\n    styles = props.styles,\n    _a = props.width,\n    width = _a === void 0 ? '10px' : _a,\n    borderStyle = props.borderStyle,\n    theme = props.theme;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    height: height,\n    borderStyle: borderStyle\n  });\n  return React.createElement(\"div\", {\n    style: {\n      width: width,\n      minWidth: typeof width === 'number' ? width + \"px\" : 'auto'\n    },\n    className: classNames.root\n  });\n};","map":{"version":3,"sources":["components/Shimmer/ShimmerGap/ShimmerGap.base.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,kBAAkB,QAAQ,oBAAoB;AAGvD,IAAM,aAAa,GAAG,kBAAkB,CAAA,CAA4C;AAEpF;;AAEG;AACH,OAAO,IAAM,cAAc,GAA8C,SAAA,CAAA,KAAK,EAAA;EAC5E;EACQ,IAAA,MAAA,GAAA,KAAA,CAAA,MAAM;IAAE,MAAA,GAAA,KAAA,CAAA,MAAM;IAAE,EAAA,GAAA,KAAA,CAAA,KAAc;IAAd,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,MAAA,GAAA,EAAc;IAAE,WAAA,GAAA,KAAA,CAAA,WAAW;IAAE,KAAA,GAAA,KAAA,CAAA,KAAK;EAE1D,IAAM,UAAU,GAAG,aAAa,CAAC,MAAO,EAAE;IACxC,KAAK,EAAE,KAAM;IACb,MAAM,EAAA,MAAA;IACN,WAAW,EAAA;GACZ,CAAC;EAEF,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACE,KAAK,EAAE;MAAE,KAAK,EAAE,KAAK;MAAE,QAAQ,EAAE,OAAO,KAAK,KAAK,QAAQ,GAAM,KAAK,GAAA,IAAI,GAAG;IAAM,CAAE;IACpF,SAAS,EAAE,UAAU,CAAC;EAAI,CAAA,CAC1B;AAEN,CAAC","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { IShimmerGapProps, IShimmerGapStyleProps, IShimmerGapStyles } from './ShimmerGap.types';\n\nconst getClassNames = classNamesFunction<IShimmerGapStyleProps, IShimmerGapStyles>();\n\n/**\n * {@docCategory Shimmer}\n */\nexport const ShimmerGapBase: React.FunctionComponent<IShimmerGapProps> = props => {\n  // eslint-disable-next-line deprecation/deprecation\n  const { height, styles, width = '10px', borderStyle, theme } = props;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    height,\n    borderStyle,\n  });\n\n  return (\n    <div\n      style={{ width: width, minWidth: typeof width === 'number' ? `${width}px` : 'auto' }}\n      className={classNames.root}\n    />\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}