{"ast":null,"code":"var _jsxFileName = \"/home/saharsh/Music/digital-twins-explorer/client/src/components/ImportComponent/ImportComponent.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React, { Component } from \"react\";\nimport { GraphViewerCytoscapeComponent } from \"../GraphViewerComponent/GraphViewerCytoscapeComponent/GraphViewerCytoscapeComponent\";\nimport ImportCommandBar from \"./ImportCommandBar/ImportCommandBar\";\nimport LoaderComponent from \"../LoaderComponent/LoaderComponent\";\nimport ImportStatsComponent from \"./ImportStatsComponent/ImportStatsComponent\";\nimport { importService } from \"../../services/ImportService\";\nimport { eventService } from \"../../services/EventService\";\nimport \"./ImportComponent.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ImportComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.focus = async () => {\n      if (this.cyRef.current) {\n        await this.cyRef.current.doLayout();\n      }\n    };\n    this.onSaveClicked = async () => {\n      this.setState({\n        isLoading: true\n      });\n      try {\n        const dataImported = await importService.save(this.data);\n        this.setState({\n          isComplete: true,\n          showImportModal: true,\n          dataImported\n        });\n      } catch (exc) {\n        exc.customMessage = \"Error in importing graph\";\n        eventService.publishError(exc);\n      }\n      this.setState({\n        isLoading: false\n      });\n    };\n    this.closeModal = () => {\n      this.setState({\n        showImportModal: false\n      }, () => {\n        eventService.publishModelsUpdate();\n        eventService.publishCloseComponent(\"importComponent\");\n      });\n    };\n    this.state = {\n      error: false,\n      isLoading: true,\n      isComplete: false,\n      showImportModal: false,\n      dataImported: false\n    };\n    this.cyRef = /*#__PURE__*/React.createRef();\n    this.data = null;\n  }\n  async componentDidMount() {\n    const {\n      file\n    } = this.props;\n    this.setState({\n      isLoading: true\n    });\n    try {\n      this.data = await importService.tryLoad(file);\n    } catch (exc) {\n      exc.customMessage = \"Error in creating graph from file\";\n      eventService.publishError(exc);\n    }\n    if (this.data) {\n      if (this.data.digitalTwinsGraph) {\n        if (this.data.digitalTwinsGraph.digitalTwins) {\n          this.cyRef.current.addTwins(this.data.digitalTwinsGraph.digitalTwins);\n        }\n        if (this.data.digitalTwinsGraph.relationships) {\n          this.cyRef.current.addRelationships(this.data.digitalTwinsGraph.relationships);\n        }\n      }\n      await this.cyRef.current.doLayout();\n    }\n    this.setState({\n      error: !this.data,\n      isLoading: false,\n      showImportModal: false\n    });\n  }\n  render() {\n    const {\n      error,\n      isLoading,\n      isComplete,\n      showImportModal,\n      dataImported\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"iv-grid\",\n      children: [!error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iv-toolbar\",\n        children: /*#__PURE__*/_jsxDEV(ImportCommandBar, {\n          className: \"iv-commandbar\",\n          isSaveEnabled: !isComplete,\n          onSaveClicked: this.onSaveClicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iv-control\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Unrecognized file format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }, this), !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iv-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Graph Preview Only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Full graph validation is applied on import. Click save to import.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }, this), !error && /*#__PURE__*/_jsxDEV(GraphViewerCytoscapeComponent, {\n        ref: this.cyRef,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoaderComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(ImportStatsComponent, {\n        data: this.data,\n        isVisible: showImportModal,\n        dataImported: dataImported,\n        onClose: this.closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","GraphViewerCytoscapeComponent","ImportCommandBar","LoaderComponent","ImportStatsComponent","importService","eventService","jsxDEV","_jsxDEV","ImportComponent","constructor","props","focus","cyRef","current","doLayout","onSaveClicked","setState","isLoading","dataImported","save","data","isComplete","showImportModal","exc","customMessage","publishError","closeModal","publishModelsUpdate","publishCloseComponent","state","error","createRef","componentDidMount","file","tryLoad","digitalTwinsGraph","digitalTwins","addTwins","relationships","addRelationships","render","className","children","isSaveEnabled","fileName","_jsxFileName","lineNumber","columnNumber","ref","readOnly","isVisible","onClose"],"sources":["/home/saharsh/Music/digital-twins-explorer/client/src/components/ImportComponent/ImportComponent.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React, { Component } from \"react\";\n\nimport { GraphViewerCytoscapeComponent } from \"../GraphViewerComponent/GraphViewerCytoscapeComponent/GraphViewerCytoscapeComponent\";\nimport ImportCommandBar from \"./ImportCommandBar/ImportCommandBar\";\nimport LoaderComponent from \"../LoaderComponent/LoaderComponent\";\nimport ImportStatsComponent from \"./ImportStatsComponent/ImportStatsComponent\";\nimport { importService } from \"../../services/ImportService\";\nimport { eventService } from \"../../services/EventService\";\n\nimport \"./ImportComponent.scss\";\n\nexport class ImportComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n      isLoading: true,\n      isComplete: false,\n      showImportModal: false,\n      dataImported: false\n    };\n    this.cyRef = React.createRef();\n    this.data = null;\n  }\n\n  async componentDidMount() {\n    const { file } = this.props;\n\n    this.setState({ isLoading: true });\n    try {\n      this.data = await importService.tryLoad(file);\n    } catch (exc) {\n      exc.customMessage = \"Error in creating graph from file\";\n      eventService.publishError(exc);\n    }\n\n    if (this.data) {\n      if (this.data.digitalTwinsGraph) {\n        if (this.data.digitalTwinsGraph.digitalTwins) {\n          this.cyRef.current.addTwins(this.data.digitalTwinsGraph.digitalTwins);\n        }\n        if (this.data.digitalTwinsGraph.relationships) {\n          this.cyRef.current.addRelationships(this.data.digitalTwinsGraph.relationships);\n        }\n      }\n      await this.cyRef.current.doLayout();\n    }\n\n    this.setState({ error: !this.data, isLoading: false, showImportModal: false });\n  }\n\n  focus = async () => {\n    if (this.cyRef.current) {\n      await this.cyRef.current.doLayout();\n    }\n  }\n\n  onSaveClicked = async () => {\n    this.setState({ isLoading: true });\n\n    try {\n      const dataImported = await importService.save(this.data);\n      this.setState({ isComplete: true, showImportModal: true, dataImported });\n    } catch (exc) {\n      exc.customMessage = \"Error in importing graph\";\n      eventService.publishError(exc);\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  closeModal = () => {\n    this.setState({ showImportModal: false }, () => {\n      eventService.publishModelsUpdate();\n      eventService.publishCloseComponent(\"importComponent\");\n    });\n  }\n\n  render() {\n    const { error, isLoading, isComplete, showImportModal, dataImported } = this.state;\n    return (\n      <div className=\"iv-grid\">\n        {!error && <div className=\"iv-toolbar\">\n          <ImportCommandBar className=\"iv-commandbar\" isSaveEnabled={!isComplete} onSaveClicked={this.onSaveClicked} />\n        </div>}\n        {error && <div className=\"iv-control\">\n          <p>Unrecognized file format</p>\n        </div>}\n        {!error && <div className=\"iv-message\">\n          <h4>Graph Preview Only</h4>\n          <p>Full graph validation is applied on import. Click save to import.</p>\n        </div>}\n        {!error && <GraphViewerCytoscapeComponent ref={this.cyRef} readOnly />}\n        {isLoading && <LoaderComponent />}\n        <ImportStatsComponent data={this.data} isVisible={showImportModal} dataImported={dataImported} onClose={this.closeModal} />\n      </div>\n    );\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}