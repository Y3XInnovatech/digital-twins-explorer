{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { storageService } from \"./StorageService\";\nimport { REL_TYPE_OUTGOING } from \"./Constants\";\nimport { configService } from \"./ConfigService\";\nimport { colors } from \"../components/GraphViewerComponent/GraphViewerCytoscapeComponent/config\";\nconst StorageKeyName = \"settings\";\nconst EnvStorageKeyName = \"environments\";\nconst DefaultDisplayName = \"$dtId\";\nclass SettingsService {\n  constructor() {\n    this.getModelImage = modelId => storageService.getLocalStoragePrimitive(modelId);\n    this.setModelImage = (modelId, dataString) => storageService.setLocalStorageObject(modelId, dataString);\n    this.deleteModelImage = modelId => storageService.removeLocalStorageObject(modelId);\n    this.settings = storageService.getLocalStorageObject(StorageKeyName) || {\n      caching: false,\n      eagerLoading: false,\n      queries: [],\n      relTypeLoading: REL_TYPE_OUTGOING,\n      relExpansionLevel: 1,\n      contrast: \"normal\",\n      possibleDisplayNameProperties: [],\n      selectedDisplayNameProperty: {}\n    };\n    this.modelColors = [];\n  }\n  get selectedDisplayNameProperty() {\n    return (async (_this$settings, _this$settings$select) => {\n      const {\n        appAdtUrl\n      } = await configService.getConfig();\n      const selectedDisplayNameProperty = (_this$settings = this.settings) === null || _this$settings === void 0 ? void 0 : (_this$settings$select = _this$settings.selectedDisplayNameProperty) === null || _this$settings$select === void 0 ? void 0 : _this$settings$select[appAdtUrl];\n      return selectedDisplayNameProperty !== null && selectedDisplayNameProperty !== void 0 ? selectedDisplayNameProperty : DefaultDisplayName;\n    })();\n  }\n  set selectedDisplayNameProperty(selectedDisplayNameProperty) {\n    (async () => {\n      const {\n        appAdtUrl\n      } = await configService.getConfig();\n      if (this.settings.selectedDisplayNameProperty) {\n        this.settings.selectedDisplayNameProperty[appAdtUrl] = selectedDisplayNameProperty;\n      } else {\n        this.settings.selectedDisplayNameProperty = {\n          [appAdtUrl]: selectedDisplayNameProperty\n        };\n      }\n      this.save();\n    })();\n  }\n  get possibleDisplayNameProperties() {\n    return this.settings.possibleDisplayNameProperties || [];\n  }\n  set possibleDisplayNameProperties(possibleDisplayNameProperties) {\n    this.settings.possibleDisplayNameProperties = possibleDisplayNameProperties;\n    this.save();\n  }\n  get caching() {\n    return this.settings.caching || false;\n  }\n  set caching(caching) {\n    this.settings.caching = caching;\n    this.save();\n  }\n  get eagerLoading() {\n    return this.settings.eagerLoading || false;\n  }\n  set eagerLoading(eagerLoading) {\n    this.settings.eagerLoading = eagerLoading;\n    this.save();\n  }\n  get queries() {\n    return this.settings.queries || [];\n  }\n  set queries(queries) {\n    this.settings.queries = queries;\n    this.save();\n  }\n  get contrast() {\n    return this.settings.contrast || \"normal\";\n  }\n  set contrast(contrast) {\n    this.settings.contrast = contrast;\n    this.save();\n  }\n  get relTypeLoading() {\n    return this.settings.relTypeLoading || REL_TYPE_OUTGOING;\n  }\n  set relTypeLoading(relTypeLoading) {\n    this.settings.relTypeLoading = relTypeLoading;\n    this.save();\n  }\n  get relExpansionLevel() {\n    return this.settings.relExpansionLevel || 1;\n  }\n  set relExpansionLevel(relExpansionLevel) {\n    this.settings.relExpansionLevel = relExpansionLevel;\n    this.save();\n  }\n  setModelColors(modelIds) {\n    this.modelColors = [];\n    for (let i = 0; i < modelIds.length; i++) {\n      const im = i % colors.length;\n      this.modelColors[modelIds[i]] = `#${colors[colors.length - 1 - im]}`;\n    }\n  }\n  getModelColors() {\n    return this.modelColors;\n  }\n  get environments() {\n    return storageService.getLocalStorageObject(EnvStorageKeyName);\n  }\n  set environments(envs) {\n    storageService.setLocalStorageObject(EnvStorageKeyName, envs);\n  }\n  save() {\n    storageService.setLocalStorageObject(StorageKeyName, this.settings);\n  }\n}\nexport const settingsService = new SettingsService();","map":{"version":3,"names":["storageService","REL_TYPE_OUTGOING","configService","colors","StorageKeyName","EnvStorageKeyName","DefaultDisplayName","SettingsService","constructor","getModelImage","modelId","getLocalStoragePrimitive","setModelImage","dataString","setLocalStorageObject","deleteModelImage","removeLocalStorageObject","settings","getLocalStorageObject","caching","eagerLoading","queries","relTypeLoading","relExpansionLevel","contrast","possibleDisplayNameProperties","selectedDisplayNameProperty","modelColors","_this$settings","_this$settings$select","appAdtUrl","getConfig","save","setModelColors","modelIds","i","length","im","getModelColors","environments","envs","settingsService"],"sources":["/home/saharsh/Music/digital-twins-explorer/client/src/services/SettingsService.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { storageService } from \"./StorageService\";\nimport { REL_TYPE_OUTGOING } from \"./Constants\";\nimport { configService } from \"./ConfigService\";\nimport { colors } from \"../components/GraphViewerComponent/GraphViewerCytoscapeComponent/config\";\n\nconst StorageKeyName = \"settings\";\nconst EnvStorageKeyName = \"environments\";\nconst DefaultDisplayName = \"$dtId\";\n\nclass SettingsService {\n\n  constructor() {\n    this.settings = storageService.getLocalStorageObject(StorageKeyName)\n      || { caching: false, eagerLoading: false, queries: [], relTypeLoading: REL_TYPE_OUTGOING, relExpansionLevel: 1, contrast: \"normal\",\n        possibleDisplayNameProperties: [], selectedDisplayNameProperty: {} };\n    this.modelColors = [];\n  }\n\n  get selectedDisplayNameProperty() {\n    return (async () => {\n      const { appAdtUrl } = await configService.getConfig();\n      const selectedDisplayNameProperty = this.settings?.selectedDisplayNameProperty?.[appAdtUrl];\n      return selectedDisplayNameProperty ?? DefaultDisplayName;\n    })();\n  }\n\n  set selectedDisplayNameProperty(selectedDisplayNameProperty) {\n    (async () => {\n      const { appAdtUrl } = await configService.getConfig();\n      if (this.settings.selectedDisplayNameProperty) {\n        this.settings.selectedDisplayNameProperty[appAdtUrl] = selectedDisplayNameProperty;\n      } else {\n        this.settings.selectedDisplayNameProperty = {\n          [appAdtUrl]: selectedDisplayNameProperty\n        };\n      }\n      this.save();\n    })();\n  }\n\n  get possibleDisplayNameProperties() {\n    return this.settings.possibleDisplayNameProperties || [];\n  }\n\n  set possibleDisplayNameProperties(possibleDisplayNameProperties) {\n    this.settings.possibleDisplayNameProperties = possibleDisplayNameProperties;\n    this.save();\n  }\n\n  get caching() {\n    return this.settings.caching || false;\n  }\n\n  set caching(caching) {\n    this.settings.caching = caching;\n    this.save();\n  }\n\n  get eagerLoading() {\n    return this.settings.eagerLoading || false;\n  }\n\n  set eagerLoading(eagerLoading) {\n    this.settings.eagerLoading = eagerLoading;\n    this.save();\n  }\n\n  get queries() {\n    return this.settings.queries || [];\n  }\n\n  set queries(queries) {\n    this.settings.queries = queries;\n    this.save();\n  }\n\n  get contrast() {\n    return this.settings.contrast || \"normal\";\n  }\n\n  set contrast(contrast) {\n    this.settings.contrast = contrast;\n    this.save();\n  }\n\n  get relTypeLoading() {\n    return this.settings.relTypeLoading || REL_TYPE_OUTGOING;\n  }\n\n  set relTypeLoading(relTypeLoading) {\n    this.settings.relTypeLoading = relTypeLoading;\n    this.save();\n  }\n\n  get relExpansionLevel() {\n    return this.settings.relExpansionLevel || 1;\n  }\n\n  set relExpansionLevel(relExpansionLevel) {\n    this.settings.relExpansionLevel = relExpansionLevel;\n    this.save();\n  }\n\n  setModelColors(modelIds) {\n    this.modelColors = [];\n    for (let i = 0; i < modelIds.length; i++) {\n      const im = i % colors.length;\n      this.modelColors[modelIds[i]] = `#${(colors[(colors.length - 1) - im])}`;\n    }\n  }\n\n  getModelColors() {\n    return this.modelColors;\n  }\n\n  get environments() {\n    return storageService.getLocalStorageObject(EnvStorageKeyName);\n  }\n\n  set environments(envs) {\n    storageService.setLocalStorageObject(EnvStorageKeyName, envs);\n  }\n\n  getModelImage = modelId => storageService.getLocalStoragePrimitive(modelId);\n\n  setModelImage = (modelId, dataString) => storageService.setLocalStorageObject(modelId, dataString);\n\n  deleteModelImage = modelId => storageService.removeLocalStorageObject(modelId);\n\n  save() {\n    storageService.setLocalStorageObject(StorageKeyName, this.settings);\n  }\n\n}\n\nexport const settingsService = new SettingsService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}