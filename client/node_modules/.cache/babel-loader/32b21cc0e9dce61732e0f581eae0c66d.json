{"ast":null,"code":"var _a, _b, _c, _d, _e;\nimport { __assign } from \"tslib\";\nimport { PanelType } from './Panel.types';\nimport { AnimationClassNames, AnimationVariables, getGlobalClassNames, HighContrastSelector, ScreenWidthMinMedium, ScreenWidthMinLarge, ScreenWidthMinXLarge, ScreenWidthMinXXLarge, ScreenWidthMinUhfMobile, IconFontSizes } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft'\n};\nvar panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940\n};\nvar panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176\n};\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nvar smallPanelSelectors = (_a = {}, _a[\"@media (min-width: \" + ScreenWidthMinMedium + \"px)\"] = {\n  width: panelWidth.sm\n}, _a);\nvar mediumPanelSelectors = (_b = {}, _b[\"@media (min-width: \" + ScreenWidthMinLarge + \"px)\"] = {\n  width: panelWidth.md1\n}, _b[\"@media (min-width: \" + ScreenWidthMinXLarge + \"px)\"] = {\n  width: panelWidth.md2\n}, _b);\nvar largePanelSelectors = (_c = {}, _c[\"@media (min-width: \" + ScreenWidthMinUhfMobile + \"px)\"] = {\n  left: panelMargin.md,\n  width: panelWidth.auto\n}, _c[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.lg\n}, _c);\nvar largeFixedPanelSelectors = (_d = {}, _d[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.auto,\n  width: panelWidth.lg\n}, _d);\nvar extraLargePanelSelectors = (_e = {}, _e[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.xl\n}, _e);\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nvar getPanelBreakpoints = function (type) {\n  var selectors;\n  // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = __assign({}, smallPanelSelectors);\n      break;\n    case PanelType.medium:\n      selectors = __assign(__assign({}, smallPanelSelectors), mediumPanelSelectors);\n      break;\n    case PanelType.large:\n      selectors = __assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors);\n      break;\n    case PanelType.largeFixed:\n      selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), largeFixedPanelSelectors);\n      break;\n    case PanelType.extraLarge:\n      selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), extraLargePanelSelectors);\n      break;\n    default:\n      break;\n  }\n  return selectors;\n};\nvar commandBarHeight = '44px';\nvar sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px'\n};\nexport var getStyles = function (props) {\n  var _a;\n  var className = props.className,\n    focusTrapZoneClassName = props.focusTrapZoneClassName,\n    hasCloseButton = props.hasCloseButton,\n    headerClassName = props.headerClassName,\n    isAnimating = props.isAnimating,\n    isFooterSticky = props.isFooterSticky,\n    isFooterAtBottom = props.isFooterAtBottom,\n    isOnRightSide = props.isOnRightSide,\n    isOpen = props.isOpen,\n    isHiddenOnDismiss = props.isHiddenOnDismiss,\n    hasCustomNavigation = props.hasCustomNavigation,\n    theme = props.theme,\n    _b = props.type,\n    type = _b === void 0 ? PanelType.smallFixedFar : _b;\n  var effects = theme.effects,\n    fonts = theme.fonts,\n    semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n  return {\n    root: [classNames.root, theme.fonts.medium, isOpen && classNames.isOpen, hasCloseButton && classNames.hasCloseButton, {\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }, isCustomPanel && isOnRightSide && classNames.custom, isCustomPanel && !isOnRightSide && classNames.customNear, className],\n    overlay: [{\n      pointerEvents: 'auto',\n      cursor: 'pointer'\n    }, isOpen && isAnimating && AnimationClassNames.fadeIn100, !isOpen && isAnimating && AnimationClassNames.fadeOut100],\n    hiddenPanel: [!isOpen && !isAnimating && isHiddenOnDismiss && {\n      visibility: 'hidden'\n    }],\n    main: [classNames.main, {\n      backgroundColor: semanticColors.bodyBackground,\n      boxShadow: effects.elevation64,\n      pointerEvents: 'auto',\n      position: 'absolute',\n      display: 'flex',\n      flexDirection: 'column',\n      overflowX: 'hidden',\n      overflowY: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      bottom: 0,\n      top: 0,\n      // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n      left: panelMargin.auto,\n      right: panelMargin.none,\n      width: panelWidth.full,\n      selectors: __assign((_a = {}, _a[HighContrastSelector] = {\n        borderLeft: \"3px solid \" + semanticColors.variantBorder,\n        borderRight: \"3px solid \" + semanticColors.variantBorder\n      }, _a), getPanelBreakpoints(type))\n    }, type === PanelType.smallFluid && {\n      left: panelMargin.none\n    }, type === PanelType.smallFixedNear && {\n      left: panelMargin.none,\n      right: panelMargin.auto,\n      width: panelWidth.xs\n    }, type === PanelType.customNear && {\n      right: 'auto',\n      left: 0\n    }, isCustomPanel && {\n      maxWidth: '100vw'\n    }, isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40, isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40, !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40, !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40, focusTrapZoneClassName],\n    commands: [classNames.commands, {\n      marginTop: 18\n    }, hasCustomNavigation && {\n      marginTop: 'inherit'\n    }],\n    navigation: [classNames.navigation, {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }, hasCustomNavigation && {\n      height: commandBarHeight\n    }],\n    contentInner: [classNames.contentInner, {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      overflowY: 'hidden'\n    }],\n    header: [classNames.header, sharedPaddingStyles, {\n      alignSelf: 'flex-start'\n    }, hasCloseButton && !hasCustomNavigation && {\n      flexGrow: 1\n    }, hasCustomNavigation && {\n      // Ensure that title doesn't shrink if screen is too small\n      flexShrink: 0\n    }],\n    headerText: [classNames.headerText, fonts.xLarge, {\n      color: semanticColors.bodyText,\n      lineHeight: '27px',\n      overflowWrap: 'break-word',\n      wordWrap: 'break-word',\n      wordBreak: 'break-word',\n      hyphens: 'auto'\n    }, headerClassName],\n    scrollableContent: [classNames.scrollableContent, {\n      overflowY: 'auto'\n    }, isFooterAtBottom && {\n      flexGrow: 1\n    }],\n    content: [classNames.content, sharedPaddingStyles, {\n      paddingBottom: 20\n    }],\n    footer: [classNames.footer, {\n      // Ensure that footer doesn't shrink if screen is too small\n      flexShrink: 0,\n      borderTop: '1px solid transparent',\n      transition: \"opacity \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction2\n    }, isFooterSticky && {\n      background: semanticColors.bodyBackground,\n      borderTopColor: semanticColors.variantBorder\n    }],\n    footerInner: [classNames.footerInner, sharedPaddingStyles, {\n      paddingBottom: 16,\n      paddingTop: 16\n    }],\n    subComponentStyles: {\n      closeButton: {\n        root: [classNames.closeButton, {\n          marginRight: 14,\n          color: theme.palette.neutralSecondary,\n          fontSize: IconFontSizes.large\n        }, hasCustomNavigation && {\n          marginRight: 0,\n          height: 'auto',\n          width: '44px'\n        }],\n        rootHovered: {\n          color: theme.palette.neutralPrimary\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["components/Panel/Panel.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IPanelStyleProps, IPanelStyles, PanelType } from './Panel.types';\nimport {\n  AnimationClassNames,\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  ScreenWidthMinMedium,\n  ScreenWidthMinLarge,\n  ScreenWidthMinXLarge,\n  ScreenWidthMinXXLarge,\n  ScreenWidthMinUhfMobile,\n  IStyle,\n  IconFontSizes,\n} from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft',\n};\n\nconst panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940,\n};\n\nconst panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176,\n};\n\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nconst smallPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinMedium}px)`]: {\n    width: panelWidth.sm,\n  },\n};\n\nconst mediumPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinLarge}px)`]: {\n    width: panelWidth.md1,\n  },\n  [`@media (min-width: ${ScreenWidthMinXLarge}px)`]: {\n    width: panelWidth.md2,\n  },\n};\n\nconst largePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinUhfMobile}px)`]: {\n    left: panelMargin.md,\n    width: panelWidth.auto,\n  },\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.lg,\n  },\n};\n\nconst largeFixedPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.auto,\n    width: panelWidth.lg,\n  },\n};\n\nconst extraLargePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.xl,\n  },\n};\n\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nconst getPanelBreakpoints = (type: PanelType): { [x: string]: IStyle } | undefined => {\n  let selectors;\n\n  // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = {\n        ...smallPanelSelectors,\n      };\n      break;\n    case PanelType.medium:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n      };\n      break;\n    case PanelType.large:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n      };\n      break;\n    case PanelType.largeFixed:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...largeFixedPanelSelectors,\n      };\n      break;\n    case PanelType.extraLarge:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...extraLargePanelSelectors,\n      };\n      break;\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nconst commandBarHeight = '44px';\n\nconst sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px',\n};\n\nexport const getStyles = (props: IPanelStyleProps): IPanelStyles => {\n  const {\n    className,\n    focusTrapZoneClassName,\n    hasCloseButton,\n    headerClassName,\n    isAnimating,\n    isFooterSticky,\n    isFooterAtBottom,\n    isOnRightSide,\n    isOpen,\n    isHiddenOnDismiss,\n    hasCustomNavigation,\n    theme,\n    type = PanelType.smallFixedFar,\n  } = props;\n  const { effects, fonts, semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  const isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isOpen && classNames.isOpen,\n      hasCloseButton && classNames.hasCloseButton,\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      },\n      isCustomPanel && isOnRightSide && classNames.custom,\n      isCustomPanel && !isOnRightSide && classNames.customNear,\n      className,\n    ],\n    overlay: [\n      {\n        pointerEvents: 'auto',\n        cursor: 'pointer',\n      },\n      isOpen && isAnimating && AnimationClassNames.fadeIn100,\n      !isOpen && isAnimating && AnimationClassNames.fadeOut100,\n    ],\n    hiddenPanel: [\n      !isOpen &&\n        !isAnimating &&\n        isHiddenOnDismiss && {\n          visibility: 'hidden',\n        },\n    ],\n    main: [\n      classNames.main,\n      {\n        backgroundColor: semanticColors.bodyBackground,\n        boxShadow: effects.elevation64,\n        pointerEvents: 'auto',\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        bottom: 0,\n        top: 0,\n        // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n        left: panelMargin.auto,\n        right: panelMargin.none,\n        width: panelWidth.full,\n        selectors: {\n          [HighContrastSelector]: {\n            borderLeft: `3px solid ${semanticColors.variantBorder}`,\n            borderRight: `3px solid ${semanticColors.variantBorder}`,\n          },\n          ...getPanelBreakpoints(type),\n        },\n      },\n      type === PanelType.smallFluid && {\n        left: panelMargin.none,\n      },\n      type === PanelType.smallFixedNear && {\n        left: panelMargin.none,\n        right: panelMargin.auto,\n        width: panelWidth.xs,\n      },\n      type === PanelType.customNear && {\n        right: 'auto',\n        left: 0,\n      },\n      isCustomPanel && {\n        maxWidth: '100vw',\n      },\n      isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\n      isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\n      !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\n      !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\n      focusTrapZoneClassName,\n    ],\n    commands: [\n      classNames.commands,\n      {\n        marginTop: 18,\n      },\n      hasCustomNavigation && {\n        marginTop: 'inherit',\n      },\n    ],\n    navigation: [\n      classNames.navigation,\n      {\n        display: 'flex',\n        justifyContent: 'flex-end',\n      },\n      hasCustomNavigation && {\n        height: commandBarHeight,\n      },\n    ],\n    contentInner: [\n      classNames.contentInner,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        overflowY: 'hidden',\n      },\n    ],\n    header: [\n      classNames.header,\n      sharedPaddingStyles,\n      {\n        alignSelf: 'flex-start',\n      },\n      hasCloseButton &&\n        !hasCustomNavigation && {\n          flexGrow: 1,\n        },\n      hasCustomNavigation && {\n        // Ensure that title doesn't shrink if screen is too small\n        flexShrink: 0,\n      },\n    ],\n    headerText: [\n      classNames.headerText,\n      fonts.xLarge,\n      {\n        color: semanticColors.bodyText,\n        lineHeight: '27px',\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        wordBreak: 'break-word',\n        hyphens: 'auto',\n      },\n      headerClassName,\n    ],\n    scrollableContent: [\n      classNames.scrollableContent,\n      {\n        overflowY: 'auto',\n      },\n      isFooterAtBottom && {\n        flexGrow: 1,\n      },\n    ],\n    content: [\n      classNames.content,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 20,\n      },\n    ],\n    footer: [\n      classNames.footer,\n      {\n        // Ensure that footer doesn't shrink if screen is too small\n        flexShrink: 0,\n        borderTop: '1px solid transparent',\n        transition: `opacity ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction2}`,\n      },\n      isFooterSticky && {\n        background: semanticColors.bodyBackground,\n        borderTopColor: semanticColors.variantBorder,\n      },\n    ],\n    footerInner: [\n      classNames.footerInner,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 16,\n        paddingTop: 16,\n      },\n    ],\n    subComponentStyles: {\n      closeButton: {\n        root: [\n          classNames.closeButton,\n          {\n            marginRight: 14,\n            color: theme.palette.neutralSecondary,\n            fontSize: IconFontSizes.large,\n          },\n          hasCustomNavigation && {\n            marginRight: 0,\n            height: 'auto',\n            width: '44px',\n          },\n        ],\n        rootHovered: {\n          color: theme.palette.neutralPrimary,\n        },\n      },\n    },\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}