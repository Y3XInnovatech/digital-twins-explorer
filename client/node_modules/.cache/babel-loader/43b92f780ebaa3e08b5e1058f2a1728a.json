{"ast":null,"code":"import { getWindow } from './dom/getWindow';\nvar isMacResult;\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\nexport function isMac(reset) {\n  if (typeof isMacResult === 'undefined' || reset) {\n    var win = getWindow();\n    var userAgent = win && win.navigator.userAgent;\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n  return !!isMacResult;\n}","map":{"version":3,"sources":["osDetector.ts"],"names":[],"mappings":"AAAA,SAAS,SAAS,QAAQ,iBAAiB;AAE3C,IAAI,WAAgC;AAEpC;;;AAGG;AACH,OAAM,SAAU,KAAK,CAAC,KAAe,EAAA;EACnC,IAAI,OAAO,WAAW,KAAK,WAAW,IAAI,KAAK,EAAE;IAC/C,IAAM,GAAG,GAAG,SAAS,CAAA,CAAE;IACvB,IAAM,SAAS,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,SAAS;IAEhD,WAAW,GAAG,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;EACnE;EACD,OAAO,CAAC,CAAC,WAAW;AACtB","sourcesContent":["import { getWindow } from './dom/getWindow';\n\nlet isMacResult: boolean | undefined;\n\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\nexport function isMac(reset?: boolean): boolean {\n  if (typeof isMacResult === 'undefined' || reset) {\n    const win = getWindow();\n    const userAgent = win && win.navigator.userAgent;\n\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n  return !!isMacResult;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}