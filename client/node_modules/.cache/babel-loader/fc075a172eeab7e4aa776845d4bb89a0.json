{"ast":null,"code":"/**\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst util = require('./util');\nmodule.exports = class AsyncAlgorithm {\n  constructor({\n    maxCallStackDepth = 500,\n    maxTotalCallStackDepth = 0xFFFFFFFF,\n    // milliseconds\n    timeSlice = 10\n  } = {}) {\n    this.schedule = {};\n    this.schedule.MAX_DEPTH = maxCallStackDepth;\n    this.schedule.MAX_TOTAL_DEPTH = maxTotalCallStackDepth;\n    this.schedule.depth = 0;\n    this.schedule.totalDepth = 0;\n    this.schedule.timeSlice = timeSlice;\n  }\n\n  // do some work in a time slice, but in serial\n  doWork(fn, callback) {\n    const schedule = this.schedule;\n    if (schedule.totalDepth >= schedule.MAX_TOTAL_DEPTH) {\n      return callback(new Error('Maximum total call stack depth exceeded; canonicalization aborting.'));\n    }\n    (function work() {\n      if (schedule.depth === schedule.MAX_DEPTH) {\n        // stack too deep, run on next tick\n        schedule.depth = 0;\n        schedule.running = false;\n        return util.nextTick(work);\n      }\n\n      // if not yet running, force run\n      const now = Date.now();\n      if (!schedule.running) {\n        schedule.start = Date.now();\n        schedule.deadline = schedule.start + schedule.timeSlice;\n      }\n\n      // TODO: should also include an estimate of expectedWorkTime\n      if (now < schedule.deadline) {\n        schedule.running = true;\n        schedule.depth++;\n        schedule.totalDepth++;\n        return fn((err, result) => {\n          schedule.depth--;\n          schedule.totalDepth--;\n          callback(err, result);\n        });\n      }\n\n      // not enough time left in this slice, run after letting browser\n      // do some other things\n      schedule.depth = 0;\n      schedule.running = false;\n      util.setImmediate(work);\n    })();\n  }\n\n  // asynchronously loop\n  forEach(iterable, fn, callback) {\n    const self = this;\n    let iterator;\n    let idx = 0;\n    let length;\n    if (Array.isArray(iterable)) {\n      length = iterable.length;\n      iterator = () => {\n        if (idx === length) {\n          return false;\n        }\n        iterator.value = iterable[idx++];\n        iterator.key = idx;\n        return true;\n      };\n    } else {\n      const keys = Object.keys(iterable);\n      length = keys.length;\n      iterator = () => {\n        if (idx === length) {\n          return false;\n        }\n        iterator.key = keys[idx++];\n        iterator.value = iterable[iterator.key];\n        return true;\n      };\n    }\n    (function iterate(err) {\n      if (err) {\n        return callback(err);\n      }\n      if (iterator()) {\n        return self.doWork(() => fn(iterator.value, iterator.key, iterate));\n      }\n      callback();\n    })();\n  }\n\n  // asynchronous waterfall\n  waterfall(fns, callback) {\n    const self = this;\n    self.forEach(fns, (fn, idx, callback) => self.doWork(fn, callback), callback);\n  }\n\n  // asynchronous while\n  whilst(condition, fn, callback) {\n    const self = this;\n    (function loop(err) {\n      if (err) {\n        return callback(err);\n      }\n      if (!condition()) {\n        return callback();\n      }\n      self.doWork(fn, loop);\n    })();\n  }\n};","map":{"version":3,"names":["util","require","module","exports","AsyncAlgorithm","constructor","maxCallStackDepth","maxTotalCallStackDepth","timeSlice","schedule","MAX_DEPTH","MAX_TOTAL_DEPTH","depth","totalDepth","doWork","fn","callback","Error","work","running","nextTick","now","Date","start","deadline","err","result","setImmediate","forEach","iterable","self","iterator","idx","length","Array","isArray","value","key","keys","Object","iterate","waterfall","fns","whilst","condition","loop"],"sources":["/home/saharsh/digital-twins-explorer/client/node_modules/rdf-canonize/lib/AsyncAlgorithm.js"],"sourcesContent":["/**\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst util = require('./util');\n\nmodule.exports = class AsyncAlgorithm {\n  constructor({\n    maxCallStackDepth = 500,\n    maxTotalCallStackDepth = 0xFFFFFFFF,\n    // milliseconds\n    timeSlice = 10\n  } = {}) {\n    this.schedule = {};\n    this.schedule.MAX_DEPTH = maxCallStackDepth;\n    this.schedule.MAX_TOTAL_DEPTH = maxTotalCallStackDepth;\n    this.schedule.depth = 0;\n    this.schedule.totalDepth = 0;\n    this.schedule.timeSlice = timeSlice;\n  }\n\n  // do some work in a time slice, but in serial\n  doWork(fn, callback) {\n    const schedule = this.schedule;\n\n    if(schedule.totalDepth >= schedule.MAX_TOTAL_DEPTH) {\n      return callback(new Error(\n        'Maximum total call stack depth exceeded; canonicalization aborting.'));\n    }\n\n    (function work() {\n      if(schedule.depth === schedule.MAX_DEPTH) {\n        // stack too deep, run on next tick\n        schedule.depth = 0;\n        schedule.running = false;\n        return util.nextTick(work);\n      }\n\n      // if not yet running, force run\n      const now = Date.now();\n      if(!schedule.running) {\n        schedule.start = Date.now();\n        schedule.deadline = schedule.start + schedule.timeSlice;\n      }\n\n      // TODO: should also include an estimate of expectedWorkTime\n      if(now < schedule.deadline) {\n        schedule.running = true;\n        schedule.depth++;\n        schedule.totalDepth++;\n        return fn((err, result) => {\n          schedule.depth--;\n          schedule.totalDepth--;\n          callback(err, result);\n        });\n      }\n\n      // not enough time left in this slice, run after letting browser\n      // do some other things\n      schedule.depth = 0;\n      schedule.running = false;\n      util.setImmediate(work);\n    })();\n  }\n\n  // asynchronously loop\n  forEach(iterable, fn, callback) {\n    const self = this;\n    let iterator;\n    let idx = 0;\n    let length;\n    if(Array.isArray(iterable)) {\n      length = iterable.length;\n      iterator = () => {\n        if(idx === length) {\n          return false;\n        }\n        iterator.value = iterable[idx++];\n        iterator.key = idx;\n        return true;\n      };\n    } else {\n      const keys = Object.keys(iterable);\n      length = keys.length;\n      iterator = () => {\n        if(idx === length) {\n          return false;\n        }\n        iterator.key = keys[idx++];\n        iterator.value = iterable[iterator.key];\n        return true;\n      };\n    }\n\n    (function iterate(err) {\n      if(err) {\n        return callback(err);\n      }\n      if(iterator()) {\n        return self.doWork(() => fn(iterator.value, iterator.key, iterate));\n      }\n      callback();\n    })();\n  }\n\n  // asynchronous waterfall\n  waterfall(fns, callback) {\n    const self = this;\n    self.forEach(\n      fns, (fn, idx, callback) => self.doWork(fn, callback), callback);\n  }\n\n  // asynchronous while\n  whilst(condition, fn, callback) {\n    const self = this;\n    (function loop(err) {\n      if(err) {\n        return callback(err);\n      }\n      if(!condition()) {\n        return callback();\n      }\n      self.doWork(fn, loop);\n    })();\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}