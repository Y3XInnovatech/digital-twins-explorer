{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getFocusStyle, getGlobalClassNames, hiddenContentStyle, FontWeights } from '../../Styling';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { getCellStyles } from './DetailsHeader.styles';\nvar GlobalClassNames = {\n  isActionable: 'is-actionable',\n  cellIsCheck: 'ms-DetailsHeader-cellIsCheck',\n  collapseButton: 'ms-DetailsHeader-collapseButton',\n  isCollapsed: 'is-collapsed',\n  isAllSelected: 'is-allSelected',\n  isSelectAllHidden: 'is-selectAllHidden',\n  isResizingColumn: 'is-resizingColumn',\n  isEmpty: 'is-empty',\n  isIconVisible: 'is-icon-visible',\n  cellSizer: 'ms-DetailsHeader-cellSizer',\n  isResizing: 'is-resizing',\n  dropHintCircleStyle: 'ms-DetailsHeader-dropHintCircleStyle',\n  dropHintLineStyle: 'ms-DetailsHeader-dropHintLineStyle',\n  cellTitle: 'ms-DetailsHeader-cellTitle',\n  cellName: 'ms-DetailsHeader-cellName',\n  filterChevron: 'ms-DetailsHeader-filterChevron',\n  gripperBarVerticalStyle: 'ms-DetailsColumn-gripperBar',\n  nearIcon: 'ms-DetailsColumn-nearIcon'\n};\nexport var getStyles = function (props) {\n  var _a;\n  var theme = props.theme,\n    headerClassName = props.headerClassName,\n    iconClassName = props.iconClassName,\n    isActionable = props.isActionable,\n    isEmpty = props.isEmpty,\n    isIconVisible = props.isIconVisible,\n    isPadded = props.isPadded,\n    isIconOnly = props.isIconOnly,\n    _b = props.cellStyleProps,\n    cellStyleProps = _b === void 0 ? DEFAULT_CELL_STYLE_PROPS : _b,\n    transitionDurationDrag = props.transitionDurationDrag,\n    transitionDurationDrop = props.transitionDurationDrop;\n  var semanticColors = theme.semanticColors,\n    palette = theme.palette,\n    fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var colors = {\n    iconForegroundColor: semanticColors.bodySubtext,\n    headerForegroundColor: semanticColors.bodyText,\n    headerBackgroundColor: semanticColors.bodyBackground,\n    dropdownChevronForegroundColor: palette.neutralSecondary,\n    resizerColor: palette.neutralTertiaryAlt\n  };\n  var nearIconStyle = {\n    color: colors.iconForegroundColor,\n    opacity: 1,\n    paddingLeft: 8\n  };\n  var borderWhileDragging = {\n    outline: \"1px solid \" + palette.themePrimary\n  };\n  var borderAfterDragOrDrop = {\n    outlineColor: 'transparent'\n  };\n  return {\n    root: [getCellStyles(props), fonts.small, isActionable && [classNames.isActionable, {\n      selectors: {\n        ':hover': {\n          color: semanticColors.bodyText,\n          background: semanticColors.listHeaderBackgroundHovered\n        },\n        ':active': {\n          background: semanticColors.listHeaderBackgroundPressed\n        }\n      }\n    }], isEmpty && [classNames.isEmpty, {\n      textOverflow: 'clip'\n    }], isIconVisible && classNames.isIconVisible, isPadded && {\n      paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding\n    }, {\n      selectors: {\n        ':hover i[data-icon-name=\"GripperBarVertical\"]': {\n          display: 'block'\n        }\n      }\n    }, headerClassName],\n    gripperBarVerticalStyle: {\n      display: 'none',\n      position: 'absolute',\n      textAlign: 'left',\n      color: palette.neutralTertiary,\n      left: 1\n    },\n    nearIcon: [classNames.nearIcon, nearIconStyle],\n    sortIcon: [nearIconStyle, {\n      paddingLeft: 4,\n      position: 'relative',\n      top: 1\n    }],\n    iconClassName: [{\n      color: colors.iconForegroundColor,\n      opacity: 1\n    }, iconClassName],\n    filterChevron: [classNames.filterChevron, {\n      color: colors.dropdownChevronForegroundColor,\n      paddingLeft: 6,\n      verticalAlign: 'middle',\n      fontSize: fonts.small.fontSize\n    }],\n    cellTitle: [classNames.cellTitle, getFocusStyle(theme), __assign({\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      boxSizing: 'border-box',\n      overflow: 'hidden',\n      padding: \"0 \" + cellStyleProps.cellRightPadding + \"px 0 \" + cellStyleProps.cellLeftPadding + \"px\"\n    }, isIconOnly ? {\n      alignContent: 'flex-end',\n      maxHeight: '100%',\n      flexWrap: 'wrap-reverse'\n    } : {})],\n    cellName: [classNames.cellName, {\n      flex: '0 1 auto',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      fontWeight: FontWeights.semibold,\n      fontSize: fonts.medium.fontSize\n    }, isIconOnly && {\n      selectors: (_a = {}, _a[\".\" + classNames.nearIcon] = {\n        paddingLeft: 0\n      }, _a)\n    }],\n    cellTooltip: {\n      display: 'block',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    },\n    accessibleLabel: hiddenContentStyle,\n    borderWhileDragging: borderWhileDragging,\n    noBorderWhileDragging: [borderAfterDragOrDrop, {\n      transition: \"outline \" + transitionDurationDrag + \"ms ease\"\n    }],\n    borderAfterDropping: borderWhileDragging,\n    noBorderAfterDropping: [borderAfterDragOrDrop, {\n      transition: \"outline  \" + transitionDurationDrop + \"ms ease\"\n    }]\n  };\n};","map":{"version":3,"sources":["components/DetailsList/DetailsColumn.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IDetailsColumnStyleProps, IDetailsColumnStyles } from './DetailsColumn.types';\nimport { getFocusStyle, getGlobalClassNames, hiddenContentStyle, IStyle, FontWeights } from '../../Styling';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { getCellStyles } from './DetailsHeader.styles';\n\nconst GlobalClassNames = {\n  isActionable: 'is-actionable',\n  cellIsCheck: 'ms-DetailsHeader-cellIsCheck',\n  collapseButton: 'ms-DetailsHeader-collapseButton',\n  isCollapsed: 'is-collapsed',\n  isAllSelected: 'is-allSelected',\n  isSelectAllHidden: 'is-selectAllHidden',\n  isResizingColumn: 'is-resizingColumn',\n  isEmpty: 'is-empty',\n  isIconVisible: 'is-icon-visible',\n  cellSizer: 'ms-DetailsHeader-cellSizer',\n  isResizing: 'is-resizing',\n  dropHintCircleStyle: 'ms-DetailsHeader-dropHintCircleStyle',\n  dropHintLineStyle: 'ms-DetailsHeader-dropHintLineStyle',\n  cellTitle: 'ms-DetailsHeader-cellTitle',\n  cellName: 'ms-DetailsHeader-cellName',\n  filterChevron: 'ms-DetailsHeader-filterChevron',\n  gripperBarVerticalStyle: 'ms-DetailsColumn-gripperBar',\n  nearIcon: 'ms-DetailsColumn-nearIcon',\n};\n\nexport const getStyles = (props: IDetailsColumnStyleProps): IDetailsColumnStyles => {\n  const {\n    theme,\n    headerClassName,\n    iconClassName,\n    isActionable,\n    isEmpty,\n    isIconVisible,\n    isPadded,\n    isIconOnly,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    transitionDurationDrag,\n    transitionDurationDrop,\n  } = props;\n\n  const { semanticColors, palette, fonts } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const colors = {\n    iconForegroundColor: semanticColors.bodySubtext,\n    headerForegroundColor: semanticColors.bodyText,\n    headerBackgroundColor: semanticColors.bodyBackground,\n    dropdownChevronForegroundColor: palette.neutralSecondary,\n    resizerColor: palette.neutralTertiaryAlt,\n  };\n\n  const nearIconStyle: IStyle = {\n    color: colors.iconForegroundColor,\n    opacity: 1,\n    paddingLeft: 8,\n  };\n\n  const borderWhileDragging: IStyle = {\n    outline: `1px solid ${palette.themePrimary}`,\n  };\n\n  const borderAfterDragOrDrop: IStyle = {\n    outlineColor: 'transparent',\n  };\n\n  return {\n    root: [\n      getCellStyles(props),\n      fonts.small,\n      isActionable && [\n        classNames.isActionable,\n        {\n          selectors: {\n            ':hover': {\n              color: semanticColors.bodyText,\n              background: semanticColors.listHeaderBackgroundHovered,\n            },\n            ':active': {\n              background: semanticColors.listHeaderBackgroundPressed,\n            },\n          },\n        },\n      ],\n      isEmpty && [\n        classNames.isEmpty,\n        {\n          textOverflow: 'clip',\n        },\n      ],\n      isIconVisible && classNames.isIconVisible,\n      isPadded && {\n        paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding,\n      },\n      {\n        selectors: {\n          ':hover i[data-icon-name=\"GripperBarVertical\"]': {\n            display: 'block',\n          },\n        },\n      },\n      headerClassName,\n    ],\n\n    gripperBarVerticalStyle: {\n      display: 'none',\n      position: 'absolute',\n      textAlign: 'left',\n      color: palette.neutralTertiary,\n      left: 1,\n    },\n\n    nearIcon: [classNames.nearIcon, nearIconStyle],\n\n    sortIcon: [\n      nearIconStyle,\n      {\n        paddingLeft: 4,\n        position: 'relative',\n        top: 1,\n      },\n    ],\n\n    iconClassName: [\n      {\n        color: colors.iconForegroundColor,\n        opacity: 1,\n      },\n      iconClassName,\n    ],\n\n    filterChevron: [\n      classNames.filterChevron,\n      {\n        color: colors.dropdownChevronForegroundColor,\n        paddingLeft: 6,\n        verticalAlign: 'middle',\n        fontSize: fonts.small.fontSize,\n      },\n    ],\n\n    cellTitle: [\n      classNames.cellTitle,\n      getFocusStyle(theme),\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'stretch',\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        padding: `0 ${cellStyleProps.cellRightPadding}px 0 ${cellStyleProps.cellLeftPadding}px`,\n        ...(isIconOnly\n          ? {\n              alignContent: 'flex-end',\n              maxHeight: '100%',\n              flexWrap: 'wrap-reverse',\n            }\n          : {}),\n      },\n    ],\n\n    cellName: [\n      classNames.cellName,\n      {\n        flex: '0 1 auto',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontWeight: FontWeights.semibold,\n        fontSize: fonts.medium.fontSize,\n      },\n      isIconOnly && {\n        selectors: {\n          [`.${classNames.nearIcon}`]: {\n            paddingLeft: 0,\n          },\n        },\n      },\n    ],\n\n    cellTooltip: {\n      display: 'block',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n    },\n\n    accessibleLabel: hiddenContentStyle,\n\n    borderWhileDragging: borderWhileDragging,\n\n    noBorderWhileDragging: [borderAfterDragOrDrop, { transition: `outline ${transitionDurationDrag}ms ease` }],\n\n    borderAfterDropping: borderWhileDragging,\n\n    noBorderAfterDropping: [borderAfterDragOrDrop, { transition: `outline  ${transitionDurationDrop}ms ease` }],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}