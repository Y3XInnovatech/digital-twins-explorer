{"ast":null,"code":"import { HighContrastSelector, AnimationVariables, normalize, getPlaceholderStyles, getGlobalClassNames, getInputFocusStyle } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field'\n};\nexport function getStyles(props) {\n  var _a, _b, _c, _d;\n  var theme = props.theme,\n    underlined = props.underlined,\n    disabled = props.disabled,\n    hasFocus = props.hasFocus,\n    className = props.className,\n    hasInput = props.hasInput,\n    disableAnimation = props.disableAnimation;\n  var palette = theme.palette,\n    fonts = theme.fonts,\n    semanticColors = theme.semanticColors,\n    effects = theme.effects;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  // placeholder style constants\n  var placeholderStyles = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1\n  };\n  var inputIconAlt = palette.neutralSecondary;\n  var inputIconAltHovered = palette.neutralPrimary;\n  var inputBorderDisabled = palette.neutralLighter;\n  var inputBackgroundHovered = palette.neutralLighter;\n  var inputBackgroundDisabled = palette.neutralLighter;\n  return {\n    root: [classNames.root, fonts.medium, normalize, {\n      color: semanticColors.inputText,\n      backgroundColor: semanticColors.inputBackground,\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'nowrap',\n      alignItems: 'stretch',\n      // The 1px top and bottom padding ensure the input field does not overlap the border\n      padding: '1px 0 1px 4px',\n      borderRadius: effects.roundedCorner2,\n      border: \"1px solid \" + semanticColors.inputBorder,\n      height: 32,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'WindowText'\n      }, _a[':hover'] = {\n        borderColor: semanticColors.inputBorderHovered,\n        selectors: (_b = {}, _b[HighContrastSelector] = {\n          borderColor: 'Highlight'\n        }, _b)\n      }, _a[\":hover .\" + classNames.iconContainer] = {\n        color: semanticColors.inputIconHovered\n      }, _a)\n    }, !hasFocus && hasInput && {\n      selectors: (_c = {}, _c[\":hover .\" + classNames.iconContainer] = {\n        width: 4\n      }, _c[\":hover .\" + classNames.icon] = {\n        opacity: 0\n      }, _c)\n    }, hasFocus && ['is-active', {\n      position: 'relative'\n    }, getInputFocusStyle(semanticColors.inputFocusBorderAlt, underlined ? 0 : effects.roundedCorner2, underlined ? 'borderBottom' : 'border')], disabled && ['is-disabled', {\n      borderColor: inputBorderDisabled,\n      backgroundColor: inputBackgroundDisabled,\n      pointerEvents: 'none',\n      cursor: 'default',\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _d)\n    }], underlined && ['is-underlined', {\n      borderWidth: '0 0 1px 0',\n      borderRadius: 0,\n      // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n      padding: '1px 0 1px 8px'\n    }], underlined && disabled && {\n      backgroundColor: 'transparent'\n    }, hasInput && 'can-clear', className],\n    iconContainer: [classNames.iconContainer, {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      flexShrink: 0,\n      fontSize: 16,\n      width: 32,\n      textAlign: 'center',\n      color: semanticColors.inputIcon,\n      cursor: 'text'\n    }, hasFocus && {\n      width: 4\n    }, disabled && {\n      color: semanticColors.inputIconDisabled\n    }, !disableAnimation && {\n      transition: \"width \" + AnimationVariables.durationValue1\n    }],\n    icon: [classNames.icon, {\n      opacity: 1\n    }, hasFocus && {\n      opacity: 0\n    }, !disableAnimation && {\n      transition: \"opacity \" + AnimationVariables.durationValue1 + \" 0s\"\n    }],\n    clearButton: [classNames.clearButton, {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'stretch',\n      cursor: 'pointer',\n      flexBasis: '32px',\n      flexShrink: 0,\n      padding: 0,\n      margin: '-1px 0px',\n      selectors: {\n        '&:hover .ms-Button': {\n          backgroundColor: inputBackgroundHovered\n        },\n        '&:hover .ms-Button-icon': {\n          color: inputIconAltHovered\n        },\n        '.ms-Button': {\n          borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0'\n        },\n        '.ms-Button-icon': {\n          color: inputIconAlt\n        }\n      }\n    }],\n    field: [classNames.field, normalize, getPlaceholderStyles(placeholderStyles), {\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 'none',\n      fontWeight: 'inherit',\n      fontFamily: 'inherit',\n      fontSize: 'inherit',\n      color: semanticColors.inputText,\n      flex: '1 1 0px',\n      // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n      // 0px allows the input element to shrink to fit the container.\n      minWidth: '0px',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      // This padding forces the text placement to round up.\n      paddingBottom: 0.5,\n      // This removes the IE specific clear button in the input since we implimented our own\n      selectors: {\n        '::-ms-clear': {\n          display: 'none'\n        }\n      }\n    }, disabled && {\n      color: semanticColors.disabledText\n    }]\n  };\n}","map":{"version":3,"sources":["components/SearchBox/SearchBox.styles.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  HighContrastSelector,\n  AnimationVariables,\n  normalize,\n  IStyle,\n  getPlaceholderStyles,\n  getGlobalClassNames,\n  getInputFocusStyle,\n} from '../../Styling';\nimport { ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\nimport { getRTL } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field',\n};\n\nexport function getStyles(props: ISearchBoxStyleProps): ISearchBoxStyles {\n  const { theme, underlined, disabled, hasFocus, className, hasInput, disableAnimation } = props;\n  const { palette, fonts, semanticColors, effects } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n  };\n\n  const inputIconAlt = palette.neutralSecondary;\n  const inputIconAltHovered = palette.neutralPrimary;\n  const inputBorderDisabled = palette.neutralLighter;\n  const inputBackgroundHovered = palette.neutralLighter;\n  const inputBackgroundDisabled = palette.neutralLighter;\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        color: semanticColors.inputText,\n        backgroundColor: semanticColors.inputBackground,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        alignItems: 'stretch',\n        // The 1px top and bottom padding ensure the input field does not overlap the border\n        padding: '1px 0 1px 4px',\n        borderRadius: effects.roundedCorner2,\n        border: `1px solid ${semanticColors.inputBorder}`,\n        height: 32,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'WindowText',\n          },\n          ':hover': {\n            borderColor: semanticColors.inputBorderHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n          [`:hover .${classNames.iconContainer}`]: {\n            color: semanticColors.inputIconHovered,\n          },\n        },\n      },\n      !hasFocus &&\n        hasInput && {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 4,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 0,\n            },\n          },\n        },\n      hasFocus && [\n        'is-active',\n        {\n          position: 'relative',\n        },\n        getInputFocusStyle(\n          semanticColors.inputFocusBorderAlt,\n          underlined ? 0 : effects.roundedCorner2,\n          underlined ? 'borderBottom' : 'border',\n        ),\n      ],\n      disabled && [\n        'is-disabled',\n        {\n          borderColor: inputBorderDisabled,\n          backgroundColor: inputBackgroundDisabled,\n          pointerEvents: 'none',\n          cursor: 'default',\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n      ],\n      underlined && [\n        'is-underlined',\n        {\n          borderWidth: '0 0 1px 0',\n          borderRadius: 0,\n          // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n          padding: '1px 0 1px 8px',\n        },\n      ],\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n      hasInput && 'can-clear',\n      className,\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexShrink: 0,\n        fontSize: 16,\n        width: 32,\n        textAlign: 'center',\n        color: semanticColors.inputIcon,\n        cursor: 'text',\n      },\n      hasFocus && {\n        width: 4,\n      },\n      disabled && {\n        color: semanticColors.inputIconDisabled,\n      },\n      !disableAnimation && {\n        transition: `width ${AnimationVariables.durationValue1}`,\n      },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        opacity: 1,\n      },\n      hasFocus && {\n        opacity: 0,\n      },\n      !disableAnimation && {\n        transition: `opacity ${AnimationVariables.durationValue1} 0s`,\n      },\n    ],\n    clearButton: [\n      classNames.clearButton,\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        cursor: 'pointer',\n        flexBasis: '32px',\n        flexShrink: 0,\n        padding: 0,\n        margin: '-1px 0px',\n        selectors: {\n          '&:hover .ms-Button': {\n            backgroundColor: inputBackgroundHovered,\n          },\n          '&:hover .ms-Button-icon': {\n            color: inputIconAltHovered,\n          },\n          '.ms-Button': {\n            borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n          },\n          '.ms-Button-icon': {\n            color: inputIconAlt,\n          },\n        },\n      },\n    ],\n    field: [\n      classNames.field,\n      normalize,\n      getPlaceholderStyles(placeholderStyles),\n      {\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        fontWeight: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        color: semanticColors.inputText,\n        flex: '1 1 0px',\n        // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n        // 0px allows the input element to shrink to fit the container.\n        minWidth: '0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        // This padding forces the text placement to round up.\n        paddingBottom: 0.5,\n        // This removes the IE specific clear button in the input since we implimented our own\n        selectors: {\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}