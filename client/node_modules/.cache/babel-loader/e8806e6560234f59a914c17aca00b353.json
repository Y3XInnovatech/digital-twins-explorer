{"ast":null,"code":"import { getWindow } from './dom/getWindow';\nimport { Stylesheet } from '@uifabric/merge-styles';\n// Initialize global window id.\nvar CURRENT_ID_PROPERTY = '__currentId__';\nvar DEFAULT_ID_STRING = 'id__';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar _global = getWindow() || {};\nif (_global[CURRENT_ID_PROPERTY] === undefined) {\n  _global[CURRENT_ID_PROPERTY] = 0;\n}\nvar _initializedStylesheetResets = false;\n/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\nexport function getId(prefix) {\n  if (!_initializedStylesheetResets) {\n    // Configure ids to reset on stylesheet resets.\n    var stylesheet = Stylesheet.getInstance();\n    if (stylesheet && stylesheet.onReset) {\n      stylesheet.onReset(resetIds);\n    }\n    _initializedStylesheetResets = true;\n  }\n  var index = _global[CURRENT_ID_PROPERTY]++;\n  return (prefix === undefined ? DEFAULT_ID_STRING : prefix) + index;\n}\n/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\nexport function resetIds(counter) {\n  if (counter === void 0) {\n    counter = 0;\n  }\n  _global[CURRENT_ID_PROPERTY] = counter;\n}","map":{"version":3,"sources":["getId.ts"],"names":[],"mappings":"AAAA,SAAS,SAAS,QAAQ,iBAAiB;AAC3C,SAAS,UAAU,QAAQ,wBAAwB;AAEnD;AACA,IAAM,mBAAmB,GAAG,eAAe;AAC3C,IAAM,iBAAiB,GAAG,MAAM;AAEhC;AACA,IAAI,OAAO,GAAQ,SAAS,CAAA,CAAE,IAAI,CAAA,CAAE;AAEpC,IAAI,OAAO,CAAC,mBAAmB,CAAC,KAAK,SAAS,EAAE;EAC9C,OAAO,CAAC,mBAAmB,CAAC,GAAG,CAAC;AACjC;AAED,IAAI,4BAA4B,GAAG,KAAK;AAExC;;;;AAIG;AACH,OAAM,SAAU,KAAK,CAAC,MAAe,EAAA;EACnC,IAAI,CAAC,4BAA4B,EAAE;IACjC;IACA,IAAM,UAAU,GAAG,UAAU,CAAC,WAAW,CAAA,CAAE;IAE3C,IAAI,UAAU,IAAI,UAAU,CAAC,OAAO,EAAE;MACpC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC;IAC7B;IACD,4BAA4B,GAAG,IAAI;EACpC;EAED,IAAI,KAAK,GAAG,OAAO,CAAC,mBAAmB,CAAC,EAAE;EAE1C,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,iBAAiB,GAAG,MAAM,IAAI,KAAK;AACpE;AAEA;;;;AAIG;AACH,OAAM,SAAU,QAAQ,CAAC,OAAmB,EAAA;EAAnB,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;IAAA,OAAA,GAAA,CAAmB;EAAA;EAC1C,OAAO,CAAC,mBAAmB,CAAC,GAAG,OAAO;AACxC","sourcesContent":["import { getWindow } from './dom/getWindow';\nimport { Stylesheet } from '@uifabric/merge-styles';\n\n// Initialize global window id.\nconst CURRENT_ID_PROPERTY = '__currentId__';\nconst DEFAULT_ID_STRING = 'id__';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet _global: any = getWindow() || {};\n\nif (_global[CURRENT_ID_PROPERTY] === undefined) {\n  _global[CURRENT_ID_PROPERTY] = 0;\n}\n\nlet _initializedStylesheetResets = false;\n\n/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\nexport function getId(prefix?: string): string {\n  if (!_initializedStylesheetResets) {\n    // Configure ids to reset on stylesheet resets.\n    const stylesheet = Stylesheet.getInstance();\n\n    if (stylesheet && stylesheet.onReset) {\n      stylesheet.onReset(resetIds);\n    }\n    _initializedStylesheetResets = true;\n  }\n\n  let index = _global[CURRENT_ID_PROPERTY]++;\n\n  return (prefix === undefined ? DEFAULT_ID_STRING : prefix) + index;\n}\n\n/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\nexport function resetIds(counter: number = 0): void {\n  _global[CURRENT_ID_PROPERTY] = counter;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}