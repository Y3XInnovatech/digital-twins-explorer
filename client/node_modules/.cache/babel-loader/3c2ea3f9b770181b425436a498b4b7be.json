{"ast":null,"code":"import { extendComponent } from './extendComponent';\n/**\n * Generates a function to be attached to a React component, which can be called\n * as a replacement to RAF. In-flight async calls will be auto canceled if the component\n * is unmounting before the async code is executed, preventing bugs where code\n * accesses things within the component after being unmounted.\n */\nexport var safeRequestAnimationFrame = function (component) {\n  var activeTimeouts;\n  return function (cb) {\n    if (!activeTimeouts) {\n      activeTimeouts = new Set();\n      extendComponent(component, {\n        componentWillUnmount: function () {\n          activeTimeouts.forEach(function (id) {\n            return cancelAnimationFrame(id);\n          });\n        }\n      });\n    }\n    var timeoutId = requestAnimationFrame(function () {\n      activeTimeouts.delete(timeoutId);\n      cb();\n    });\n    activeTimeouts.add(timeoutId);\n  };\n};","map":{"version":3,"sources":["safeRequestAnimationFrame.ts"],"names":[],"mappings":"AACA,SAAS,eAAe,QAAQ,mBAAmB;AAEnD;;;;;AAKG;AACH,OAAO,IAAM,yBAAyB,GAAG,SAAA,CAAC,SAA0B,EAAA;EAClE,IAAI,cAA2B;EAE/B,OAAO,UAAC,EAAY,EAAA;IAClB,IAAI,CAAC,cAAc,EAAE;MACnB,cAAc,GAAG,IAAI,GAAG,CAAA,CAAU;MAElC,eAAe,CAAC,SAAS,EAAE;QACzB,oBAAoB,EAAE,SAAA,CAAA,EAAA;UACpB,cAAc,CAAC,OAAO,CAAC,UAAC,EAAU,EAAA;YAAK,OAAA,oBAAoB,CAAC,EAAE,CAAC;UAAxB,CAAwB,CAAC;QAClE;OACD,CAAC;IACH;IAED,IAAM,SAAS,GAAG,qBAAqB,CAAC,YAAA;MACtC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC;MAChC,EAAE,CAAA,CAAE;IACN,CAAC,CAAC;IAEF,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC;EAC/B,CAAC;AACH,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { extendComponent } from './extendComponent';\r\n\r\n/**\r\n * Generates a function to be attached to a React component, which can be called\r\n * as a replacement to RAF. In-flight async calls will be auto canceled if the component\r\n * is unmounting before the async code is executed, preventing bugs where code\r\n * accesses things within the component after being unmounted.\r\n */\r\nexport const safeRequestAnimationFrame = (component: React.Component): ((cb: Function) => void) => {\r\n  let activeTimeouts: Set<number>;\r\n\r\n  return (cb: Function) => {\r\n    if (!activeTimeouts) {\r\n      activeTimeouts = new Set<number>();\r\n\r\n      extendComponent(component, {\r\n        componentWillUnmount: () => {\r\n          activeTimeouts.forEach((id: number) => cancelAnimationFrame(id));\r\n        },\r\n      });\r\n    }\r\n\r\n    const timeoutId = requestAnimationFrame(() => {\r\n      activeTimeouts.delete(timeoutId);\r\n      cb();\r\n    });\r\n\r\n    activeTimeouts.add(timeoutId);\r\n  };\r\n};\r\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}