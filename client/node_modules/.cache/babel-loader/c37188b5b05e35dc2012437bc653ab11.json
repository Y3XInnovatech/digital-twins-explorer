{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warnDeprecations, initializeComponentRef, classNamesFunction, css, format, getId, divProperties, getNativeProps } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { RatingSize } from './Rating.types';\nvar getClassNames = classNamesFunction();\nvar RatingStar = function (props) {\n  var icon = props.icon || 'FavoriteStarFill';\n  return React.createElement(\"div\", {\n    className: props.classNames.ratingStar,\n    key: props.id\n  }, React.createElement(Icon, {\n    className: props.classNames.ratingStarBack,\n    iconName: icon\n  }), !props.disabled && React.createElement(Icon, {\n    className: props.classNames.ratingStarFront,\n    iconName: icon,\n    style: {\n      width: props.fillPercentage + '%'\n    }\n  }));\n};\nvar RatingBase = /** @class */function (_super) {\n  __extends(RatingBase, _super);\n  function RatingBase(props) {\n    var _this = _super.call(this, props) || this;\n    initializeComponentRef(_this);\n    warnDeprecations('Rating', props, {\n      onChanged: 'onChange'\n    });\n    _this._id = getId('Rating');\n    _this._min = _this.props.allowZeroStars ? 0 : 1;\n    /* eslint-disable deprecation/deprecation */\n    if (_this.props.min !== undefined && _this.props.min !== 1) {\n      _this._min = _this.props.min;\n    }\n    /* eslint-enable deprecation/deprecation */\n    _this._labelId = getId('RatingLabel');\n    _this.state = {\n      rating: _this._getInitialValue(props)\n    };\n    return _this;\n  }\n  RatingBase.prototype.render = function () {\n    var _a, _b, _c;\n    var _d = this.props,\n      disabled = _d.disabled,\n      getAriaLabel = _d.getAriaLabel,\n      styles = _d.styles,\n      max = _d.max,\n      readOnly = _d.readOnly,\n      size = _d.size,\n      theme = _d.theme,\n      _e = _d.icon,\n      icon = _e === void 0 ? 'FavoriteStarFill' : _e,\n      _f = _d.unselectedIcon,\n      unselectedIcon = _f === void 0 ? 'FavoriteStar' : _f,\n      onRenderStar = _d.onRenderStar;\n    var id = this._id;\n    var stars = [];\n    var starIds = [];\n    var rating = this._getRating();\n    var divProps = getNativeProps(this.props, divProperties);\n    this._classNames = getClassNames(styles, {\n      disabled: disabled,\n      readOnly: readOnly,\n      theme: theme\n    });\n    var renderStar = function (starProps, renderer) {\n      return renderer ? renderer(starProps) : React.createElement(RatingStar, __assign({\n        key: starProps.starNum + 'rating'\n      }, starProps));\n    };\n    for (var i = this._min; i <= max; i++) {\n      if (i !== 0) {\n        var fillPercentage = this._getFillingPercentage(i);\n        var ratingStarProps = {\n          fillPercentage: fillPercentage,\n          disabled: disabled,\n          classNames: this._classNames,\n          icon: fillPercentage > 0 ? icon : unselectedIcon,\n          starNum: i\n        };\n        starIds.push(this._getStarId(i - 1));\n        stars.push(React.createElement(\"button\", __assign({\n          className: css(this._classNames.ratingButton, (_a = {}, _a[this._classNames.ratingStarIsLarge] = size === RatingSize.Large, _a[this._classNames.ratingStarIsSmall] = size !== RatingSize.Large, _a)),\n          id: starIds[i - 1],\n          key: i\n        }, i === Math.ceil(rating) ? {\n          'data-is-current': true\n        } : {}, {\n          onFocus: this._onFocus.bind(this, i),\n          onClick: this._onFocus.bind(this, i),\n          disabled: disabled || readOnly ? true : false,\n          role: \"presentation\",\n          type: \"button\"\n        }), this._getLabel(i), renderStar(ratingStarProps, onRenderStar)));\n      }\n    }\n    var ariaLabel = getAriaLabel ? getAriaLabel(rating ? rating : 0, max) : undefined;\n    // When in read-only mode, we allow focus (per ARIA standards) and set up ARIA attributes to indicate element\n    // is read-only. https://www.w3.org/TR/wai-aria-1.1/#aria-readonly\n    var readOnlyProps = readOnly ? {\n      allowFocusRoot: true,\n      disabled: true,\n      'aria-label': ariaLabel,\n      'aria-readonly': true,\n      'data-is-focusable': true,\n      tabIndex: 0\n    } : undefined;\n    return React.createElement(\"div\", __assign({\n      className: css('ms-Rating-star', this._classNames.root, (_b = {}, _b[this._classNames.rootIsLarge] = size === RatingSize.Large, _b[this._classNames.rootIsSmall] = size !== RatingSize.Large, _b)),\n      \"aria-label\": !readOnly ? ariaLabel : '',\n      id: id\n    }, divProps), React.createElement(FocusZone, __assign({\n      direction: FocusZoneDirection.horizontal,\n      className: css(this._classNames.ratingFocusZone, (_c = {}, _c[this._classNames.rootIsLarge] = size === RatingSize.Large, _c[this._classNames.rootIsSmall] = size !== RatingSize.Large, _c)),\n      defaultActiveElement: rating ? starIds[Math.ceil(rating) - 1] && '#' + starIds[Math.ceil(rating) - 1] : undefined\n    }, readOnlyProps), stars));\n  };\n  RatingBase.prototype._getStarId = function (index) {\n    return this._id + '-star-' + index;\n  };\n  RatingBase.prototype._onFocus = function (value, ev) {\n    if (Math.ceil(this.state.rating) !== value) {\n      this.setState({\n        rating: value\n      });\n      // eslint-disable-next-line deprecation/deprecation\n      var _a = this.props,\n        onChange = _a.onChange,\n        onChanged = _a.onChanged;\n      if (onChange) {\n        onChange(ev, value);\n      }\n      if (onChanged) {\n        onChanged(value);\n      }\n    }\n  };\n  RatingBase.prototype._getLabel = function (rating) {\n    var text = this.props.ariaLabelFormat || '';\n    return React.createElement(\"span\", {\n      id: this._labelId + \"-\" + rating,\n      className: this._classNames.labelText\n    }, format(text, rating, this.props.max));\n  };\n  RatingBase.prototype._getInitialValue = function (props) {\n    if (typeof props.rating === 'undefined') {\n      return this._min;\n    }\n    if (props.rating === null) {\n      return undefined;\n    }\n    return this._getClampedRating(props.rating);\n  };\n  RatingBase.prototype._getClampedRating = function (rating) {\n    return Math.min(Math.max(rating, this._min), this.props.max);\n  };\n  RatingBase.prototype._getRating = function () {\n    if (this.props.rating !== undefined) {\n      return this._getClampedRating(this.props.rating);\n    }\n    if (this.state.rating !== undefined && this.state.rating !== null) {\n      return this._getClampedRating(this.state.rating);\n    }\n    return 0;\n  };\n  RatingBase.prototype._getFillingPercentage = function (starPosition) {\n    var rating = this._getRating();\n    var ceilValue = Math.ceil(rating);\n    var fillPercentage = 100;\n    if (starPosition === rating) {\n      fillPercentage = 100;\n    } else if (starPosition === ceilValue) {\n      fillPercentage = 100 * (rating % 1);\n    } else if (starPosition > ceilValue) {\n      fillPercentage = 0;\n    }\n    return fillPercentage;\n  };\n  RatingBase.defaultProps = {\n    min: 1,\n    max: 5\n  };\n  return RatingBase;\n}(React.Component);\nexport { RatingBase };","map":{"version":3,"sources":["components/Rating/Rating.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  warnDeprecations,\n  initializeComponentRef,\n  classNamesFunction,\n  css,\n  format,\n  getId,\n  divProperties,\n  getNativeProps,\n} from '../../Utilities';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection, IFocusZoneProps } from '../../FocusZone';\nimport { IRatingProps, RatingSize, IRatingStyleProps, IRatingStyles, IRatingStarProps } from './Rating.types';\n\nconst getClassNames = classNamesFunction<IRatingStyleProps, IRatingStyles>();\n\nexport interface IRatingState {\n  rating: number | null | undefined;\n}\n\nconst RatingStar = (props: IRatingStarProps) => {\n  const icon = props.icon || 'FavoriteStarFill';\n  return (\n    <div className={props.classNames.ratingStar} key={props.id}>\n      <Icon className={props.classNames.ratingStarBack} iconName={icon} />\n      {!props.disabled && (\n        <Icon\n          className={props.classNames.ratingStarFront}\n          iconName={icon}\n          style={{ width: props.fillPercentage + '%' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport class RatingBase extends React.Component<IRatingProps, IRatingState> {\n  public static defaultProps: IRatingProps = {\n    min: 1,\n    max: 5,\n  };\n  private _id: string;\n  private _min: number;\n  private _labelId: string;\n  private _classNames: IProcessedStyleSet<IRatingStyles>;\n\n  constructor(props: IRatingProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    warnDeprecations('Rating', props, { onChanged: 'onChange' });\n\n    this._id = getId('Rating');\n    this._min = this.props.allowZeroStars ? 0 : 1;\n    /* eslint-disable deprecation/deprecation */\n    if (this.props.min !== undefined && this.props.min !== 1) {\n      this._min = this.props.min;\n    }\n    /* eslint-enable deprecation/deprecation */\n    this._labelId = getId('RatingLabel');\n\n    this.state = {\n      rating: this._getInitialValue(props),\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      disabled,\n      getAriaLabel,\n      styles,\n      max,\n      readOnly,\n      size,\n      theme,\n      icon = 'FavoriteStarFill',\n      unselectedIcon = 'FavoriteStar',\n      onRenderStar,\n    } = this.props;\n\n    const id = this._id;\n    const stars = [];\n    const starIds = [];\n    const rating = this._getRating();\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    this._classNames = getClassNames(styles!, {\n      disabled,\n      readOnly,\n      theme: theme!,\n    });\n\n    const renderStar = (starProps: IRatingStarProps, renderer?: IRatingProps['onRenderStar']) =>\n      renderer ? renderer(starProps) : <RatingStar key={starProps.starNum + 'rating'} {...starProps} />;\n\n    for (let i = this._min as number; i <= (max as number); i++) {\n      if (i !== 0) {\n        const fillPercentage = this._getFillingPercentage(i);\n        const ratingStarProps: IRatingStarProps = {\n          fillPercentage,\n          disabled,\n          classNames: this._classNames,\n          icon: fillPercentage > 0 ? icon : unselectedIcon,\n          starNum: i,\n        };\n\n        starIds.push(this._getStarId(i - 1));\n\n        stars.push(\n          <button\n            className={css(this._classNames.ratingButton, {\n              [this._classNames.ratingStarIsLarge]: size === RatingSize.Large,\n              [this._classNames.ratingStarIsSmall]: size !== RatingSize.Large,\n            })}\n            id={starIds[i - 1]}\n            key={i}\n            {...(i === Math.ceil(rating) ? { 'data-is-current': true } : {})}\n            onFocus={this._onFocus.bind(this, i)}\n            onClick={this._onFocus.bind(this, i)} // For Safari & Firefox on OSX\n            disabled={disabled || readOnly ? true : false}\n            role=\"presentation\"\n            type=\"button\"\n          >\n            {this._getLabel(i)}\n            {renderStar(ratingStarProps, onRenderStar)}\n          </button>,\n        );\n      }\n    }\n\n    const ariaLabel = getAriaLabel ? getAriaLabel(rating ? rating : 0, max as number) : undefined;\n\n    // When in read-only mode, we allow focus (per ARIA standards) and set up ARIA attributes to indicate element\n    // is read-only. https://www.w3.org/TR/wai-aria-1.1/#aria-readonly\n    const readOnlyProps: IFocusZoneProps | undefined = readOnly\n      ? ({\n          allowFocusRoot: true,\n          disabled: true,\n          'aria-label': ariaLabel,\n          'aria-readonly': true,\n          'data-is-focusable': true,\n          tabIndex: 0,\n        } as IFocusZoneProps)\n      : undefined;\n\n    return (\n      <div\n        className={css('ms-Rating-star', this._classNames.root, {\n          [this._classNames.rootIsLarge]: size === RatingSize.Large,\n          [this._classNames.rootIsSmall]: size !== RatingSize.Large,\n        })}\n        aria-label={!readOnly ? ariaLabel : ''}\n        id={id}\n        {...divProps}\n      >\n        <FocusZone\n          direction={FocusZoneDirection.horizontal}\n          className={css(this._classNames.ratingFocusZone, {\n            [this._classNames.rootIsLarge]: size === RatingSize.Large,\n            [this._classNames.rootIsSmall]: size !== RatingSize.Large,\n          })}\n          defaultActiveElement={\n            rating ? starIds[Math.ceil(rating) - 1] && '#' + starIds[Math.ceil(rating) - 1] : undefined\n          }\n          {...readOnlyProps}\n        >\n          {stars}\n        </FocusZone>\n      </div>\n    );\n  }\n\n  private _getStarId(index: number): string {\n    return this._id + '-star-' + index;\n  }\n\n  private _onFocus(value: number, ev: React.FocusEvent<HTMLElement>): void {\n    if (Math.ceil(this.state.rating!) !== value) {\n      this.setState({\n        rating: value,\n      } as IRatingState);\n\n      // eslint-disable-next-line deprecation/deprecation\n      const { onChange, onChanged } = this.props;\n\n      if (onChange) {\n        onChange(ev, value);\n      }\n\n      if (onChanged) {\n        onChanged(value);\n      }\n    }\n  }\n\n  private _getLabel(rating: number): JSX.Element {\n    const text = this.props.ariaLabelFormat || '';\n\n    return (\n      <span id={`${this._labelId}-${rating}`} className={this._classNames.labelText}>\n        {format(text, rating, this.props.max)}\n      </span>\n    );\n  }\n\n  private _getInitialValue(props: IRatingProps): number | undefined {\n    if (typeof props.rating === 'undefined') {\n      return this._min;\n    }\n\n    if (props.rating === null) {\n      return undefined;\n    }\n\n    return this._getClampedRating(props.rating);\n  }\n\n  private _getClampedRating(rating: number): number {\n    return Math.min(Math.max(rating, this._min as number), this.props.max as number);\n  }\n\n  private _getRating(): number {\n    if (this.props.rating !== undefined) {\n      return this._getClampedRating(this.props.rating);\n    }\n    if (this.state.rating !== undefined && this.state.rating !== null) {\n      return this._getClampedRating(this.state.rating);\n    }\n    return 0;\n  }\n\n  private _getFillingPercentage(starPosition: number): number {\n    const rating = this._getRating();\n    const ceilValue = Math.ceil(rating as number);\n    let fillPercentage = 100;\n\n    if (starPosition === rating) {\n      fillPercentage = 100;\n    } else if (starPosition === ceilValue) {\n      fillPercentage = 100 * ((rating as number) % 1);\n    } else if (starPosition > ceilValue) {\n      fillPercentage = 0;\n    }\n    return fillPercentage;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}