{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nclass StorageService {\n  constructor() {\n    this.getLocalStoragePrimitive = name => localStorage.getItem(name);\n    this.getLocalStorageObject = name => {\n      try {\n        return JSON.parse(localStorage.getItem(name));\n      } catch (e) {\n        if (name === \"configuration\") {\n          return {\n            appAdtUrl: \"\"\n          };\n        }\n        return {};\n      }\n    };\n    this.setLocalStorageObject = (name, dataObj) => localStorage.setItem(name, JSON.stringify(dataObj));\n    this.removeLocalStorageObject = name => localStorage.removeItem(name);\n  }\n  /* In the event that a local storage key is malformed (not JSON parsable),\n  we gracefully fallback. If it is for configuration,\n  we provide an appAdtUrl that is empty string to avoid object destructuring\n  issues on code blocks dependent on that specific structure */\n}\nexport const storageService = new StorageService();","map":{"version":3,"names":["StorageService","constructor","getLocalStoragePrimitive","name","localStorage","getItem","getLocalStorageObject","JSON","parse","e","appAdtUrl","setLocalStorageObject","dataObj","setItem","stringify","removeLocalStorageObject","removeItem","storageService"],"sources":["/home/saharsh/digital-twins-explorer/client/src/services/StorageService.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nclass StorageService {\n\n  getLocalStoragePrimitive = name => localStorage.getItem(name)\n\n  /* In the event that a local storage key is malformed (not JSON parsable),\n  we gracefully fallback. If it is for configuration,\n  we provide an appAdtUrl that is empty string to avoid object destructuring\n  issues on code blocks dependent on that specific structure */\n  getLocalStorageObject = name => {\n    try {\n      return JSON.parse(localStorage.getItem(name));\n    } catch (e) {\n      if (name === \"configuration\") {\n        return {appAdtUrl: \"\"};\n      }\n      return {};\n    }\n  }\n\n  setLocalStorageObject = (name, dataObj) => localStorage.setItem(name, JSON.stringify(dataObj))\n\n  removeLocalStorageObject = name => localStorage.removeItem(name)\n\n}\n\nexport const storageService = new StorageService();\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,cAAc,CAAC;EAAAC,YAAA;IAAA,KAEnBC,wBAAwB,GAAGC,IAAI,IAAIC,YAAY,CAACC,OAAO,CAACF,IAAI,CAAC;IAAA,KAM7DG,qBAAqB,GAAGH,IAAI,IAAI;MAC9B,IAAI;QACF,OAAOI,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAACF,IAAI,CAAC,CAAC;MAC/C,CAAC,CAAC,OAAOM,CAAC,EAAE;QACV,IAAIN,IAAI,KAAK,eAAe,EAAE;UAC5B,OAAO;YAACO,SAAS,EAAE;UAAE,CAAC;QACxB;QACA,OAAO,CAAC,CAAC;MACX;IACF,CAAC;IAAA,KAEDC,qBAAqB,GAAG,CAACR,IAAI,EAAES,OAAO,KAAKR,YAAY,CAACS,OAAO,CAACV,IAAI,EAAEI,IAAI,CAACO,SAAS,CAACF,OAAO,CAAC,CAAC;IAAA,KAE9FG,wBAAwB,GAAGZ,IAAI,IAAIC,YAAY,CAACY,UAAU,CAACb,IAAI,CAAC;EAAA;EAjBhE;AACF;AACA;AACA;AAgBA;AAEA,OAAO,MAAMc,cAAc,GAAG,IAAIjB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}