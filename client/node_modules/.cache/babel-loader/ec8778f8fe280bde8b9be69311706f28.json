{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { apiService } from \"./ApiService\";\nimport { BatchService } from \"./BatchService\";\nimport { DataModel } from \"./models/DataModel\";\nclass ExportService {\n  async save(query) {\n    const data = new DataModel();\n    data.digitalTwinsGraph.digitalTwins = (await apiService.queryTwins(query)).map(x => {\n      x.$metadata = {\n        $model: x.$metadata.$model\n      };\n      return x;\n    });\n    const bs = new BatchService({\n      items: data.digitalTwinsGraph.digitalTwins,\n      action: (twin, resolve) => {\n        apiService.queryRelationshipsPaged([twin.$dtId], rels => {\n          const presentRels = rels.filter(x => data.digitalTwinsGraph.digitalTwins.some(y => y.$dtId === x.$sourceId) && data.digitalTwinsGraph.digitalTwins.some(y => y.$dtId === x.$targetId));\n          presentRels.forEach(x => data.digitalTwinsGraph.relationships.push(x));\n          if (!rels.nextLink) {\n            resolve();\n          }\n        });\n      }\n    });\n    await bs.run();\n\n    // eslint-disable-next-line require-atomic-updates\n    data.digitalTwinsModels = (await apiService.queryModels()).map(x => x.model);\n    return data;\n  }\n}\nexport const exportService = new ExportService();","map":{"version":3,"names":["apiService","BatchService","DataModel","ExportService","save","query","data","digitalTwinsGraph","digitalTwins","queryTwins","map","x","$metadata","$model","bs","items","action","twin","resolve","queryRelationshipsPaged","$dtId","rels","presentRels","filter","some","y","$sourceId","$targetId","forEach","relationships","push","nextLink","run","digitalTwinsModels","queryModels","model","exportService"],"sources":["/home/saharsh/digital-twins-explorer/client/src/services/ExportService.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { apiService } from \"./ApiService\";\nimport { BatchService } from \"./BatchService\";\nimport { DataModel } from \"./models/DataModel\";\n\nclass ExportService {\n\n  async save(query) {\n    const data = new DataModel();\n    data.digitalTwinsGraph.digitalTwins = (await apiService.queryTwins(query))\n      .map(x => {\n        x.$metadata = { $model: x.$metadata.$model };\n        return x;\n      });\n\n    const bs = new BatchService({\n      items: data.digitalTwinsGraph.digitalTwins,\n      action: (twin, resolve) => {\n        apiService.queryRelationshipsPaged([ twin.$dtId ], rels => {\n          const presentRels = rels.filter(x =>\n            data.digitalTwinsGraph.digitalTwins.some(y => y.$dtId === x.$sourceId)\n              && data.digitalTwinsGraph.digitalTwins.some(y => y.$dtId === x.$targetId));\n          presentRels.forEach(x => data.digitalTwinsGraph.relationships.push(x));\n          if (!rels.nextLink) {\n            resolve();\n          }\n        });\n      }\n    });\n    await bs.run();\n\n    // eslint-disable-next-line require-atomic-updates\n    data.digitalTwinsModels = (await apiService.queryModels()).map(x => x.model);\n    return data;\n  }\n\n}\n\nexport const exportService = new ExportService();\n"],"mappings":"AAAA;AACA;;AAEA,SAASA,UAAU,QAAQ,cAAc;AACzC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,MAAMC,aAAa,CAAC;EAElB,MAAMC,IAAIA,CAACC,KAAK,EAAE;IAChB,MAAMC,IAAI,GAAG,IAAIJ,SAAS,CAAC,CAAC;IAC5BI,IAAI,CAACC,iBAAiB,CAACC,YAAY,GAAG,CAAC,MAAMR,UAAU,CAACS,UAAU,CAACJ,KAAK,CAAC,EACtEK,GAAG,CAACC,CAAC,IAAI;MACRA,CAAC,CAACC,SAAS,GAAG;QAAEC,MAAM,EAAEF,CAAC,CAACC,SAAS,CAACC;MAAO,CAAC;MAC5C,OAAOF,CAAC;IACV,CAAC,CAAC;IAEJ,MAAMG,EAAE,GAAG,IAAIb,YAAY,CAAC;MAC1Bc,KAAK,EAAET,IAAI,CAACC,iBAAiB,CAACC,YAAY;MAC1CQ,MAAM,EAAEA,CAACC,IAAI,EAAEC,OAAO,KAAK;QACzBlB,UAAU,CAACmB,uBAAuB,CAAC,CAAEF,IAAI,CAACG,KAAK,CAAE,EAAEC,IAAI,IAAI;UACzD,MAAMC,WAAW,GAAGD,IAAI,CAACE,MAAM,CAACZ,CAAC,IAC/BL,IAAI,CAACC,iBAAiB,CAACC,YAAY,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,KAAK,KAAKT,CAAC,CAACe,SAAS,CAAC,IACjEpB,IAAI,CAACC,iBAAiB,CAACC,YAAY,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,KAAK,KAAKT,CAAC,CAACgB,SAAS,CAAC,CAAC;UAC9EL,WAAW,CAACM,OAAO,CAACjB,CAAC,IAAIL,IAAI,CAACC,iBAAiB,CAACsB,aAAa,CAACC,IAAI,CAACnB,CAAC,CAAC,CAAC;UACtE,IAAI,CAACU,IAAI,CAACU,QAAQ,EAAE;YAClBb,OAAO,CAAC,CAAC;UACX;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IACF,MAAMJ,EAAE,CAACkB,GAAG,CAAC,CAAC;;IAEd;IACA1B,IAAI,CAAC2B,kBAAkB,GAAG,CAAC,MAAMjC,UAAU,CAACkC,WAAW,CAAC,CAAC,EAAExB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACwB,KAAK,CAAC;IAC5E,OAAO7B,IAAI;EACb;AAEF;AAEA,OAAO,MAAM8B,aAAa,GAAG,IAAIjC,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}