{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, getNativeProps, divProperties, enableBodyScroll, disableBodyScroll, initializeComponentRef } from '../../Utilities';\nvar getClassNames = classNamesFunction();\nvar OverlayBase = /** @class */function (_super) {\n  __extends(OverlayBase, _super);\n  function OverlayBase(props) {\n    var _this = _super.call(this, props) || this;\n    initializeComponentRef(_this);\n    var _a = _this.props.allowTouchBodyScroll,\n      allowTouchBodyScroll = _a === void 0 ? false : _a;\n    _this._allowTouchBodyScroll = allowTouchBodyScroll;\n    return _this;\n  }\n  OverlayBase.prototype.componentDidMount = function () {\n    !this._allowTouchBodyScroll && disableBodyScroll();\n  };\n  OverlayBase.prototype.componentWillUnmount = function () {\n    !this._allowTouchBodyScroll && enableBodyScroll();\n  };\n  OverlayBase.prototype.render = function () {\n    var _a = this.props,\n      isDark = _a.isDarkThemed,\n      className = _a.className,\n      theme = _a.theme,\n      styles = _a.styles;\n    var divProps = getNativeProps(this.props, divProperties);\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      isDark: isDark\n    });\n    return React.createElement(\"div\", __assign({}, divProps, {\n      className: classNames.root\n    }));\n  };\n  return OverlayBase;\n}(React.Component);\nexport { OverlayBase };","map":{"version":3,"sources":["components/Overlay/Overlay.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SACE,kBAAkB,EAClB,cAAc,EACd,aAAa,EACb,gBAAgB,EAChB,iBAAiB,EACjB,sBAAsB,QACjB,iBAAiB;AAGxB,IAAM,aAAa,GAAG,kBAAkB,CAAA,CAAsC;AAE9E,IAAA,WAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAiC,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;EAG/B,SAAA,WAAA,CAAY,KAAoB,EAAA;IAAhC,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IAAA,IAAA;IAEZ,sBAAsB,CAAC,KAAI,CAAC;IACpB,IAAA,EAAA,GAAA,KAAA,CAAA,KAAA,CAAA,oBAA4B;MAA5B,oBAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,EAA4B;IACpC,KAAI,CAAC,qBAAqB,GAAG,oBAAoB;;EACnD;EAEO,WAAA,CAAA,SAAA,CAAA,iBAAiB,GAAxB,YAAA;IACE,CAAC,IAAI,CAAC,qBAAqB,IAAI,iBAAiB,CAAA,CAAE;EACpD,CAAC;EAEM,WAAA,CAAA,SAAA,CAAA,oBAAoB,GAA3B,YAAA;IACE,CAAC,IAAI,CAAC,qBAAqB,IAAI,gBAAgB,CAAA,CAAE;EACnD,CAAC;EAEM,WAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACQ,IAAA,EAAA,GAAA,IAAA,CAAA,KAA+D;MAA7D,MAAA,GAAA,EAAA,CAAA,YAAoB;MAAE,SAAA,GAAA,EAAA,CAAA,SAAS;MAAE,KAAA,GAAA,EAAA,CAAA,KAAK;MAAE,MAAA,GAAA,EAAA,CAAA,MAAqB;IAErE,IAAM,QAAQ,GAAG,cAAc,CAAuC,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC;IAEhG,IAAM,UAAU,GAAG,aAAa,CAAC,MAAO,EAAE;MACxC,KAAK,EAAE,KAAM;MACb,SAAS,EAAA,SAAA;MACT,MAAM,EAAA;KACP,CAAC;IAEF,OAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,CAAA,CAAA,EAAS,QAAQ,EAAA;MAAE,SAAS,EAAE,UAAU,CAAC;IAAI,CAAA,CAAA,CAAI;EAC1D,CAAC;EACH,OAAA,WAAC;AAAD,CAAC,CAhCgC,KAAK,CAAC,SAAS,CAAA","sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  getNativeProps,\n  divProperties,\n  enableBodyScroll,\n  disableBodyScroll,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { IOverlayProps, IOverlayStyleProps, IOverlayStyles } from './Overlay.types';\n\nconst getClassNames = classNamesFunction<IOverlayStyleProps, IOverlayStyles>();\n\nexport class OverlayBase extends React.Component<IOverlayProps, {}> {\n  private _allowTouchBodyScroll: boolean;\n\n  constructor(props: IOverlayProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    const { allowTouchBodyScroll = false } = this.props;\n    this._allowTouchBodyScroll = allowTouchBodyScroll;\n  }\n\n  public componentDidMount(): void {\n    !this._allowTouchBodyScroll && disableBodyScroll();\n  }\n\n  public componentWillUnmount(): void {\n    !this._allowTouchBodyScroll && enableBodyScroll();\n  }\n\n  public render(): JSX.Element {\n    const { isDarkThemed: isDark, className, theme, styles } = this.props;\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isDark,\n    });\n\n    return <div {...divProps} className={classNames.root} />;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}