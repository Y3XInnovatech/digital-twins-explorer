{"ast":null,"code":"import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\nexport function elementContains(parent, child, allowVirtualParents) {\n  if (allowVirtualParents === void 0) {\n    allowVirtualParents = true;\n  }\n  var isContained = false;\n  if (parent && child) {\n    if (allowVirtualParents) {\n      if (parent === child) {\n        isContained = true;\n      } else {\n        isContained = false;\n        while (child) {\n          var nextParent = getParent(child);\n          if (nextParent === parent) {\n            isContained = true;\n            break;\n          }\n          child = nextParent;\n        }\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n  return isContained;\n}","map":{"version":3,"sources":["elementContains.ts"],"names":[],"mappings":"AAAA,SAAS,SAAS,QAAQ,aAAa;AACvC;;;;;;AAMG;AACH,OAAM,SAAU,eAAe,CAC7B,MAA0B,EAC1B,KAAyB,EACzB,mBAAmC,EAAA;EAAnC,IAAA,mBAAA,KAAA,KAAA,CAAA,EAAA;IAAA,mBAAA,GAAA,IAAmC;EAAA;EAEnC,IAAI,WAAW,GAAG,KAAK;EAEvB,IAAI,MAAM,IAAI,KAAK,EAAE;IACnB,IAAI,mBAAmB,EAAE;MACvB,IAAI,MAAM,KAAK,KAAK,EAAE;QACpB,WAAW,GAAG,IAAI;OACnB,MAAM;QACL,WAAW,GAAG,KAAK;QAEnB,OAAO,KAAK,EAAE;UACZ,IAAM,UAAU,GAAuB,SAAS,CAAC,KAAK,CAAC;UAEvD,IAAI,UAAU,KAAK,MAAM,EAAE;YACzB,WAAW,GAAG,IAAI;YAClB;UACD;UAED,KAAK,GAAG,UAAU;QACnB;MACF;KACF,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;MAC1B,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;IACrC;EACF;EAED,OAAO,WAAW;AACpB","sourcesContent":["import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\nexport function elementContains(\n  parent: HTMLElement | null,\n  child: HTMLElement | null,\n  allowVirtualParents: boolean = true,\n): boolean {\n  let isContained = false;\n\n  if (parent && child) {\n    if (allowVirtualParents) {\n      if (parent === child) {\n        isContained = true;\n      } else {\n        isContained = false;\n\n        while (child) {\n          const nextParent: HTMLElement | null = getParent(child);\n\n          if (nextParent === parent) {\n            isContained = true;\n            break;\n          }\n\n          child = nextParent;\n        }\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n\n  return isContained;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}