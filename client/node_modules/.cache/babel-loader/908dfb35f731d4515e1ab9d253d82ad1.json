{"ast":null,"code":"import { mergeStyles } from '../MergeStyles';\n/**\n * Builds a class names object from a given map.\n *\n * @param styles - Map of unprocessed styles.\n * @returns Map of property name to class name.\n */\nexport function buildClassMap(styles) {\n  var classes = {};\n  var _loop_1 = function (styleName) {\n    if (styles.hasOwnProperty(styleName)) {\n      var className_1;\n      Object.defineProperty(classes, styleName, {\n        get: function () {\n          if (className_1 === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            className_1 = mergeStyles(styles[styleName]).toString();\n          }\n          return className_1;\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n  for (var styleName in styles) {\n    _loop_1(styleName);\n  }\n  return classes;\n}","map":{"version":3,"sources":["utilities/buildClassMap.ts"],"names":[],"mappings":"AAAA,SAAS,WAAW,QAAQ,gBAAgB;AAE5C;;;;;AAKG;AACH,OAAM,SAAU,aAAa,CAAmB,MAAS,EAAA;EACvD,IAAI,OAAO,GAAkC,CAAA,CAAE;0BAEtC,SAAS,EAAA;IAChB,IAAI,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;MACpC,IAAI,WAAiB;MAErB,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,SAAS,EAAE;QACxC,GAAG,EAAE,SAAA,CAAA,EAAA;UACH,IAAI,WAAS,KAAK,SAAS,EAAE;YAC3B;YACA,WAAS,GAAG,WAAW,CAAC,MAAM,CAAC,SAAS,CAAQ,CAAC,CAAC,QAAQ,CAAA,CAAE;UAC7D;UACD,OAAO,WAAS;QAClB,CAAC;QACD,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE;OACf,CAAC;IACH;;EAfH,KAAK,IAAI,SAAS,IAAI,MAAM,EAAA;YAAnB,SAAS,CAAA;EAgBjB;EAED,OAAO,OAAO;AAChB","sourcesContent":["import { mergeStyles } from '../MergeStyles';\n\n/**\n * Builds a class names object from a given map.\n *\n * @param styles - Map of unprocessed styles.\n * @returns Map of property name to class name.\n */\nexport function buildClassMap<T extends Object>(styles: T): { [key in keyof T]?: string } {\n  let classes: { [key in keyof T]?: string } = {};\n\n  for (let styleName in styles) {\n    if (styles.hasOwnProperty(styleName)) {\n      let className: string;\n\n      Object.defineProperty(classes, styleName, {\n        get: (): string => {\n          if (className === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            className = mergeStyles(styles[styleName] as any).toString();\n          }\n          return className;\n        },\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  return classes;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}