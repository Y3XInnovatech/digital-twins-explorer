{"ast":null,"code":"import { merge } from '@uifabric/utilities';\nimport { getSemanticColors } from './utilities/makeSemanticColors';\n/**\n * Merge a partial/full theme into a full theme and returns a merged full theme.\n */\nexport function mergeThemes(theme, partialTheme) {\n  if (partialTheme === void 0) {\n    partialTheme = {};\n  }\n  var _a, _b, _c, _d;\n  var mergedTheme = merge({}, theme, partialTheme, {\n    semanticColors: getSemanticColors(partialTheme.palette, partialTheme.effects, partialTheme.semanticColors, partialTheme.isInverted === undefined ? theme.isInverted : partialTheme.isInverted)\n  });\n  if (((_a = partialTheme.palette) === null || _a === void 0 ? void 0 : _a.themePrimary) && !((_b = partialTheme.palette) === null || _b === void 0 ? void 0 : _b.accent)) {\n    mergedTheme.palette.accent = partialTheme.palette.themePrimary;\n  }\n  if (partialTheme.defaultFontStyle) {\n    for (var _i = 0, _e = Object.keys(mergedTheme.fonts); _i < _e.length; _i++) {\n      var fontStyle = _e[_i];\n      mergedTheme.fonts[fontStyle] = merge(mergedTheme.fonts[fontStyle], partialTheme.defaultFontStyle, (_d = (_c = partialTheme) === null || _c === void 0 ? void 0 : _c.fonts) === null || _d === void 0 ? void 0 : _d[fontStyle]);\n    }\n  }\n  if (partialTheme.stylesheets) {\n    mergedTheme.stylesheets = (theme.stylesheets || []).concat(partialTheme.stylesheets);\n  }\n  return mergedTheme;\n}","map":{"version":3,"sources":["mergeThemes.ts"],"names":[],"mappings":"AAAA,SAAS,KAAK,QAAQ,qBAAqB;AAE3C,SAAS,iBAAiB,QAAQ,gCAAgC;AAElE;;AAEG;AACH,OAAM,SAAU,WAAW,CAAC,KAAY,EAAE,YAA+B,EAAA;EAA/B,IAAA,YAAA,KAAA,KAAA,CAAA,EAAA;IAAA,YAAA,GAAA,CAAA,CAA+B;EAAA;;EACvE,IAAM,WAAW,GAAG,KAAK,CAAuB,CAAA,CAAE,EAAE,KAAK,EAAE,YAAY,EAAE;IACvE,cAAc,EAAE,iBAAiB,CAC/B,YAAY,CAAC,OAAO,EACpB,YAAY,CAAC,OAAO,EACpB,YAAY,CAAC,cAAc,EAC3B,YAAY,CAAC,UAAU,KAAK,SAAS,GAAG,KAAK,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU;GAErF,CAAU;EAEX,IAAI,CAAA,CAAA,EAAA,GAAA,YAAY,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,KAAI,EAAA,CAAA,EAAA,GAAC,YAAY,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CAAA,EAAE;IACvE,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY;EAC/D;EAED,IAAI,YAAY,CAAC,gBAAgB,EAAE;IACjC,KAAwB,IAAA,EAAA,GAAA,CAAuD,EAAvD,EAAA,GAAA,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAA0B,EAAvD,EAAA,GAAA,EAAA,CAAA,MAAuD,EAAvD,EAAA,EAAuD,EAAE;MAA5E,IAAM,SAAS,GAAA,EAAA,CAAA,EAAA,CAAA;MAClB,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,KAAK,CAClC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,EAC5B,YAAY,CAAC,gBAAgB,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAC7B,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,SAAS,CAAA,CAChC;IACF;EACF;EAED,IAAI,YAAY,CAAC,WAAW,EAAE;IAC5B,WAAW,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,EAAE,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;EACrF;EAED,OAAO,WAAW;AACpB","sourcesContent":["import { merge } from '@uifabric/utilities';\nimport { IFontStyles, PartialTheme, Theme } from './types/index';\nimport { getSemanticColors } from './utilities/makeSemanticColors';\n\n/**\n * Merge a partial/full theme into a full theme and returns a merged full theme.\n */\nexport function mergeThemes(theme: Theme, partialTheme: PartialTheme = {}): Theme {\n  const mergedTheme = merge<Theme | PartialTheme>({}, theme, partialTheme, {\n    semanticColors: getSemanticColors(\n      partialTheme.palette,\n      partialTheme.effects,\n      partialTheme.semanticColors,\n      partialTheme.isInverted === undefined ? theme.isInverted : partialTheme.isInverted,\n    ),\n  }) as Theme;\n\n  if (partialTheme.palette?.themePrimary && !partialTheme.palette?.accent) {\n    mergedTheme.palette.accent = partialTheme.palette.themePrimary;\n  }\n\n  if (partialTheme.defaultFontStyle) {\n    for (const fontStyle of Object.keys(mergedTheme.fonts) as (keyof IFontStyles)[]) {\n      mergedTheme.fonts[fontStyle] = merge(\n        mergedTheme.fonts[fontStyle],\n        partialTheme.defaultFontStyle,\n        partialTheme?.fonts?.[fontStyle],\n      );\n    }\n  }\n\n  if (partialTheme.stylesheets) {\n    mergedTheme.stylesheets = (theme.stylesheets || []).concat(partialTheme.stylesheets);\n  }\n\n  return mergedTheme;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}