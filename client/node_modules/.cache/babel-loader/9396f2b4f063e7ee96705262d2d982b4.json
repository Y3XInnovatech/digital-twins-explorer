{"ast":null,"code":"/**\n * Sets the current RTL value.\n */\nexport function setRTL(isRTL) {\n  if (_rtl !== isRTL) {\n    _rtl = isRTL;\n  }\n}\n/**\n * Gets the current RTL value.\n */\nexport function getRTL() {\n  if (_rtl === undefined) {\n    _rtl = typeof document !== 'undefined' && !!document.documentElement && document.documentElement.getAttribute('dir') === 'rtl';\n  }\n  return _rtl;\n}\n// This has been split into 2 lines because it was working in Fabric due to the code being transpiled to es5, so this\n// was converted to var while not working in Fluent that uses babel to transpile the code to be es6-like. Splitting the\n// logic into two lines, however, allows it to work in both scenarios.\nvar _rtl;\n_rtl = getRTL();\nexport function getStyleOptions() {\n  return {\n    rtl: getRTL()\n  };\n}","map":{"version":3,"sources":["StyleOptionsState.ts"],"names":[],"mappings":"AAEA;;AAEG;AACH,OAAM,SAAU,MAAM,CAAC,KAAc,EAAA;EACnC,IAAI,IAAI,KAAK,KAAK,EAAE;IAClB,IAAI,GAAG,KAAK;EACb;AACH;AAEA;;AAEG;AACH,OAAM,SAAU,MAAM,CAAA,EAAA;EACpB,IAAI,IAAI,KAAK,SAAS,EAAE;IACtB,IAAI,GACF,OAAO,QAAQ,KAAK,WAAW,IAC/B,CAAC,CAAC,QAAQ,CAAC,eAAe,IAC1B,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK;EACzD;EACD,OAAO,IAAI;AACb;AAEA;AACA;AACA;AACA,IAAI,IAAa;AACjB,IAAI,GAAG,MAAM,CAAA,CAAE;AAEf,OAAM,SAAU,eAAe,CAAA,EAAA;EAC7B,OAAO;IACL,GAAG,EAAE,MAAM,CAAA;GACZ;AACH","sourcesContent":["import { IStyleOptions } from './IStyleOptions';\n\n/**\n * Sets the current RTL value.\n */\nexport function setRTL(isRTL: boolean): void {\n  if (_rtl !== isRTL) {\n    _rtl = isRTL;\n  }\n}\n\n/**\n * Gets the current RTL value.\n */\nexport function getRTL(): boolean {\n  if (_rtl === undefined) {\n    _rtl =\n      typeof document !== 'undefined' &&\n      !!document.documentElement &&\n      document.documentElement.getAttribute('dir') === 'rtl';\n  }\n  return _rtl;\n}\n\n// This has been split into 2 lines because it was working in Fabric due to the code being transpiled to es5, so this\n// was converted to var while not working in Fluent that uses babel to transpile the code to be es6-like. Splitting the\n// logic into two lines, however, allows it to work in both scenarios.\nlet _rtl: boolean;\n_rtl = getRTL();\n\nexport function getStyleOptions(): IStyleOptions {\n  return {\n    rtl: getRTL(),\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}