{"ast":null,"code":"var _jsxFileName = \"/home/saharsh/digital-twins-explorer/client/src/components/ModelGraphViewerComponent/ModelGraphViewerComponent.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React from \"react\";\nimport { ModelGraphViewerCytoscapeComponent } from \"./ModelGraphViewerCytoscapeComponent/ModelGraphViewerCytoscapeComponent\";\nimport LoaderComponent from \"../LoaderComponent/LoaderComponent\";\nimport { eventService } from \"../../services/EventService\";\nimport \"./ModelGraphViewerComponent.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ModelGraphViewerComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialize = async () => {\n      if (!this.isInitialized) {\n        this.isInitialized = true;\n\n        // Subscribe to various events\n        eventService.subscribeModelsUpdate(() => {\n          this.retrieveModels();\n        });\n        eventService.subscribeClearModelsData(() => {\n          if (this.cyRef.current) {\n            this.cyRef.current.clearNodes();\n          }\n          this.setState({\n            isLoading: false\n          });\n        });\n        eventService.subscribeSelectModel(item => {\n          if (item) {\n            this.highlightNodes(item.key);\n          } else {\n            this.clearHighlights();\n          }\n        });\n\n        // Fetch and display models\n        await this.retrieveModels();\n      }\n    };\n    this.highlightNodes = nodeId => {\n      if (this.cyRef.current) {\n        this.cyRef.current.clearHighlighting();\n        this.cyRef.current.highlightNodes([{\n          id: nodeId\n        }], true);\n      }\n    };\n    this.clearHighlights = () => {\n      if (this.cyRef.current) {\n        this.cyRef.current.clearHighlighting();\n      }\n    };\n    this.state = {\n      isLoading: false,\n      layout: \"d3Force\",\n      progress: 0 // Track progress for loading\n    };\n    this.cyRef = /*#__PURE__*/React.createRef();\n    this.isInitialized = false; // Track if the component is initialized\n  }\n\n  // Method to initialize the component\n\n  // Method to fetch models and update the graph\n  async retrieveModels() {\n    this.setState({\n      isLoading: true,\n      progress: 0\n    });\n    try {\n      console.log(\"Starting retrieveModels...\");\n\n      // Fetch models from the API\n      const response = await fetch(\"/models\");\n      if (!response.ok) {\n        throw new Error(`Error fetching models: ${response.statusText}`);\n      }\n      const models = await response.json();\n      console.log(\"Fetched models:\", models);\n      if (!Array.isArray(models)) {\n        throw new Error(\"Invalid models data: Expected an array.\");\n      }\n\n      // Transform models into nodes and relationships\n      const nodes = models.map(model => ({\n        id: model.id,\n        label: model.name || model.id\n      }));\n      const relationships = models.flatMap(model => {\n        var _model$relationships;\n        return ((_model$relationships = model.relationships) === null || _model$relationships === void 0 ? void 0 : _model$relationships.map(rel => ({\n          sourceId: model.id,\n          targetId: rel.target,\n          relationshipName: rel.name\n        }))) || [];\n      });\n      console.log(\"Nodes:\", nodes);\n      console.log(\"Relationships:\", relationships);\n\n      // Update the graph\n      if (this.cyRef.current) {\n        this.cyRef.current.clearNodes(); // Clear existing nodes\n        // eslint-disable-next-line line-comment-position\n        this.cyRef.current.addNodes(nodes); // Add new nodes\n        // eslint-disable-next-line line-comment-position, no-inline-comments\n        this.cyRef.current.addRelationships(relationships, \"related\"); // Add relationships\n        // eslint-disable-next-line line-comment-position, no-inline-comments\n        await this.cyRef.current.doLayout(); // Perform layout\n      }\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\"Error in retrieveModels:\", err);\n      eventService.publishError(err);\n    } finally {\n      // eslint-disable-next-line react/no-unused-state\n      this.setState({\n        isLoading: false,\n        progress: 100\n      });\n      // eslint-disable-next-line no-console\n      console.log(\"Finished retrieveModels.\");\n    }\n  }\n\n  // Highlight nodes (e.g., on selection)\n\n  // Clear highlights\n\n  // Lifecycle method\n  async componentDidMount() {\n    // Initialize the component\n    await this.initialize();\n  }\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mgv-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-graph\",\n        children: /*#__PURE__*/_jsxDEV(ModelGraphViewerCytoscapeComponent, {\n          ref: this.cyRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoaderComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ModelGraphViewerComponent;","map":{"version":3,"names":["React","ModelGraphViewerCytoscapeComponent","LoaderComponent","eventService","jsxDEV","_jsxDEV","ModelGraphViewerComponent","Component","constructor","props","initialize","isInitialized","subscribeModelsUpdate","retrieveModels","subscribeClearModelsData","cyRef","current","clearNodes","setState","isLoading","subscribeSelectModel","item","highlightNodes","key","clearHighlights","nodeId","clearHighlighting","id","state","layout","progress","createRef","console","log","response","fetch","ok","Error","statusText","models","json","Array","isArray","nodes","map","model","label","name","relationships","flatMap","_model$relationships","rel","sourceId","targetId","target","relationshipName","addNodes","addRelationships","doLayout","err","error","publishError","componentDidMount","render","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/saharsh/digital-twins-explorer/client/src/components/ModelGraphViewerComponent/ModelGraphViewerComponent.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React from \"react\";\n\nimport { ModelGraphViewerCytoscapeComponent } from \"./ModelGraphViewerCytoscapeComponent/ModelGraphViewerCytoscapeComponent\";\nimport LoaderComponent from \"../LoaderComponent/LoaderComponent\";\nimport { eventService } from \"../../services/EventService\";\n\nimport \"./ModelGraphViewerComponent.scss\";\n\nclass ModelGraphViewerComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      layout: \"d3Force\",\n      progress: 0, // Track progress for loading\n    };\n    this.cyRef = React.createRef();\n    this.isInitialized = false; // Track if the component is initialized\n  }\n\n  // Method to initialize the component\n  initialize = async () => {\n    if (!this.isInitialized) {\n      this.isInitialized = true;\n\n      // Subscribe to various events\n      eventService.subscribeModelsUpdate(() => {\n        this.retrieveModels();\n      });\n\n      eventService.subscribeClearModelsData(() => {\n        if (this.cyRef.current) {\n          this.cyRef.current.clearNodes();\n        }\n        this.setState({ isLoading: false });\n      });\n\n      eventService.subscribeSelectModel((item) => {\n        if (item) {\n          this.highlightNodes(item.key);\n        } else {\n          this.clearHighlights();\n        }\n      });\n\n      // Fetch and display models\n      await this.retrieveModels();\n    }\n  };\n\n  // Method to fetch models and update the graph\n  async retrieveModels() {\n    this.setState({ isLoading: true, progress: 0 });\n\n    try {\n      console.log(\"Starting retrieveModels...\");\n\n      // Fetch models from the API\n      const response = await fetch(\"/models\");\n      if (!response.ok) {\n        throw new Error(`Error fetching models: ${response.statusText}`);\n      }\n\n      const models = await response.json();\n      console.log(\"Fetched models:\", models);\n\n      if (!Array.isArray(models)) {\n        throw new Error(\"Invalid models data: Expected an array.\");\n      }\n\n      // Transform models into nodes and relationships\n      const nodes = models.map((model) => ({\n        id: model.id,\n        label: model.name || model.id,\n      }));\n\n      const relationships = models.flatMap(\n        (model) =>\n          model.relationships?.map((rel) => ({\n            sourceId: model.id,\n            targetId: rel.target,\n            relationshipName: rel.name,\n          })) || []\n      );\n\n      console.log(\"Nodes:\", nodes);\n      console.log(\"Relationships:\", relationships);\n\n      // Update the graph\n      if (this.cyRef.current) {\n        this.cyRef.current.clearNodes(); // Clear existing nodes\n        // eslint-disable-next-line line-comment-position\n        this.cyRef.current.addNodes(nodes); // Add new nodes\n        // eslint-disable-next-line line-comment-position, no-inline-comments\n        this.cyRef.current.addRelationships(relationships, \"related\"); // Add relationships\n        // eslint-disable-next-line line-comment-position, no-inline-comments\n        await this.cyRef.current.doLayout(); // Perform layout\n      }\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\"Error in retrieveModels:\", err);\n      eventService.publishError(err);\n    } finally {\n      // eslint-disable-next-line react/no-unused-state\n      this.setState({ isLoading: false, progress: 100 });\n      // eslint-disable-next-line no-console\n      console.log(\"Finished retrieveModels.\");\n    }\n  }\n\n  // Highlight nodes (e.g., on selection)\n  highlightNodes = nodeId => {\n    if (this.cyRef.current) {\n      this.cyRef.current.clearHighlighting();\n      this.cyRef.current.highlightNodes([ { id: nodeId } ], true);\n    }\n  };\n\n  // Clear highlights\n  clearHighlights = () => {\n    if (this.cyRef.current) {\n      this.cyRef.current.clearHighlighting();\n    }\n  };\n\n  // Lifecycle method\n  async componentDidMount() {\n    // Initialize the component\n    await this.initialize();\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    return (\n      <div className=\"mgv-wrap\">\n        <div className=\"model-graph\">\n          {/* Pass the ref to the Cytoscape component */}\n          <ModelGraphViewerCytoscapeComponent ref={this.cyRef} />\n        </div>\n        {isLoading && <LoaderComponent />}\n      </div>\n    );\n  }\n\n}\n\nexport default ModelGraphViewerComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}