{"ast":null,"code":"import { Stylesheet } from './Stylesheet';\n/**\n * Separates the classes and style objects. Any classes that are pre-registered\n * args are auto expanded into objects.\n */\nexport function extractStyleParts() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var classes = [];\n  var objects = [];\n  var stylesheet = Stylesheet.getInstance();\n  function _processArgs(argsList) {\n    for (var _i = 0, argsList_1 = argsList; _i < argsList_1.length; _i++) {\n      var arg = argsList_1[_i];\n      if (arg) {\n        if (typeof arg === 'string') {\n          if (arg.indexOf(' ') >= 0) {\n            _processArgs(arg.split(' '));\n          } else {\n            var translatedArgs = stylesheet.argsFromClassName(arg);\n            if (translatedArgs) {\n              _processArgs(translatedArgs);\n            } else {\n              // Avoid adding the same class twice.\n              if (classes.indexOf(arg) === -1) {\n                classes.push(arg);\n              }\n            }\n          }\n        } else if (Array.isArray(arg)) {\n          _processArgs(arg);\n        } else if (typeof arg === 'object') {\n          objects.push(arg);\n        }\n      }\n    }\n  }\n  _processArgs(args);\n  return {\n    classes: classes,\n    objects: objects\n  };\n}","map":{"version":3,"sources":["extractStyleParts.ts"],"names":[],"mappings":"AACA,SAAS,UAAU,QAAQ,cAAc;AAEzC;;;AAGG;AACH,OAAM,SAAU,iBAAiB,CAAA,EAAA;EAC/B,IAAA,IAAA,GAAA,EAAA;OAAA,IAAA,EAAA,GAAA,CAAyD,EAAzD,EAAA,GAAA,SAAA,CAAA,MAAyD,EAAzD,EAAA,EAAyD,EAAA;IAAzD,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;EAEA,IAAM,OAAO,GAAa,EAAE;EAC5B,IAAM,OAAO,GAAS,EAAE;EACxB,IAAM,UAAU,GAAG,UAAU,CAAC,WAAW,CAAA,CAAE;EAE3C,SAAS,YAAY,CAAC,QAA+B,EAAA;IACnD,KAAkB,IAAA,EAAA,GAAA,CAAQ,EAAR,UAAA,GAAA,QAAQ,EAAR,EAAA,GAAA,UAAA,CAAA,MAAQ,EAAR,EAAA,EAAQ,EAAE;MAAvB,IAAM,GAAG,GAAA,UAAA,CAAA,EAAA,CAAA;MACZ,IAAI,GAAG,EAAE;QACP,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;UAC3B,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACzB,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;WAC7B,MAAM;YACL,IAAM,cAAc,GAAG,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC;YAExD,IAAI,cAAc,EAAE;cAClB,YAAY,CAAC,cAAc,CAAC;aAC7B,MAAM;cACL;cACA,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC/B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;cAClB;YACF;UACF;SACF,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;UAC7B,YAAY,CAAC,GAAG,CAAC;SAClB,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;UAClC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;QAClB;MACF;IACF;EACH;EAEA,YAAY,CAAC,IAAI,CAAC;EAElB,OAAO;IACL,OAAO,EAAA,OAAA;IACP,OAAO,EAAA;GACR;AACH","sourcesContent":["import { IStyle, IStyleBaseArray } from './IStyle';\nimport { Stylesheet } from './Stylesheet';\n\n/**\n * Separates the classes and style objects. Any classes that are pre-registered\n * args are auto expanded into objects.\n */\nexport function extractStyleParts(\n  ...args: (IStyle | IStyle[] | false | null | undefined)[]\n): { classes: string[]; objects: IStyleBaseArray } {\n  const classes: string[] = [];\n  const objects: {}[] = [];\n  const stylesheet = Stylesheet.getInstance();\n\n  function _processArgs(argsList: (IStyle | IStyle[])[]): void {\n    for (const arg of argsList) {\n      if (arg) {\n        if (typeof arg === 'string') {\n          if (arg.indexOf(' ') >= 0) {\n            _processArgs(arg.split(' '));\n          } else {\n            const translatedArgs = stylesheet.argsFromClassName(arg);\n\n            if (translatedArgs) {\n              _processArgs(translatedArgs);\n            } else {\n              // Avoid adding the same class twice.\n              if (classes.indexOf(arg) === -1) {\n                classes.push(arg);\n              }\n            }\n          }\n        } else if (Array.isArray(arg)) {\n          _processArgs(arg);\n        } else if (typeof arg === 'object') {\n          objects.push(arg);\n        }\n      }\n    }\n  }\n\n  _processArgs(args);\n\n  return {\n    classes,\n    objects,\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}