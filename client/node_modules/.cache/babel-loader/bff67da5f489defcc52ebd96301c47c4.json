{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked'\n};\nvar labelWrapperLineHeight = 15;\nvar labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\nvar iconSize = 32;\nvar choiceFieldSize = 20;\nvar choiceFieldTransitionDuration = '200ms';\nvar choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nvar radioButtonSpacing = 3;\nvar radioButtonInnerSize = 5;\nfunction getChoiceGroupFocusStyle(focusBorderColor, hasIconOrImage) {\n  var _a, _b;\n  return ['is-inFocus', {\n    selectors: (_a = {}, _a[\".\" + IsFocusVisibleClassName + \" &\"] = {\n      position: 'relative',\n      outline: 'transparent',\n      selectors: {\n        '::-moz-focus-inner': {\n          border: 0\n        },\n        ':after': {\n          content: '\"\"',\n          top: -2,\n          right: -2,\n          bottom: -2,\n          left: -2,\n          pointerEvents: 'none',\n          border: \"1px solid \" + focusBorderColor,\n          position: 'absolute',\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            borderColor: 'WindowText',\n            borderWidth: hasIconOrImage ? 1 : 2\n          }, _b)\n        }\n      }\n    }, _a)\n  }];\n}\nfunction getImageWrapperStyle(isSelectedImageWrapper, className, checked) {\n  return [className, {\n    paddingBottom: 2,\n    transitionProperty: 'opacity',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: 'ease',\n    selectors: {\n      '.ms-Image': {\n        display: 'inline-block',\n        borderStyle: 'none'\n      }\n    }\n  }, (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && ['is-hidden', {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    opacity: 0\n  }]];\n}\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e;\n  var theme = props.theme,\n    hasIcon = props.hasIcon,\n    hasImage = props.hasImage,\n    checked = props.checked,\n    disabled = props.disabled,\n    imageIsLarge = props.imageIsLarge,\n    focused = props.focused,\n    imageSize = props.imageSize;\n  var palette = theme.palette,\n    semanticColors = theme.semanticColors,\n    fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n  var circleBorderColor = palette.neutralPrimary;\n  var circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  var circleCheckedBorderColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  var circleCheckedHoveredBorderColor = palette.themeDark;\n  var circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  var circleBackgroundColor = semanticColors.bodyBackground;\n  var dotUncheckedHoveredColor = palette.neutralSecondary;\n  var dotCheckedColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  var dotCheckedHoveredColor = palette.themeDark;\n  var dotDisabledColor = semanticColors.disabledBodySubtext;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n  var labelHoverFocusColor = palette.neutralDark;\n  var focusBorderColor = semanticColors.focusBorder;\n  var iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  var iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  var iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  var iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n  var fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor\n      },\n      ':after': [!hasIcon && !hasImage && !checked && {\n        content: '\"\"',\n        transitionProperty: 'background-color',\n        left: 5,\n        top: 5,\n        width: 10,\n        height: 10,\n        backgroundColor: dotUncheckedHoveredColor\n      }, checked && {\n        borderColor: dotCheckedHoveredColor\n      }]\n    }\n  };\n  var enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor\n      }\n    }\n  };\n  var circleAreaProperties = [{\n    content: '\"\"',\n    display: 'inline-block',\n    backgroundColor: circleBackgroundColor,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: circleBorderColor,\n    width: choiceFieldSize,\n    height: choiceFieldSize,\n    fontWeight: 'normal',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    boxSizing: 'border-box',\n    transitionProperty: 'border-color',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: choiceFieldTransitionTiming,\n    borderRadius: '50%'\n  }, disabled && {\n    borderColor: circleDisabledBorderColor,\n    selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n      borderColor: 'GrayText',\n      background: 'Window'\n    }, getHighContrastNoAdjustStyle()), _a)\n  }, checked && {\n    borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n    selectors: (_b = {}, _b[HighContrastSelector] = {\n      borderColor: 'Highlight',\n      background: 'Window',\n      forcedColorAdjust: 'none'\n    }, _b)\n  }, (hasIcon || hasImage) && {\n    top: radioButtonSpacing,\n    right: radioButtonSpacing,\n    left: 'auto',\n    opacity: checked ? 1 : 0\n  }];\n  var dotAreaProperties = [{\n    content: '\"\"',\n    width: 0,\n    height: 0,\n    borderRadius: '50%',\n    position: 'absolute',\n    left: choiceFieldSize / 2,\n    right: 0,\n    transitionProperty: 'border-width',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: choiceFieldTransitionTiming,\n    boxSizing: 'border-box'\n  }, checked && {\n    borderWidth: 5,\n    borderStyle: 'solid',\n    borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n    left: 5,\n    top: 5,\n    width: 10,\n    height: 10,\n    selectors: (_c = {}, _c[HighContrastSelector] = {\n      borderColor: 'Highlight',\n      forcedColorAdjust: 'none'\n    }, _c)\n  }, checked && (hasIcon || hasImage) && {\n    top: radioButtonSpacing + radioButtonInnerSize,\n    right: radioButtonSpacing + radioButtonInnerSize,\n    left: 'auto'\n  }];\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      display: 'flex',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      color: semanticColors.bodyText,\n      minHeight: 26,\n      border: 'none',\n      position: 'relative',\n      marginTop: 8,\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          display: 'inline-block'\n        }\n      }\n    }, !hasIcon && !hasImage && {\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          paddingLeft: '26px'\n        }\n      }\n    }, hasImage && 'ms-ChoiceField--image', hasIcon && 'ms-ChoiceField--icon', (hasIcon || hasImage) && {\n      display: 'inline-flex',\n      fontSize: 0,\n      margin: '0 4px 4px 0',\n      paddingLeft: 0,\n      backgroundColor: iconOrImageChoiceBackgroundColor,\n      height: '100%'\n    }],\n    choiceFieldWrapper: [classNames.choiceFieldWrapper, focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage)],\n    // The hidden input\n    input: [classNames.input, {\n      position: 'absolute',\n      opacity: 0,\n      top: 0,\n      right: 0,\n      width: '100%',\n      height: '100%',\n      margin: 0\n    }, disabled && 'is-disabled'],\n    field: [classNames.field, checked && classNames.checked, {\n      display: 'inline-block',\n      cursor: 'pointer',\n      marginTop: 0,\n      position: 'relative',\n      verticalAlign: 'top',\n      userSelect: 'none',\n      minHeight: 20,\n      selectors: {\n        ':hover': !disabled && fieldHoverOrFocusProperties,\n        ':focus': !disabled && fieldHoverOrFocusProperties,\n        // The circle\n        ':before': circleAreaProperties,\n        // The dot\n        ':after': dotAreaProperties\n      }\n    }, hasIcon && 'ms-ChoiceField--icon', hasImage && 'ms-ChoiceField-field--image', (hasIcon || hasImage) && {\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      paddingTop: 22,\n      margin: 0,\n      textAlign: 'center',\n      transitionProperty: 'all',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      border: '1px solid transparent',\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column'\n    }, checked && {\n      borderColor: iconOrImageChoiceBorderCheckedColor\n    }, (hasIcon || hasImage) && !disabled && {\n      selectors: {\n        ':hover': enabledFieldWithImageHoverOrFocusProperties,\n        ':focus': enabledFieldWithImageHoverOrFocusProperties\n      }\n    }, disabled && {\n      cursor: 'default',\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          color: semanticColors.disabledBodyText,\n          selectors: (_d = {}, _d[HighContrastSelector] = __assign({\n            color: 'GrayText'\n          }, getHighContrastNoAdjustStyle()), _d)\n        }\n      }\n    }, checked && disabled && {\n      borderColor: iconOrImageChoiceBackgroundColor\n    }],\n    innerField: [classNames.innerField, hasImage && {\n      // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n      height: imageSize.height,\n      width: imageSize.width\n    }, (hasIcon || hasImage) && {\n      position: 'relative',\n      display: 'inline-block',\n      paddingLeft: 30,\n      paddingRight: 30\n    }, (hasIcon || hasImage) && imageIsLarge && {\n      paddingLeft: 24,\n      paddingRight: 24\n    }, (hasIcon || hasImage) && disabled && {\n      opacity: 0.25,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        color: 'GrayText',\n        opacity: 1\n      }, _e)\n    }],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [classNames.iconWrapper, {\n      fontSize: iconSize,\n      lineHeight: iconSize,\n      height: iconSize\n    }],\n    labelWrapper: [classNames.labelWrapper, fonts.medium, (hasIcon || hasImage) && {\n      display: 'block',\n      position: 'relative',\n      margin: '4px 8px 2px 8px',\n      height: labelWrapperHeight,\n      lineHeight: labelWrapperLineHeight,\n      // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n      maxWidth: imageSize.width * 2,\n      overflow: 'hidden',\n      whiteSpace: 'pre-wrap'\n    }]\n  };\n};","map":{"version":3,"sources":["components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { HighContrastSelector, IStyle, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nimport { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles } from './ChoiceGroupOption.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked',\n};\n\nconst labelWrapperLineHeight = 15;\nconst labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\nconst iconSize = 32;\nconst choiceFieldSize = 20;\nconst choiceFieldTransitionDuration = '200ms';\nconst choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nconst radioButtonSpacing = 3;\nconst radioButtonInnerSize = 5;\n\nfunction getChoiceGroupFocusStyle(focusBorderColor: string, hasIconOrImage?: boolean): IStyle {\n  return [\n    'is-inFocus',\n    {\n      selectors: {\n        [`.${IsFocusVisibleClassName} &`]: {\n          position: 'relative',\n          outline: 'transparent',\n          selectors: {\n            '::-moz-focus-inner': {\n              border: 0,\n            },\n            ':after': {\n              content: '\"\"',\n              top: -2,\n              right: -2,\n              bottom: -2,\n              left: -2,\n              pointerEvents: 'none',\n              border: `1px solid ${focusBorderColor}`,\n              position: 'absolute',\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'WindowText',\n                  borderWidth: hasIconOrImage ? 1 : 2,\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  ];\n}\n\nfunction getImageWrapperStyle(isSelectedImageWrapper: boolean, className?: string, checked?: boolean): IStyle {\n  return [\n    className,\n    {\n      paddingBottom: 2,\n      transitionProperty: 'opacity',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      selectors: {\n        '.ms-Image': {\n          display: 'inline-block',\n          borderStyle: 'none',\n        },\n      },\n    },\n    (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && [\n      'is-hidden',\n      {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        opacity: 0,\n      },\n    ],\n  ];\n}\n\nexport const getStyles = (props: IChoiceGroupOptionStyleProps): IChoiceGroupOptionStyles => {\n  const { theme, hasIcon, hasImage, checked, disabled, imageIsLarge, focused, imageSize } = props;\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n  const circleBorderColor = palette.neutralPrimary;\n  const circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  const circleCheckedBorderColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const circleCheckedHoveredBorderColor = palette.themeDark;\n  const circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  const circleBackgroundColor = semanticColors.bodyBackground;\n  const dotUncheckedHoveredColor = palette.neutralSecondary;\n  const dotCheckedColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const dotCheckedHoveredColor = palette.themeDark;\n  const dotDisabledColor = semanticColors.disabledBodySubtext;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n  const labelHoverFocusColor = palette.neutralDark;\n  const focusBorderColor = semanticColors.focusBorder;\n  const iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  const iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  const iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n\n  const fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor,\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n      ':after': [\n        !hasIcon &&\n          !hasImage &&\n          !checked && {\n            content: '\"\"',\n            transitionProperty: 'background-color',\n            left: 5,\n            top: 5,\n            width: 10,\n            height: 10,\n            backgroundColor: dotUncheckedHoveredColor,\n          },\n        checked && {\n          borderColor: dotCheckedHoveredColor,\n        },\n      ],\n    },\n  };\n\n  const enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n    },\n  };\n\n  const circleAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      display: 'inline-block',\n      backgroundColor: circleBackgroundColor,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: circleBorderColor,\n      width: choiceFieldSize,\n      height: choiceFieldSize,\n      fontWeight: 'normal',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      boxSizing: 'border-box',\n      transitionProperty: 'border-color',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      borderRadius: '50%',\n    },\n    disabled && {\n      borderColor: circleDisabledBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'GrayText',\n          background: 'Window',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n    checked && {\n      borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          background: 'Window',\n          forcedColorAdjust: 'none',\n        },\n      },\n    },\n    (hasIcon || hasImage) && {\n      top: radioButtonSpacing,\n      right: radioButtonSpacing,\n      left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      opacity: checked ? 1 : 0,\n    },\n  ];\n\n  const dotAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      width: 0,\n      height: 0,\n      borderRadius: '50%',\n      position: 'absolute',\n      left: choiceFieldSize / 2,\n      right: 0,\n      transitionProperty: 'border-width',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      boxSizing: 'border-box',\n    },\n    checked && {\n      borderWidth: 5,\n      borderStyle: 'solid',\n      borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n      left: 5,\n      top: 5,\n      width: 10,\n      height: 10,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          forcedColorAdjust: 'none',\n        },\n      },\n    },\n    checked &&\n      (hasIcon || hasImage) && {\n        top: radioButtonSpacing + radioButtonInnerSize,\n        right: radioButtonSpacing + radioButtonInnerSize,\n        left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        display: 'flex',\n        alignItems: 'center',\n        boxSizing: 'border-box',\n        color: semanticColors.bodyText,\n        minHeight: 26,\n        border: 'none',\n        position: 'relative',\n        marginTop: 8,\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            display: 'inline-block',\n          },\n        },\n      },\n      !hasIcon &&\n        !hasImage && {\n          selectors: {\n            '.ms-ChoiceFieldLabel': {\n              paddingLeft: '26px',\n            },\n          },\n        },\n      hasImage && 'ms-ChoiceField--image',\n      hasIcon && 'ms-ChoiceField--icon',\n      (hasIcon || hasImage) && {\n        display: 'inline-flex',\n        fontSize: 0,\n        margin: '0 4px 4px 0',\n        paddingLeft: 0,\n        backgroundColor: iconOrImageChoiceBackgroundColor,\n        height: '100%',\n      },\n    ],\n    choiceFieldWrapper: [\n      classNames.choiceFieldWrapper,\n      focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage),\n    ],\n    // The hidden input\n    input: [\n      classNames.input,\n      {\n        position: 'absolute',\n        opacity: 0,\n        top: 0,\n        right: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n      },\n      disabled && 'is-disabled',\n    ],\n    field: [\n      classNames.field,\n      checked && classNames.checked,\n      {\n        display: 'inline-block',\n        cursor: 'pointer',\n        marginTop: 0,\n        position: 'relative',\n        verticalAlign: 'top',\n        userSelect: 'none',\n        minHeight: 20,\n        selectors: {\n          ':hover': !disabled && fieldHoverOrFocusProperties,\n          ':focus': !disabled && fieldHoverOrFocusProperties,\n\n          // The circle\n          ':before': circleAreaProperties,\n\n          // The dot\n          ':after': dotAreaProperties,\n        },\n      },\n      hasIcon && 'ms-ChoiceField--icon',\n      hasImage && 'ms-ChoiceField-field--image',\n      (hasIcon || hasImage) && {\n        boxSizing: 'content-box',\n        cursor: 'pointer',\n        paddingTop: 22,\n        margin: 0,\n        textAlign: 'center',\n        transitionProperty: 'all',\n        transitionDuration: choiceFieldTransitionDuration,\n        transitionTimingFunction: 'ease',\n        border: '1px solid transparent',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      checked && {\n        borderColor: iconOrImageChoiceBorderCheckedColor,\n      },\n      (hasIcon || hasImage) &&\n        !disabled && {\n          selectors: {\n            ':hover': enabledFieldWithImageHoverOrFocusProperties,\n            ':focus': enabledFieldWithImageHoverOrFocusProperties,\n          },\n        },\n      disabled && {\n        cursor: 'default',\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            color: semanticColors.disabledBodyText,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n                ...getHighContrastNoAdjustStyle(),\n              },\n            },\n          },\n        },\n      },\n      checked &&\n        disabled && {\n          borderColor: iconOrImageChoiceBackgroundColor,\n        },\n    ],\n    innerField: [\n      classNames.innerField,\n      hasImage && {\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        height: imageSize!.height,\n        width: imageSize!.width,\n      },\n      (hasIcon || hasImage) && {\n        position: 'relative',\n        display: 'inline-block',\n        paddingLeft: 30,\n        paddingRight: 30,\n      },\n      (hasIcon || hasImage) &&\n        imageIsLarge && {\n          paddingLeft: 24,\n          paddingRight: 24,\n        },\n      (hasIcon || hasImage) &&\n        disabled && {\n          opacity: 0.25,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'GrayText',\n              opacity: 1,\n            },\n          },\n        },\n    ],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [\n      classNames.iconWrapper,\n      {\n        fontSize: iconSize,\n        lineHeight: iconSize,\n        height: iconSize,\n      },\n    ],\n    labelWrapper: [\n      classNames.labelWrapper,\n      fonts.medium,\n      (hasIcon || hasImage) && {\n        display: 'block',\n        position: 'relative',\n        margin: '4px 8px 2px 8px',\n        height: labelWrapperHeight,\n        lineHeight: labelWrapperLineHeight,\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        maxWidth: imageSize!.width * 2,\n        overflow: 'hidden',\n        whiteSpace: 'pre-wrap',\n      },\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}