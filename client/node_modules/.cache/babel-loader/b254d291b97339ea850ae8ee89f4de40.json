{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { concatStyleSets, FontWeights, HighContrastSelector, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\nexport var getStyles = memoizeFunction(function (theme, customStyles, primary) {\n  var _a, _b, _c, _d, _e;\n  var fonts = theme.fonts,\n    palette = theme.palette;\n  var baseButtonStyles = getBaseButtonStyles(theme);\n  var splitButtonStyles = getSplitButtonStyles(theme);\n  var compoundButtonStyles = {\n    root: {\n      maxWidth: '280px',\n      minHeight: '72px',\n      height: 'auto',\n      padding: '16px 12px'\n    },\n    flexContainer: {\n      flexDirection: 'row',\n      alignItems: 'flex-start',\n      minWidth: '100%',\n      margin: ''\n    },\n    textContainer: {\n      textAlign: 'left'\n    },\n    icon: {\n      fontSize: '2em',\n      lineHeight: '1em',\n      height: '1em',\n      margin: '0px 8px 0px 0px',\n      flexBasis: '1em',\n      flexShrink: '0'\n    },\n    label: {\n      margin: '0 0 5px',\n      lineHeight: '100%',\n      fontWeight: FontWeights.semibold\n    },\n    description: [fonts.small, {\n      lineHeight: '100%'\n    }]\n  };\n  var standardCompoundTheme = {\n    description: {\n      color: palette.neutralSecondary\n    },\n    descriptionHovered: {\n      color: palette.neutralDark\n    },\n    descriptionPressed: {\n      color: 'inherit'\n    },\n    descriptionChecked: {\n      color: 'inherit'\n    },\n    descriptionDisabled: {\n      color: 'inherit'\n    }\n  };\n  var primaryCompoundTheme = {\n    description: {\n      color: palette.white,\n      selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n        backgroundColor: 'WindowText',\n        color: 'Window'\n      }, getHighContrastNoAdjustStyle()), _a)\n    },\n    descriptionHovered: {\n      color: palette.white,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        backgroundColor: 'Highlight',\n        color: 'Window'\n      }, _b)\n    },\n    descriptionPressed: {\n      color: 'inherit',\n      selectors: (_c = {}, _c[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _c)\n    },\n    descriptionChecked: {\n      color: 'inherit',\n      selectors: (_d = {}, _d[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _d)\n    },\n    descriptionDisabled: {\n      color: 'inherit',\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        color: 'inherit'\n      }, _e)\n    }\n  };\n  return concatStyleSets(baseButtonStyles, compoundButtonStyles, primary ? primaryStyles(theme) : standardStyles(theme), primary ? primaryCompoundTheme : standardCompoundTheme, splitButtonStyles, customStyles);\n});","map":{"version":3,"sources":["components/Button/CompoundButton/CompoundButton.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IButtonStyles } from '../Button.types';\nimport {\n  ITheme,\n  concatStyleSets,\n  FontWeights,\n  HighContrastSelector,\n  getHighContrastNoAdjustStyle,\n} from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const { fonts, palette } = theme;\n\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const compoundButtonStyles: IButtonStyles = {\n      root: {\n        maxWidth: '280px',\n        minHeight: '72px',\n        height: 'auto',\n        padding: '16px 12px',\n      },\n\n      flexContainer: {\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        minWidth: '100%',\n        margin: '',\n      },\n\n      textContainer: {\n        textAlign: 'left',\n      },\n\n      icon: {\n        fontSize: '2em',\n        lineHeight: '1em',\n        height: '1em',\n        margin: '0px 8px 0px 0px',\n        flexBasis: '1em',\n        flexShrink: '0',\n      },\n\n      label: {\n        margin: '0 0 5px',\n        lineHeight: '100%',\n        fontWeight: FontWeights.semibold,\n      },\n      description: [\n        fonts.small,\n        {\n          lineHeight: '100%',\n        },\n      ],\n    };\n\n    const standardCompoundTheme: IButtonStyles = {\n      description: {\n        color: palette.neutralSecondary,\n      },\n\n      descriptionHovered: {\n        color: palette.neutralDark,\n      },\n\n      descriptionPressed: {\n        color: 'inherit',\n      },\n\n      descriptionChecked: {\n        color: 'inherit',\n      },\n\n      descriptionDisabled: {\n        color: 'inherit',\n      },\n    };\n\n    const primaryCompoundTheme: IButtonStyles = {\n      description: {\n        color: palette.white,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n            color: 'Window',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      descriptionHovered: {\n        color: palette.white,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'Highlight',\n            color: 'Window',\n          },\n        },\n      },\n\n      descriptionPressed: {\n        color: 'inherit',\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'Window',\n            backgroundColor: 'WindowText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      descriptionChecked: {\n        color: 'inherit',\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'Window',\n            backgroundColor: 'WindowText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      descriptionDisabled: {\n        color: 'inherit',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'inherit',\n          },\n        },\n      },\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      compoundButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      primary ? primaryCompoundTheme : standardCompoundTheme,\n      splitButtonStyles,\n      customStyles,\n    )!;\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}