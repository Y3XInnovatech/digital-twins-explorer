{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { hsv2rgb } from './hsv2rgb';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n/**\n * Gets a color with the same hue as `color` and other components updated to match the given\n * saturation and value.\n *\n * Does not modify the original `color` and does not supply a default alpha value.\n */\nexport function updateSV(color, s, v) {\n  var _a = hsv2rgb(color.h, s, v),\n    r = _a.r,\n    g = _a.g,\n    b = _a.b;\n  var hex = rgb2hex(r, g, b);\n  return __assign(__assign({}, color), {\n    s: s,\n    v: v,\n    r: r,\n    g: g,\n    b: b,\n    hex: hex,\n    str: _rgbaOrHexString(r, g, b, color.a, hex)\n  });\n}","map":{"version":3,"sources":["utilities/color/updateSV.ts"],"names":[],"mappings":";AACA,SAAS,OAAO,QAAQ,WAAW;AACnC,SAAS,OAAO,QAAQ,WAAW;AACnC,SAAS,gBAAgB,QAAQ,oBAAoB;AAErD;;;;;AAKG;AACH,OAAM,SAAU,QAAQ,CAAC,KAAa,EAAE,CAAS,EAAE,CAAS,EAAA;EACpD,IAAA,EAAA,GAAA,OAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAoC;IAAlC,CAAA,GAAA,EAAA,CAAA,CAAC;IAAE,CAAA,GAAA,EAAA,CAAA,CAAC;IAAE,CAAA,GAAA,EAAA,CAAA,CAA4B;EAC1C,IAAM,GAAG,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE5B,OAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACK,KAAK,CAAA,EAAA;IACR,CAAC,EAAA,CAAA;IACD,CAAC,EAAA,CAAA;IACD,CAAC,EAAA,CAAA;IACD,CAAC,EAAA,CAAA;IACD,CAAC,EAAA,CAAA;IACD,GAAG,EAAA,GAAA;IACH,GAAG,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG;EAAC,CAAA,CAAA;AAEhD","sourcesContent":["import { IColor } from './interfaces';\nimport { hsv2rgb } from './hsv2rgb';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n\n/**\n * Gets a color with the same hue as `color` and other components updated to match the given\n * saturation and value.\n *\n * Does not modify the original `color` and does not supply a default alpha value.\n */\nexport function updateSV(color: IColor, s: number, v: number): IColor {\n  const { r, g, b } = hsv2rgb(color.h, s, v);\n  const hex = rgb2hex(r, g, b);\n\n  return {\n    ...color,\n    s,\n    v,\n    r,\n    g,\n    b,\n    hex,\n    str: _rgbaOrHexString(r, g, b, color.a, hex),\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}