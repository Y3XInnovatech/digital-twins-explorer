{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, getFocusStyle, hiddenContentStyle } from '../../Styling';\nvar noOutline = {\n  outline: 0\n};\nvar iconStyle = function (fontSize) {\n  return {\n    fontSize: fontSize,\n    margin: '0 4px',\n    height: '16px',\n    lineHeight: '16px',\n    textAlign: 'center',\n    flexShrink: 0\n  };\n};\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport var getStyles = memoizeFunction(function (theme) {\n  var _a, _b;\n  var semanticColors = theme.semanticColors,\n    effects = theme.effects,\n    fonts = theme.fonts;\n  var border = semanticColors.buttonBorder;\n  var disabledBackground = semanticColors.disabledBackground;\n  var disabledText = semanticColors.disabledText;\n  var buttonHighContrastFocus = {\n    left: -2,\n    top: -2,\n    bottom: -2,\n    right: -2,\n    outlineColor: 'ButtonText'\n  };\n  return {\n    root: [getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: buttonHighContrastFocus,\n      borderColor: 'transparent'\n    }), theme.fonts.medium, {\n      boxSizing: 'border-box',\n      border: '1px solid ' + border,\n      userSelect: 'none',\n      display: 'inline-block',\n      textDecoration: 'none',\n      textAlign: 'center',\n      cursor: 'pointer',\n      padding: '0 16px',\n      borderRadius: effects.roundedCorner2,\n      selectors: {\n        // IE11 workaround for preventing shift of child elements of a button when active.\n        ':active > *': {\n          position: 'relative',\n          left: 0,\n          top: 0\n        }\n      }\n    }],\n    rootDisabled: [getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: buttonHighContrastFocus,\n      borderColor: 'transparent'\n    }), {\n      backgroundColor: disabledBackground,\n      borderColor: disabledBackground,\n      color: disabledText,\n      cursor: 'default',\n      pointerEvents: 'none',\n      selectors: {\n        ':hover': noOutline,\n        ':focus': noOutline\n      }\n    }],\n    iconDisabled: {\n      color: disabledText,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _a)\n    },\n    menuIconDisabled: {\n      color: disabledText,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _b)\n    },\n    flexContainer: {\n      display: 'flex',\n      height: '100%',\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    description: {\n      display: 'block'\n    },\n    textContainer: {\n      flexGrow: 1,\n      display: 'block'\n    },\n    icon: iconStyle(fonts.mediumPlus.fontSize),\n    menuIcon: iconStyle(fonts.small.fontSize),\n    label: {\n      margin: '0 4px',\n      lineHeight: '100%',\n      display: 'block'\n    },\n    screenReaderText: hiddenContentStyle\n  };\n});","map":{"version":3,"sources":["components/Button/BaseButton.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IButtonStyles } from './Button.types';\nimport { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, ITheme, IRawStyle, getFocusStyle, hiddenContentStyle } from '../../Styling';\n\nconst noOutline: IRawStyle = {\n  outline: 0,\n};\n\nconst iconStyle = (fontSize?: string | number): IRawStyle => {\n  return {\n    fontSize: fontSize,\n    margin: '0 4px',\n    height: '16px',\n    lineHeight: '16px',\n    textAlign: 'center',\n    flexShrink: 0,\n  };\n};\n\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport const getStyles = memoizeFunction(\n  (theme: ITheme): IButtonStyles => {\n    const { semanticColors, effects, fonts } = theme;\n\n    const border = semanticColors.buttonBorder;\n    const disabledBackground = semanticColors.disabledBackground;\n    const disabledText = semanticColors.disabledText;\n    const buttonHighContrastFocus = {\n      left: -2,\n      top: -2,\n      bottom: -2,\n      right: -2,\n      outlineColor: 'ButtonText',\n    };\n\n    return {\n      root: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        theme.fonts.medium,\n        {\n          boxSizing: 'border-box',\n          border: '1px solid ' + border,\n          userSelect: 'none',\n          display: 'inline-block',\n          textDecoration: 'none',\n          textAlign: 'center',\n          cursor: 'pointer',\n          padding: '0 16px',\n          borderRadius: effects.roundedCorner2,\n\n          selectors: {\n            // IE11 workaround for preventing shift of child elements of a button when active.\n            ':active > *': {\n              position: 'relative',\n              left: 0,\n              top: 0,\n            },\n          },\n        },\n      ],\n\n      rootDisabled: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        {\n          backgroundColor: disabledBackground,\n          borderColor: disabledBackground,\n          color: disabledText,\n          cursor: 'default',\n          pointerEvents: 'none',\n          selectors: {\n            ':hover': noOutline,\n            ':focus': noOutline,\n          },\n        },\n      ],\n\n      iconDisabled: {\n        color: disabledText,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n\n      menuIconDisabled: {\n        color: disabledText,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n\n      flexContainer: {\n        display: 'flex',\n        height: '100%',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      description: {\n        display: 'block',\n      },\n\n      textContainer: {\n        flexGrow: 1,\n        display: 'block',\n      },\n\n      icon: iconStyle(fonts.mediumPlus.fontSize),\n\n      menuIcon: iconStyle(fonts.small.fontSize),\n\n      label: {\n        margin: '0 4px',\n        lineHeight: '100%',\n        display: 'block',\n      },\n\n      screenReaderText: hiddenContentStyle,\n    };\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}