{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nexport var DigitalTwinsModelData = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsModelData\",\n    modelProperties: {\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      uploadTime: {\n        serializedName: \"uploadTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      decommissioned: {\n        serializedName: \"decommissioned\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      model: {\n        serializedName: \"model\",\n        type: {\n          name: \"any\"\n        }\n      }\n    }\n  }\n};\nexport var ErrorResponse = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\nexport var ErrorModel = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorModel\"\n            }\n          }\n        }\n      },\n      innererror: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerError\"\n        }\n      }\n    }\n  }\n};\nexport var InnerError = {\n  type: {\n    name: \"Composite\",\n    className: \"InnerError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      innererror: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerError\"\n        }\n      }\n    }\n  }\n};\nexport var PagedDigitalTwinsModelDataCollection = {\n  type: {\n    name: \"Composite\",\n    className: \"PagedDigitalTwinsModelDataCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DigitalTwinsModelData\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var QuerySpecification = {\n  type: {\n    name: \"Composite\",\n    className: \"QuerySpecification\",\n    modelProperties: {\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"String\"\n        }\n      },\n      continuationToken: {\n        serializedName: \"continuationToken\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var QueryResult = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        serializedName: \"continuationToken\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var RelationshipCollection = {\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var IncomingRelationshipCollection = {\n  type: {\n    name: \"Composite\",\n    className: \"IncomingRelationshipCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IncomingRelationship\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var IncomingRelationship = {\n  type: {\n    name: \"Composite\",\n    className: \"IncomingRelationship\",\n    modelProperties: {\n      relationshipId: {\n        serializedName: \"$relationshipId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceId: {\n        serializedName: \"$sourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relationshipName: {\n        serializedName: \"$relationshipName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relationshipLink: {\n        serializedName: \"$relationshipLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var EventRouteCollection = {\n  type: {\n    name: \"Composite\",\n    className: \"EventRouteCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EventRoute\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var EventRoute = {\n  type: {\n    name: \"Composite\",\n    className: \"EventRoute\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointName: {\n        serializedName: \"endpointName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      filter: {\n        serializedName: \"filter\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var QueryQueryTwinsHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryQueryTwinsHeaders\",\n    modelProperties: {\n      queryCharge: {\n        serializedName: \"query-charge\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\nexport var DigitalTwinsGetByIdHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsGetByIdHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var DigitalTwinsAddHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsAddHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var DigitalTwinsUpdateHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsUpdateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var DigitalTwinsGetRelationshipByIdHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsGetRelationshipByIdHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var DigitalTwinsAddRelationshipHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsAddRelationshipHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var DigitalTwinsUpdateRelationshipHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsUpdateRelationshipHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var DigitalTwinsGetComponentHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsGetComponentHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport var DigitalTwinsUpdateComponentHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsUpdateComponentHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/generated/models/mappers.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const DigitalTwinsModelData: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsModelData\",\n    modelProperties: {\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      uploadTime: {\n        serializedName: \"uploadTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      decommissioned: {\n        serializedName: \"decommissioned\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      model: {\n        serializedName: \"model\",\n        type: {\n          name: \"any\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"ErrorModel\" } }\n        }\n      },\n      innererror: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerError\"\n        }\n      }\n    }\n  }\n};\n\nexport const InnerError: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InnerError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      innererror: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerError\"\n        }\n      }\n    }\n  }\n};\n\nexport const PagedDigitalTwinsModelDataCollection: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PagedDigitalTwinsModelDataCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"DigitalTwinsModelData\" }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuerySpecification: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuerySpecification\",\n    modelProperties: {\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"String\"\n        }\n      },\n      continuationToken: {\n        serializedName: \"continuationToken\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"any\" } }\n        }\n      },\n      continuationToken: {\n        serializedName: \"continuationToken\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelationshipCollection: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"any\" } }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IncomingRelationshipCollection: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IncomingRelationshipCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"IncomingRelationship\" }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IncomingRelationship: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IncomingRelationship\",\n    modelProperties: {\n      relationshipId: {\n        serializedName: \"$relationshipId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceId: {\n        serializedName: \"$sourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relationshipName: {\n        serializedName: \"$relationshipName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relationshipLink: {\n        serializedName: \"$relationshipLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventRouteCollection: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventRouteCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"EventRoute\" } }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventRoute: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventRoute\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointName: {\n        serializedName: \"endpointName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      filter: {\n        serializedName: \"filter\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryQueryTwinsHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryQueryTwinsHeaders\",\n    modelProperties: {\n      queryCharge: {\n        serializedName: \"query-charge\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DigitalTwinsGetByIdHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsGetByIdHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DigitalTwinsAddHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsAddHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DigitalTwinsUpdateHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsUpdateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DigitalTwinsGetRelationshipByIdHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsGetRelationshipByIdHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DigitalTwinsAddRelationshipHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsAddRelationshipHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DigitalTwinsUpdateRelationshipHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsUpdateRelationshipHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DigitalTwinsGetComponentHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsGetComponentHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DigitalTwinsUpdateComponentHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DigitalTwinsUpdateComponentHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}