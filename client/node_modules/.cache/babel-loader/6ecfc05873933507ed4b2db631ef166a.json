{"ast":null,"code":"import { MAX_COLOR_ALPHA } from './consts';\nimport { hsv2rgb } from './hsv2rgb';\nimport { hsv2hex } from './hsv2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n/**\n * Converts an HSV color (and optional alpha value) to a color object.\n * If `a` is not given, a default of 100 is used.\n * Hex in the returned value will *not* be prefixed with #.\n * If `a` is unspecified or 100, the result's `str` property will contain a hex value\n * (*not* prefixed with #)\n */\nexport function getColorFromHSV(hsv, a) {\n  var h = hsv.h,\n    s = hsv.s,\n    v = hsv.v;\n  a = typeof a === 'number' ? a : MAX_COLOR_ALPHA;\n  var _a = hsv2rgb(h, s, v),\n    r = _a.r,\n    g = _a.g,\n    b = _a.b;\n  var hex = hsv2hex(h, s, v);\n  var str = _rgbaOrHexString(r, g, b, a, hex);\n  var t = MAX_COLOR_ALPHA - a;\n  return {\n    a: a,\n    b: b,\n    g: g,\n    h: h,\n    hex: hex,\n    r: r,\n    s: s,\n    str: str,\n    v: v,\n    t: t\n  };\n}","map":{"version":3,"sources":["utilities/color/getColorFromHSV.ts"],"names":[],"mappings":"AACA,SAAS,eAAe,QAAQ,UAAU;AAC1C,SAAS,OAAO,QAAQ,WAAW;AACnC,SAAS,OAAO,QAAQ,WAAW;AACnC,SAAS,gBAAgB,QAAQ,oBAAoB;AAErD;;;;;;AAMG;AACH,OAAM,SAAU,eAAe,CAAC,GAAS,EAAE,CAAU,EAAA;EAC3C,IAAA,CAAA,GAAA,GAAA,CAAA,CAAC;IAAE,CAAA,GAAA,GAAA,CAAA,CAAC;IAAE,CAAA,GAAA,GAAA,CAAA,CAAC;EACf,CAAC,GAAG,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,GAAG,eAAe;EAEzC,IAAA,EAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAA8B;IAA5B,CAAA,GAAA,EAAA,CAAA,CAAC;IAAE,CAAA,GAAA,EAAA,CAAA,CAAC;IAAE,CAAA,GAAA,EAAA,CAAA,CAAsB;EACpC,IAAM,GAAG,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5B,IAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EAC7C,IAAM,CAAC,GAAG,eAAe,GAAG,CAAC;EAE7B,OAAO;IAAE,CAAC,EAAA,CAAA;IAAE,CAAC,EAAA,CAAA;IAAE,CAAC,EAAA,CAAA;IAAE,CAAC,EAAA,CAAA;IAAE,GAAG,EAAA,GAAA;IAAE,CAAC,EAAA,CAAA;IAAE,CAAC,EAAA,CAAA;IAAE,GAAG,EAAA,GAAA;IAAE,CAAC,EAAA,CAAA;IAAE,CAAC,EAAA;EAAA,CAAE;AAC7C","sourcesContent":["import { IHSV, IColor } from './interfaces';\nimport { MAX_COLOR_ALPHA } from './consts';\nimport { hsv2rgb } from './hsv2rgb';\nimport { hsv2hex } from './hsv2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n\n/**\n * Converts an HSV color (and optional alpha value) to a color object.\n * If `a` is not given, a default of 100 is used.\n * Hex in the returned value will *not* be prefixed with #.\n * If `a` is unspecified or 100, the result's `str` property will contain a hex value\n * (*not* prefixed with #)\n */\nexport function getColorFromHSV(hsv: IHSV, a?: number): IColor {\n  const { h, s, v } = hsv;\n  a = typeof a === 'number' ? a : MAX_COLOR_ALPHA;\n\n  const { r, g, b } = hsv2rgb(h, s, v);\n  const hex = hsv2hex(h, s, v);\n  const str = _rgbaOrHexString(r, g, b, a, hex);\n  const t = MAX_COLOR_ALPHA - a;\n\n  return { a, b, g, h, hex, r, s, str, v, t };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}