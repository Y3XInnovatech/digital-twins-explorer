{"ast":null,"code":"import { appendFunction } from './appendFunction';\n/**\n * Extends a component's lifetime methods by appending new functions to the existing lifetime functions.\n */\nexport function extendComponent(parent, methods) {\n  for (var name_1 in methods) {\n    if (methods.hasOwnProperty(name_1)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parent[name_1] = appendFunction(parent, parent[name_1], methods[name_1]);\n    }\n  }\n}","map":{"version":3,"sources":["extendComponent.ts"],"names":[],"mappings":"AACA,SAAS,cAAc,QAAQ,kBAAkB;AAEjD;;AAEG;AACH,OAAM,SAAU,eAAe,CAA4B,MAAS,EAAE,OAAsC,EAAA;EAC1G,KAAK,IAAI,MAAI,IAAI,OAAO,EAAE;IACxB,IAAI,OAAO,CAAC,cAAc,CAAC,MAAI,CAAC,EAAE;MAChC;MACA,MAAM,CAAC,MAAI,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,MAAI,CAAC,EAAE,OAAO,CAAC,MAAI,CAAC,CAAQ;IAC1E;EACF;AACH","sourcesContent":["import * as React from 'react';\nimport { appendFunction } from './appendFunction';\n\n/**\n * Extends a component's lifetime methods by appending new functions to the existing lifetime functions.\n */\nexport function extendComponent<T extends React.Component>(parent: T, methods: { [key in keyof T]?: T[key] }): void {\n  for (let name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parent[name] = appendFunction(parent, parent[name], methods[name]) as any;\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}