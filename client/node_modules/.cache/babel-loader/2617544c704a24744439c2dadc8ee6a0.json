{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../../Utilities';\nimport { getStyles } from './Beak.styles';\nimport { RectangleEdge } from '../../../utilities/positioning';\nexport var BEAK_HEIGHT = 10;\nexport var BEAK_WIDTH = 18;\nvar Beak = /** @class */function (_super) {\n  __extends(Beak, _super);\n  function Beak(props) {\n    var _this = _super.call(this, props) || this;\n    initializeComponentRef(_this);\n    return _this;\n  }\n  Beak.prototype.render = function () {\n    var _a = this.props,\n      left = _a.left,\n      top = _a.top,\n      bottom = _a.bottom,\n      right = _a.right,\n      color = _a.color,\n      _b = _a.direction,\n      direction = _b === void 0 ? RectangleEdge.top : _b;\n    var svgHeight;\n    var svgWidth;\n    if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n      svgHeight = BEAK_HEIGHT;\n      svgWidth = BEAK_WIDTH;\n    } else {\n      svgHeight = BEAK_WIDTH;\n      svgWidth = BEAK_HEIGHT;\n    }\n    var pointOne;\n    var pointTwo;\n    var pointThree;\n    var transform;\n    switch (direction) {\n      case RectangleEdge.top:\n      default:\n        pointOne = BEAK_WIDTH / 2 + \", 0\";\n        pointTwo = BEAK_WIDTH + \", \" + BEAK_HEIGHT;\n        pointThree = \"0, \" + BEAK_HEIGHT;\n        transform = 'translateY(-100%)';\n        break;\n      case RectangleEdge.right:\n        pointOne = \"0, 0\";\n        pointTwo = BEAK_HEIGHT + \", \" + BEAK_HEIGHT;\n        pointThree = \"0, \" + BEAK_WIDTH;\n        transform = 'translateX(100%)';\n        break;\n      case RectangleEdge.bottom:\n        pointOne = \"0, 0\";\n        pointTwo = BEAK_WIDTH + \", 0\";\n        pointThree = BEAK_WIDTH / 2 + \", \" + BEAK_HEIGHT;\n        transform = 'translateY(100%)';\n        break;\n      case RectangleEdge.left:\n        pointOne = BEAK_HEIGHT + \", 0\";\n        pointTwo = \"0, \" + BEAK_HEIGHT;\n        pointThree = BEAK_HEIGHT + \", \" + BEAK_WIDTH;\n        transform = 'translateX(-100%)';\n        break;\n    }\n    var getClassNames = classNamesFunction();\n    var classNames = getClassNames(getStyles, {\n      left: left,\n      top: top,\n      bottom: bottom,\n      right: right,\n      height: svgHeight + \"px\",\n      width: svgWidth + \"px\",\n      transform: transform,\n      color: color\n    });\n    return React.createElement(\"div\", {\n      className: classNames.root,\n      role: \"presentation\"\n    }, React.createElement(\"svg\", {\n      height: svgHeight,\n      width: svgWidth,\n      className: classNames.beak\n    }, React.createElement(\"polygon\", {\n      points: pointOne + ' ' + pointTwo + ' ' + pointThree\n    })));\n  };\n  return Beak;\n}(React.Component);\nexport { Beak };","map":{"version":3,"sources":["components/Coachmark/Beak/Beak.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../../Utilities';\nimport { IBeakProps } from './Beak.types';\nimport { getStyles, IBeakStyles } from './Beak.styles';\nimport { IBeakStylesProps } from './Beak.types';\nimport { RectangleEdge } from '../../../utilities/positioning';\n\nexport const BEAK_HEIGHT = 10;\nexport const BEAK_WIDTH = 18;\n\nexport class Beak extends React.Component<IBeakProps, {}> {\n  constructor(props: IBeakProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { left, top, bottom, right, color, direction = RectangleEdge.top } = this.props;\n\n    let svgHeight: number;\n    let svgWidth: number;\n\n    if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n      svgHeight = BEAK_HEIGHT;\n      svgWidth = BEAK_WIDTH;\n    } else {\n      svgHeight = BEAK_WIDTH;\n      svgWidth = BEAK_HEIGHT;\n    }\n\n    let pointOne: string;\n    let pointTwo: string;\n    let pointThree: string;\n    let transform: string;\n\n    switch (direction) {\n      case RectangleEdge.top:\n      default:\n        pointOne = `${BEAK_WIDTH / 2}, 0`;\n        pointTwo = `${BEAK_WIDTH}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_HEIGHT}`;\n        transform = 'translateY(-100%)';\n        break;\n      case RectangleEdge.right:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_HEIGHT}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_WIDTH}`;\n        transform = 'translateX(100%)';\n        break;\n      case RectangleEdge.bottom:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_WIDTH}, 0`;\n        pointThree = `${BEAK_WIDTH / 2}, ${BEAK_HEIGHT}`;\n        transform = 'translateY(100%)';\n        break;\n      case RectangleEdge.left:\n        pointOne = `${BEAK_HEIGHT}, 0`;\n        pointTwo = `0, ${BEAK_HEIGHT}`;\n        pointThree = `${BEAK_HEIGHT}, ${BEAK_WIDTH}`;\n        transform = 'translateX(-100%)';\n        break;\n    }\n\n    const getClassNames = classNamesFunction<IBeakStylesProps, IBeakStyles>();\n    const classNames = getClassNames(getStyles, {\n      left,\n      top,\n      bottom,\n      right,\n      height: `${svgHeight}px`,\n      width: `${svgWidth}px`,\n      transform: transform,\n      color,\n    });\n\n    return (\n      <div className={classNames.root} role=\"presentation\">\n        <svg height={svgHeight} width={svgWidth} className={classNames.beak}>\n          <polygon points={pointOne + ' ' + pointTwo + ' ' + pointThree} />\n        </svg>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}