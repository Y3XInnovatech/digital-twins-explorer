{"ast":null,"code":"/*eslint-env browser*/\n\"use strict\";\n\nvar CommonSystem = require(\"./common-system\");\nmodule.exports = BrowserSystem;\nfunction BrowserSystem(location, description, options) {\n  var self = this;\n  CommonSystem.call(self, location, description, options);\n}\nBrowserSystem.prototype = Object.create(CommonSystem.prototype);\nBrowserSystem.prototype.constructor = BrowserSystem;\nBrowserSystem.load = CommonSystem.load;\nBrowserSystem.prototype.read = function read(location, charset, contentType) {\n  return new Promise(function (resolve, reject) {\n    var request = new XMLHttpRequest();\n    function onload() {\n      if (xhrSuccess(request)) {\n        resolve(request.responseText);\n      } else {\n        onerror();\n      }\n    }\n    function onerror() {\n      var error = new Error(\"Can't XHR \" + JSON.stringify(location));\n      if (request.status === 404 || request.status === 0) {\n        error.code = \"ENOENT\";\n        error.notFound = true;\n      }\n      reject(error);\n    }\n    try {\n      request.open(\"GET\", location, true);\n      if (contentType && request.overrideMimeType) {\n        request.overrideMimeType(contentType);\n      }\n      request.onreadystatechange = function () {\n        if (request.readyState === 4) {\n          onload();\n        }\n      };\n      request.onload = request.load = onload;\n      request.onerror = request.error = onerror;\n      request.send();\n    } catch (exception) {\n      reject(exception);\n    }\n  });\n};\n\n// Determine if an XMLHttpRequest was successful\n// Some versions of WebKit return 0 for successful file:// URLs\nfunction xhrSuccess(req) {\n  return req.status === 200 || req.status === 0 && req.responseText;\n}","map":{"version":3,"names":["CommonSystem","require","module","exports","BrowserSystem","location","description","options","self","call","prototype","Object","create","constructor","load","read","charset","contentType","Promise","resolve","reject","request","XMLHttpRequest","onload","xhrSuccess","responseText","onerror","error","Error","JSON","stringify","status","code","notFound","open","overrideMimeType","onreadystatechange","readyState","send","exception","req"],"sources":["/home/saharsh/digital-twins-explorer/client/node_modules/system/browser-system.js"],"sourcesContent":["/*eslint-env browser*/\n\"use strict\";\n\nvar CommonSystem = require(\"./common-system\");\n\nmodule.exports = BrowserSystem;\n\nfunction BrowserSystem(location, description, options) {\n    var self = this;\n    CommonSystem.call(self, location, description, options);\n}\n\nBrowserSystem.prototype = Object.create(CommonSystem.prototype);\nBrowserSystem.prototype.constructor = BrowserSystem;\n\nBrowserSystem.load = CommonSystem.load;\n\nBrowserSystem.prototype.read = function read(location, charset, contentType) {\n    return new Promise(function (resolve, reject) {\n        var request = new XMLHttpRequest();\n\n        function onload() {\n            if (xhrSuccess(request)) {\n                resolve(request.responseText);\n            } else {\n                onerror();\n            }\n        }\n\n        function onerror() {\n            var error = new Error(\"Can't XHR \" + JSON.stringify(location));\n            if (request.status === 404 || request.status === 0) {\n                error.code = \"ENOENT\";\n                error.notFound = true;\n            }\n            reject(error);\n        }\n\n        try {\n            request.open(\"GET\", location, true);\n            if (contentType && request.overrideMimeType) {\n                request.overrideMimeType(contentType);\n            }\n            request.onreadystatechange = function () {\n                if (request.readyState === 4) {\n                    onload();\n                }\n            };\n            request.onload = request.load = onload;\n            request.onerror = request.error = onerror;\n            request.send();\n        } catch (exception) {\n            reject(exception);\n        }\n\n    });\n};\n\n// Determine if an XMLHttpRequest was successful\n// Some versions of WebKit return 0 for successful file:// URLs\nfunction xhrSuccess(req) {\n    return (req.status === 200 || (req.status === 0 && req.responseText));\n}\n"],"mappings":"AAAA;AACA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE7CC,MAAM,CAACC,OAAO,GAAGC,aAAa;AAE9B,SAASA,aAAaA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAE;EACnD,IAAIC,IAAI,GAAG,IAAI;EACfR,YAAY,CAACS,IAAI,CAACD,IAAI,EAAEH,QAAQ,EAAEC,WAAW,EAAEC,OAAO,CAAC;AAC3D;AAEAH,aAAa,CAACM,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACZ,YAAY,CAACU,SAAS,CAAC;AAC/DN,aAAa,CAACM,SAAS,CAACG,WAAW,GAAGT,aAAa;AAEnDA,aAAa,CAACU,IAAI,GAAGd,YAAY,CAACc,IAAI;AAEtCV,aAAa,CAACM,SAAS,CAACK,IAAI,GAAG,SAASA,IAAIA,CAACV,QAAQ,EAAEW,OAAO,EAAEC,WAAW,EAAE;EACzE,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC1C,IAAIC,OAAO,GAAG,IAAIC,cAAc,CAAC,CAAC;IAElC,SAASC,MAAMA,CAAA,EAAG;MACd,IAAIC,UAAU,CAACH,OAAO,CAAC,EAAE;QACrBF,OAAO,CAACE,OAAO,CAACI,YAAY,CAAC;MACjC,CAAC,MAAM;QACHC,OAAO,CAAC,CAAC;MACb;IACJ;IAEA,SAASA,OAAOA,CAAA,EAAG;MACf,IAAIC,KAAK,GAAG,IAAIC,KAAK,CAAC,YAAY,GAAGC,IAAI,CAACC,SAAS,CAACzB,QAAQ,CAAC,CAAC;MAC9D,IAAIgB,OAAO,CAACU,MAAM,KAAK,GAAG,IAAIV,OAAO,CAACU,MAAM,KAAK,CAAC,EAAE;QAChDJ,KAAK,CAACK,IAAI,GAAG,QAAQ;QACrBL,KAAK,CAACM,QAAQ,GAAG,IAAI;MACzB;MACAb,MAAM,CAACO,KAAK,CAAC;IACjB;IAEA,IAAI;MACAN,OAAO,CAACa,IAAI,CAAC,KAAK,EAAE7B,QAAQ,EAAE,IAAI,CAAC;MACnC,IAAIY,WAAW,IAAII,OAAO,CAACc,gBAAgB,EAAE;QACzCd,OAAO,CAACc,gBAAgB,CAAClB,WAAW,CAAC;MACzC;MACAI,OAAO,CAACe,kBAAkB,GAAG,YAAY;QACrC,IAAIf,OAAO,CAACgB,UAAU,KAAK,CAAC,EAAE;UAC1Bd,MAAM,CAAC,CAAC;QACZ;MACJ,CAAC;MACDF,OAAO,CAACE,MAAM,GAAGF,OAAO,CAACP,IAAI,GAAGS,MAAM;MACtCF,OAAO,CAACK,OAAO,GAAGL,OAAO,CAACM,KAAK,GAAGD,OAAO;MACzCL,OAAO,CAACiB,IAAI,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOC,SAAS,EAAE;MAChBnB,MAAM,CAACmB,SAAS,CAAC;IACrB;EAEJ,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA,SAASf,UAAUA,CAACgB,GAAG,EAAE;EACrB,OAAQA,GAAG,CAACT,MAAM,KAAK,GAAG,IAAKS,GAAG,CAACT,MAAM,KAAK,CAAC,IAAIS,GAAG,CAACf,YAAa;AACxE","ignoreList":[]},"metadata":{},"sourceType":"script"}