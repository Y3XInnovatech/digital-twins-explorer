{"ast":null,"code":"import { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { serializeRuleEntries } from './styleToClassName';\n/**\n * Registers a font face.\n * @public\n */\nexport function fontFace(font) {\n  Stylesheet.getInstance().insertRule(\"@font-face{\" + serializeRuleEntries(getStyleOptions(), font) + \"}\", true);\n}","map":{"version":3,"sources":["fontFace.ts"],"names":[],"mappings":"AACA,SAAS,eAAe,QAAQ,qBAAqB;AACrD,SAAS,UAAU,QAAQ,cAAc;AACzC,SAAS,oBAAoB,QAAQ,oBAAoB;AAEzD;;;AAGG;AACH,OAAM,SAAU,QAAQ,CAAC,IAAe,EAAA;EACtC,UAAU,CAAC,WAAW,CAAA,CAAE,CAAC,UAAU,CAAC,aAAA,GAAc,oBAAoB,CAAC,eAAe,CAAA,CAAE,EAAE,IAAU,CAAC,GAAA,GAAG,EAAE,IAAI,CAAC;AACjH","sourcesContent":["import { IFontFace } from './IRawStyleBase';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { serializeRuleEntries } from './styleToClassName';\n\n/**\n * Registers a font face.\n * @public\n */\nexport function fontFace(font: IFontFace): void {\n  Stylesheet.getInstance().insertRule(`@font-face{${serializeRuleEntries(getStyleOptions(), font as {})}}`, true);\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}