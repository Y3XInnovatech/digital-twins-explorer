{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, initializeComponentRef, KeyCodes } from '../../../Utilities';\nimport { CardCallout } from '../CardCallout/CardCallout';\nvar getClassNames = classNamesFunction();\nvar PlainCardBase = /** @class */function (_super) {\n  __extends(PlainCardBase, _super);\n  function PlainCardBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._onKeyDown = function (ev) {\n      if (ev.which === KeyCodes.escape) {\n        _this.props.onLeave && _this.props.onLeave(ev);\n      }\n    };\n    initializeComponentRef(_this);\n    return _this;\n  }\n  PlainCardBase.prototype.render = function () {\n    var _a = this.props,\n      styles = _a.styles,\n      theme = _a.theme,\n      className = _a.className;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className\n    });\n    var content = React.createElement(\"div\", {\n      onMouseEnter: this.props.onEnter,\n      onMouseLeave: this.props.onLeave,\n      onKeyDown: this._onKeyDown\n    }, this.props.onRenderPlainCard(this.props.renderData));\n    return React.createElement(CardCallout, __assign({}, this.props, {\n      content: content,\n      className: this._classNames.root\n    }));\n  };\n  return PlainCardBase;\n}(React.Component);\nexport { PlainCardBase };","map":{"version":3,"sources":["components/HoverCard/PlainCard/PlainCard.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAE9B,SAAS,kBAAkB,EAAE,sBAAsB,EAAE,QAAQ,QAAQ,oBAAoB;AAEzF,SAAS,WAAW,QAAQ,4BAA4B;AAExD,IAAM,aAAa,GAAG,kBAAkB,CAAA,CAA0C;AAElF,IAAA,aAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAmC,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;EAGjC,SAAA,aAAA,CAAY,KAAsB,EAAA;IAAlC,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IAAA,IAAA;IAsBN,KAAA,CAAA,UAAU,GAAG,UAAC,EAAoC,EAAA;MACxD,IAAI,EAAE,CAAC,KAAK,KAAK,QAAQ,CAAC,MAAM,EAAE;QAChC,KAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;MAC7C;IACH,CAAC;IAxBC,sBAAsB,CAAC,KAAI,CAAC;;EAC9B;EAEO,aAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACQ,IAAA,EAAA,GAAA,IAAA,CAAA,KAAyC;MAAvC,MAAA,GAAA,EAAA,CAAA,MAAM;MAAE,KAAA,GAAA,EAAA,CAAA,KAAK;MAAE,SAAA,GAAA,EAAA,CAAA,SAAwB;IAE/C,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE;MACxC,KAAK,EAAE,KAAM;MACb,SAAS,EAAA;KACV,CAAC;IAEF,IAAM,OAAO,GACX,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;MAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;MAAE,SAAS,EAAE,IAAI,CAAC;IAAU,CAAA,EAChG,IAAI,CAAC,KAAK,CAAC,iBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAExD;IAED,OAAO,KAAA,CAAA,aAAA,CAAC,WAAW,EAAA,QAAA,CAAA,CAAA,CAAA,EAAK,IAAI,CAAC,KAAK,EAAA;MAAE,OAAO,EAAE,OAAO;MAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC;IAAI,CAAA,CAAA,CAAI;EAC5F,CAAC;EAOH,OAAA,aAAC;AAAD,CAAC,CA/BkC,KAAK,CAAC,SAAS,CAAA","sourcesContent":["import * as React from 'react';\n\nimport { classNamesFunction, initializeComponentRef, KeyCodes } from '../../../Utilities';\nimport { IPlainCardProps, IPlainCardStyles, IPlainCardStyleProps } from './PlainCard.types';\nimport { CardCallout } from '../CardCallout/CardCallout';\n\nconst getClassNames = classNamesFunction<IPlainCardStyleProps, IPlainCardStyles>();\n\nexport class PlainCardBase extends React.Component<IPlainCardProps, {}> {\n  private _classNames: { [key in keyof IPlainCardStyles]: string };\n\n  constructor(props: IPlainCardProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    const content: JSX.Element = (\n      <div onMouseEnter={this.props.onEnter} onMouseLeave={this.props.onLeave} onKeyDown={this._onKeyDown}>\n        {this.props.onRenderPlainCard!(this.props.renderData)}\n      </div>\n    );\n\n    return <CardCallout {...this.props} content={content} className={this._classNames.root} />;\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.escape) {\n      this.props.onLeave && this.props.onLeave(ev);\n    }\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}