{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, ScreenWidthMaxMedium, ScreenWidthMaxSmall, ScreenWidthMinMedium, getFocusStyle, getScreenSelector, getGlobalClassNames, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-Breadcrumb',\n  list: 'ms-Breadcrumb-list',\n  listItem: 'ms-Breadcrumb-listItem',\n  chevron: 'ms-Breadcrumb-chevron',\n  overflow: 'ms-Breadcrumb-overflow',\n  overflowButton: 'ms-Breadcrumb-overflowButton',\n  itemLink: 'ms-Breadcrumb-itemLink',\n  item: 'ms-Breadcrumb-item'\n};\nvar SingleLineTextStyle = {\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden'\n};\nvar overflowButtonFontSize = 16;\nvar chevronSmallFontSize = 8;\nvar itemLineHeight = 36;\nvar itemFontSize = 18;\nvar MinimumScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\nvar MediumScreenSelector = getScreenSelector(ScreenWidthMinMedium, ScreenWidthMaxMedium);\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d;\n  var className = props.className,\n    theme = props.theme;\n  var palette = theme.palette,\n    semanticColors = theme.semanticColors,\n    fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  // Tokens\n  var itemBackgroundHoveredColor = semanticColors.menuItemBackgroundHovered;\n  var itemBackgroundPressedColor = semanticColors.menuItemBackgroundPressed;\n  var itemTextColor = palette.neutralSecondary;\n  var itemTextFontWeight = FontWeights.regular;\n  var itemTextHoveredOrPressedColor = palette.neutralPrimary;\n  var itemLastChildTextColor = palette.neutralPrimary;\n  var itemLastChildTextFontWeight = FontWeights.semibold;\n  var chevronButtonColor = palette.neutralSecondary;\n  var overflowButtonColor = palette.neutralSecondary;\n  var lastChildItemStyles = {\n    fontWeight: itemLastChildTextFontWeight,\n    color: itemLastChildTextColor\n  };\n  var itemStateSelectors = {\n    ':hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundHoveredColor,\n      cursor: 'pointer',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'Highlight'\n      }, _a)\n    },\n    ':active': {\n      backgroundColor: itemBackgroundPressedColor,\n      color: itemTextHoveredOrPressedColor\n    },\n    '&:active:hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundPressedColor\n    },\n    '&:active, &:hover, &:active:hover': {\n      textDecoration: 'none'\n    }\n  };\n  var commonItemStyles = {\n    color: itemTextColor,\n    padding: '0 8px',\n    lineHeight: itemLineHeight,\n    fontSize: itemFontSize,\n    fontWeight: itemTextFontWeight\n  };\n  return {\n    root: [classNames.root, fonts.medium, {\n      margin: '11px 0 1px'\n    }, className],\n    list: [classNames.list, {\n      whiteSpace: 'nowrap',\n      padding: 0,\n      margin: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    listItem: [classNames.listItem, {\n      listStyleType: 'none',\n      margin: '0',\n      padding: '0',\n      display: 'flex',\n      position: 'relative',\n      alignItems: 'center',\n      selectors: {\n        '&:last-child .ms-Breadcrumb-itemLink': lastChildItemStyles,\n        '&:last-child .ms-Breadcrumb-item': lastChildItemStyles\n      }\n    }],\n    chevron: [classNames.chevron, {\n      color: chevronButtonColor,\n      fontSize: fonts.small.fontSize,\n      selectors: (_b = {}, _b[HighContrastSelector] = __assign({\n        color: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _b[MediumScreenSelector] = {\n        fontSize: chevronSmallFontSize\n      }, _b[MinimumScreenSelector] = {\n        fontSize: chevronSmallFontSize\n      }, _b)\n    }],\n    overflow: [classNames.overflow, {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    }],\n    overflowButton: [classNames.overflowButton, getFocusStyle(theme), SingleLineTextStyle, {\n      fontSize: overflowButtonFontSize,\n      color: overflowButtonColor,\n      height: '100%',\n      cursor: 'pointer',\n      selectors: __assign(__assign({}, itemStateSelectors), (_c = {}, _c[MinimumScreenSelector] = {\n        padding: '4px 6px'\n      }, _c[MediumScreenSelector] = {\n        fontSize: fonts.mediumPlus.fontSize\n      }, _c))\n    }],\n    itemLink: [classNames.itemLink, getFocusStyle(theme), SingleLineTextStyle, __assign(__assign({}, commonItemStyles), {\n      selectors: __assign((_d = {\n        ':focus': {\n          color: palette.neutralDark\n        }\n      }, _d[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        outline: \"none\"\n      }, _d), itemStateSelectors)\n    })],\n    item: [classNames.item, __assign(__assign({}, commonItemStyles), {\n      selectors: {\n        ':hover': {\n          cursor: 'default'\n        }\n      }\n    })]\n  };\n};","map":{"version":3,"sources":["components/Breadcrumb/Breadcrumb.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  HighContrastSelector,\n  IRawStyle,\n  ScreenWidthMaxMedium,\n  ScreenWidthMaxSmall,\n  ScreenWidthMinMedium,\n  getFocusStyle,\n  getScreenSelector,\n  getGlobalClassNames,\n  FontWeights,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { IBreadcrumbStyleProps, IBreadcrumbStyles } from './Breadcrumb.types';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Breadcrumb',\n  list: 'ms-Breadcrumb-list',\n  listItem: 'ms-Breadcrumb-listItem',\n  chevron: 'ms-Breadcrumb-chevron',\n  overflow: 'ms-Breadcrumb-overflow',\n  overflowButton: 'ms-Breadcrumb-overflowButton',\n  itemLink: 'ms-Breadcrumb-itemLink',\n  item: 'ms-Breadcrumb-item',\n};\n\nconst SingleLineTextStyle: IRawStyle = {\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n};\n\nconst overflowButtonFontSize = 16;\nconst chevronSmallFontSize = 8;\nconst itemLineHeight = 36;\nconst itemFontSize = 18;\n\nconst MinimumScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\nconst MediumScreenSelector = getScreenSelector(ScreenWidthMinMedium, ScreenWidthMaxMedium);\n\nexport const getStyles = (props: IBreadcrumbStyleProps): IBreadcrumbStyles => {\n  const { className, theme } = props;\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Tokens\n  const itemBackgroundHoveredColor = semanticColors.menuItemBackgroundHovered;\n  const itemBackgroundPressedColor = semanticColors.menuItemBackgroundPressed;\n  const itemTextColor = palette.neutralSecondary;\n  const itemTextFontWeight = FontWeights.regular;\n  const itemTextHoveredOrPressedColor = palette.neutralPrimary;\n  const itemLastChildTextColor = palette.neutralPrimary;\n  const itemLastChildTextFontWeight = FontWeights.semibold;\n  const chevronButtonColor = palette.neutralSecondary;\n  const overflowButtonColor = palette.neutralSecondary;\n\n  const lastChildItemStyles: IRawStyle = {\n    fontWeight: itemLastChildTextFontWeight,\n    color: itemLastChildTextColor,\n  };\n\n  const itemStateSelectors = {\n    ':hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundHoveredColor,\n      cursor: 'pointer',\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Highlight',\n        },\n      },\n    },\n    ':active': {\n      backgroundColor: itemBackgroundPressedColor,\n      color: itemTextHoveredOrPressedColor,\n    },\n    '&:active:hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundPressedColor,\n    },\n    '&:active, &:hover, &:active:hover': {\n      textDecoration: 'none',\n    },\n  };\n\n  const commonItemStyles: IRawStyle = {\n    color: itemTextColor,\n    padding: '0 8px',\n    lineHeight: itemLineHeight,\n    fontSize: itemFontSize,\n    fontWeight: itemTextFontWeight,\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      {\n        margin: '11px 0 1px',\n      },\n      className,\n    ],\n\n    list: [\n      classNames.list,\n      {\n        whiteSpace: 'nowrap',\n        padding: 0,\n        margin: 0,\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n\n    listItem: [\n      classNames.listItem,\n      {\n        listStyleType: 'none',\n        margin: '0',\n        padding: '0',\n        display: 'flex',\n        position: 'relative',\n        alignItems: 'center',\n        selectors: {\n          '&:last-child .ms-Breadcrumb-itemLink': lastChildItemStyles,\n          '&:last-child .ms-Breadcrumb-item': lastChildItemStyles,\n        },\n      },\n    ],\n\n    chevron: [\n      classNames.chevron,\n      {\n        color: chevronButtonColor,\n        fontSize: fonts.small.fontSize,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n          [MediumScreenSelector]: {\n            fontSize: chevronSmallFontSize,\n          },\n          [MinimumScreenSelector]: {\n            fontSize: chevronSmallFontSize,\n          },\n        },\n      },\n    ],\n\n    overflow: [\n      classNames.overflow,\n      {\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n      },\n    ],\n\n    overflowButton: [\n      classNames.overflowButton,\n      getFocusStyle(theme),\n      SingleLineTextStyle,\n      {\n        fontSize: overflowButtonFontSize,\n        color: overflowButtonColor,\n        height: '100%',\n        cursor: 'pointer',\n        selectors: {\n          ...itemStateSelectors,\n          [MinimumScreenSelector]: {\n            padding: '4px 6px',\n          },\n          [MediumScreenSelector]: {\n            fontSize: fonts.mediumPlus.fontSize,\n          },\n        },\n      },\n    ],\n\n    itemLink: [\n      classNames.itemLink,\n      getFocusStyle(theme),\n      SingleLineTextStyle,\n      {\n        ...commonItemStyles,\n        selectors: {\n          ':focus': {\n            color: palette.neutralDark,\n          },\n          [`.${IsFocusVisibleClassName} &:focus`]: {\n            outline: `none`,\n          },\n          ...itemStateSelectors,\n        },\n      },\n    ],\n\n    item: [\n      classNames.item,\n      {\n        ...commonItemStyles,\n        selectors: {\n          ':hover': {\n            cursor: 'default',\n          },\n        },\n      },\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}