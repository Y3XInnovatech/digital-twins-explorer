{"ast":null,"code":"var _jsxFileName = \"/home/saharsh/Music/digital-twins-explorer/client/src/components/ModelViewerComponent/ModelViewerCommandBarComponent/ModelViewerCommandBarComponent.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React, { Component } from \"react\";\nimport { CommandBar } from \"office-ui-fabric-react\";\nimport { withTranslation } from \"react-i18next\";\nimport { OatPublicUtils, Utils } from \"@microsoft/iot-cardboard-js\";\nimport { apiService } from \"../../../services/ApiService\";\nimport { eventService } from \"../../../services/EventService\";\nimport ModelViewerDeleteAllModelsComponent from \"../ModelViewerDeleteAllModelsComponent/ModelViewerDeleteAllModelsComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ModelViewerCommandBarComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.downloadFilesAsZip = async () => {\n      let list = [];\n      try {\n        list = await apiService.queryModels(false);\n        const zipResult = OatPublicUtils.createZipFileFromModels({\n          models: list.map(li => li.model)\n        });\n        if (zipResult.status === \"Success\") {\n          zipResult.file.generateAsync({\n            type: \"blob\"\n          }).then(content => {\n            const fileName = \"ADT-Instance-Models.zip\";\n            Utils.downloadFile(content, fileName);\n          });\n        }\n      } catch (exc) {\n        exc.customMessage = \"Error downloading models\";\n        eventService.publishError(exc);\n      }\n    };\n    this.farItems = [{\n      key: \"downloadModelsAsZip\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.downloadAllModels.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.downloadAllModels.text\"),\n      iconProps: {\n        iconName: \"DownloadDocument\"\n      },\n      onClick: () => this.downloadFilesAsZip(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    }, {\n      key: \"uploadModelImages\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModelImages.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModelImages.text\"),\n      iconProps: {\n        iconName: \"Photo2Add\"\n      },\n      onClick: () => this.props.onUploadModelImagesClicked(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    }, {\n      key: \"downloadModels\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.downloadModels.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.downloadModels.text\"),\n      iconProps: {\n        iconName: \"Refresh\"\n      },\n      onClick: () => this.props.onDownloadModelsClicked(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    }, {\n      key: \"uploadModel\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModel.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModel.text\"),\n      iconProps: {\n        iconName: \"Upload\"\n      },\n      onClick: () => this.props.onUploadModelClicked(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    }, {\n      key: \"uploadModelsDirectory\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModelsDirectory.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModelsDirectory.text\"),\n      iconProps: {\n        iconName: \"BulkUploadFolder\"\n      },\n      onClick: () => this.props.onUploadModelsFolderClicked(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    }, {\n      key: \"deleteModels\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.deleteModels.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.deleteModels.ariaLabel\"),\n      iconProps: {\n        iconName: \"Delete\"\n      },\n      onClick: () => this.delete.current.open(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    }];\n    this.buttonClass = this.props.buttonClass;\n    this.delete = /*#__PURE__*/React.createRef();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n        items: this.items,\n        farItems: this.farItems,\n        ariaLabel: this.props.t(\"modelViewerCommandBarComponent.render.ariaLabel\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModelViewerDeleteAllModelsComponent, {\n        ref: this.delete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default withTranslation()(ModelViewerCommandBarComponent);","map":{"version":3,"names":["React","Component","CommandBar","withTranslation","OatPublicUtils","Utils","apiService","eventService","ModelViewerDeleteAllModelsComponent","jsxDEV","_jsxDEV","ModelViewerCommandBarComponent","constructor","props","downloadFilesAsZip","list","queryModels","zipResult","createZipFileFromModels","models","map","li","model","status","file","generateAsync","type","then","content","fileName","downloadFile","exc","customMessage","publishError","farItems","key","text","t","ariaLabel","iconProps","iconName","onClick","iconOnly","className","buttonClass","role","onUploadModelImagesClicked","onDownloadModelsClicked","onUploadModelClicked","onUploadModelsFolderClicked","delete","current","open","createRef","render","children","items","_jsxFileName","lineNumber","columnNumber","ref"],"sources":["/home/saharsh/Music/digital-twins-explorer/client/src/components/ModelViewerComponent/ModelViewerCommandBarComponent/ModelViewerCommandBarComponent.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React, { Component } from \"react\";\nimport { CommandBar } from \"office-ui-fabric-react\";\nimport { withTranslation } from \"react-i18next\";\nimport { OatPublicUtils, Utils } from \"@microsoft/iot-cardboard-js\";\nimport { apiService } from \"../../../services/ApiService\";\nimport { eventService } from \"../../../services/EventService\";\n\nimport ModelViewerDeleteAllModelsComponent from \"../ModelViewerDeleteAllModelsComponent/ModelViewerDeleteAllModelsComponent\";\n\nclass ModelViewerCommandBarComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.buttonClass = this.props.buttonClass;\n    this.delete = React.createRef();\n  }\n\n  downloadFilesAsZip = async () => {\n    let list = [];\n    try {\n      list = await apiService.queryModels(false);\n      const zipResult = OatPublicUtils.createZipFileFromModels({models: list.map(li => li.model)});\n      if (zipResult.status === \"Success\") {\n        zipResult.file.generateAsync({ type: \"blob\" }).then(content => {\n          const fileName = \"ADT-Instance-Models.zip\";\n          Utils.downloadFile(content, fileName);\n        });\n      }\n    } catch (exc) {\n      exc.customMessage = \"Error downloading models\";\n      eventService.publishError(exc);\n    }\n  };\n\n  farItems = [\n    {\n      key: \"downloadModelsAsZip\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.downloadAllModels.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.downloadAllModels.text\"),\n      iconProps: { iconName: \"DownloadDocument\" },\n      onClick: () => this.downloadFilesAsZip(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    },\n    {\n      key: \"uploadModelImages\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModelImages.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModelImages.text\"),\n      iconProps: { iconName: \"Photo2Add\" },\n      onClick: () => this.props.onUploadModelImagesClicked(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    },\n    {\n      key: \"downloadModels\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.downloadModels.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.downloadModels.text\"),\n      iconProps: { iconName: \"Refresh\" },\n      onClick: () => this.props.onDownloadModelsClicked(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    },\n    {\n      key: \"uploadModel\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModel.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModel.text\"),\n      iconProps: { iconName: \"Upload\" },\n      onClick: () => this.props.onUploadModelClicked(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    },\n    {\n      key: \"uploadModelsDirectory\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModelsDirectory.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.uploadModelsDirectory.text\"),\n      iconProps: { iconName: \"BulkUploadFolder\" },\n      onClick: () => this.props.onUploadModelsFolderClicked(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    },\n    {\n      key: \"deleteModels\",\n      text: this.props.t(\"modelViewerCommandBarComponent.farItems.deleteModels.text\"),\n      ariaLabel: this.props.t(\"modelViewerCommandBarComponent.farItems.deleteModels.ariaLabel\"),\n      iconProps: { iconName: \"Delete\" },\n      onClick: () => this.delete.current.open(),\n      iconOnly: true,\n      className: this.buttonClass,\n      role: \"menuitem\"\n    }\n  ]\n\n  render() {\n    return (\n      <div>\n        <CommandBar\n          items={this.items}\n          farItems={this.farItems}\n          ariaLabel={this.props.t(\"modelViewerCommandBarComponent.render.ariaLabel\")} />\n        <ModelViewerDeleteAllModelsComponent ref={this.delete} />\n      </div>\n    );\n  }\n\n}\n\nexport default withTranslation()(ModelViewerCommandBarComponent);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}