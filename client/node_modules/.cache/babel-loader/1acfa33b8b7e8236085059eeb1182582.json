{"ast":null,"code":"import * as React from 'react';\nimport { useCallback } from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { Link } from '../../Link';\nimport { GroupSpacer } from './GroupSpacer';\nvar getClassNames = classNamesFunction();\nexport var GroupShowAllBase = function (props) {\n  var group = props.group,\n    groupLevel = props.groupLevel,\n    _a = props.showAllLinkText,\n    showAllLinkText = _a === void 0 ? 'Show All' : _a,\n    styles = props.styles,\n    theme = props.theme,\n    onToggleSummarize = props.onToggleSummarize;\n  var classNames = getClassNames(styles, {\n    theme: theme\n  });\n  var memoizedOnClick = useCallback(function (ev) {\n    onToggleSummarize(group);\n    ev.stopPropagation();\n    ev.preventDefault();\n  }, [onToggleSummarize, group]);\n  if (group) {\n    return React.createElement(\"div\", {\n      className: classNames.root\n    }, React.createElement(GroupSpacer, {\n      count: groupLevel\n    }), React.createElement(Link, {\n      onClick: memoizedOnClick\n    }, showAllLinkText));\n  }\n  return null;\n};","map":{"version":3,"sources":["components/GroupedList/GroupShowAll.base.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,WAAW,QAAQ,OAAO;AACnC,SAAS,kBAAkB,QAAQ,iBAAiB;AACpD,SAAS,IAAI,QAAQ,YAAY;AAGjC,SAAS,WAAW,QAAQ,eAAe;AAE3C,IAAM,aAAa,GAAG,kBAAkB,CAAA,CAAgD;AAExF,OAAO,IAAM,gBAAgB,GAAgD,SAAA,CAAA,KAAK,EAAA;EACxE,IAAA,KAAA,GAAA,KAAA,CAAA,KAAK;IAAE,UAAA,GAAA,KAAA,CAAA,UAAU;IAAE,EAAA,GAAA,KAAA,CAAA,eAA4B;IAA5B,eAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,UAAA,GAAA,EAA4B;IAAE,MAAA,GAAA,KAAA,CAAA,MAAM;IAAE,KAAA,GAAA,KAAA,CAAA,KAAK;IAAE,iBAAA,GAAA,KAAA,CAAA,iBAAiB;EACzF,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;IAAE,KAAK,EAAE;EAAM,CAAE,CAAC;EAE3D,IAAM,eAAe,GAAG,WAAW,CACjC,UAAC,EAAiC,EAAA;IAChC,iBAAkB,CAAC,KAAM,CAAC;IAE1B,EAAE,CAAC,eAAe,CAAA,CAAE;IACpB,EAAE,CAAC,cAAc,CAAA,CAAE;EACrB,CAAC,EACD,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAC3B;EAED,IAAI,KAAK,EAAE;IACT,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,UAAU,CAAC;IAAI,CAAA,EAC7B,KAAA,CAAA,aAAA,CAAC,WAAW,EAAA;MAAC,KAAK,EAAE;IAAW,CAAA,CAAI,EACnC,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;MAAC,OAAO,EAAE;IAAe,CAAA,EAAG,eAAe,CAAQ,CACpD;EAET;EAED,OAAO,IAAI;AACb,CAAC","sourcesContent":["import * as React from 'react';\nimport { useCallback } from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { Link } from '../../Link';\nimport { IGroupShowAllProps } from './GroupShowAll.types';\nimport { IGroupShowAllStyleProps, IGroupShowAllStyles } from './GroupShowAll.types';\nimport { GroupSpacer } from './GroupSpacer';\n\nconst getClassNames = classNamesFunction<IGroupShowAllStyleProps, IGroupShowAllStyles>();\n\nexport const GroupShowAllBase: React.FunctionComponent<IGroupShowAllProps> = props => {\n  const { group, groupLevel, showAllLinkText = 'Show All', styles, theme, onToggleSummarize } = props;\n  const classNames = getClassNames(styles, { theme: theme! });\n\n  const memoizedOnClick = useCallback(\n    (ev: React.MouseEvent<HTMLElement>) => {\n      onToggleSummarize!(group!);\n\n      ev.stopPropagation();\n      ev.preventDefault();\n    },\n    [onToggleSummarize, group],\n  );\n\n  if (group) {\n    return (\n      <div className={classNames.root}>\n        <GroupSpacer count={groupLevel!} />\n        <Link onClick={memoizedOnClick}>{showAllLinkText}</Link>\n      </div>\n    );\n  }\n\n  return null;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}