{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseSelectedItemsList } from '../BaseSelectedItemsList';\nimport { ExtendedSelectedItem } from './Items/ExtendedSelectedItem';\nimport { SelectedItemWithContextMenu } from './Items/SelectedItemWithContextMenu';\nimport { EditingItem } from './Items/EditingItem';\n/**\n * {@docCategory SelectedPeopleList}\n */\nvar BasePeopleSelectedItemsList = /** @class */function (_super) {\n  __extends(BasePeopleSelectedItemsList, _super);\n  function BasePeopleSelectedItemsList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return BasePeopleSelectedItemsList;\n}(BaseSelectedItemsList);\nexport { BasePeopleSelectedItemsList };\n/**\n * Standard People Picker.\n */\nvar SelectedPeopleList = /** @class */function (_super) {\n  __extends(SelectedPeopleList, _super);\n  function SelectedPeopleList() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.renderItems = function () {\n      var items = _this.state.items;\n      return items.map(function (item, index) {\n        return _this._renderItem(item, index);\n      });\n    };\n    _this._beginEditing = function (item) {\n      item.isEditing = true;\n      _this.forceUpdate();\n    };\n    _this._completeEditing = function (oldItem, newItem) {\n      oldItem.isEditing = false;\n      _this.replaceItem(oldItem, newItem);\n    };\n    return _this;\n  }\n  SelectedPeopleList.prototype._renderItem = function (item, index) {\n    var _this = this;\n    var removeButtonAriaLabel = this.props.removeButtonAriaLabel;\n    var expandGroup = this.props.onExpandGroup;\n    var props = {\n      item: item,\n      index: index,\n      key: item.key ? item.key : index,\n      selected: this.selection.isIndexSelected(index),\n      onRemoveItem: function () {\n        return _this.removeItem(item);\n      },\n      onItemChange: this.onItemChange,\n      removeButtonAriaLabel: removeButtonAriaLabel,\n      onCopyItem: function (itemToCopy) {\n        return _this.copyItems([itemToCopy]);\n      },\n      onExpandItem: expandGroup ? function () {\n        return expandGroup(item);\n      } : undefined,\n      menuItems: this._createMenuItems(item)\n    };\n    var hasContextMenu = props.menuItems.length > 0;\n    if (item.isEditing && hasContextMenu) {\n      return React.createElement(EditingItem, __assign({}, props, {\n        onRenderFloatingPicker: this.props.onRenderFloatingPicker,\n        floatingPickerProps: this.props.floatingPickerProps,\n        onEditingComplete: this._completeEditing,\n        getEditingItemText: this.props.getEditingItemText\n      }));\n    } else {\n      // This cast is here because we are guaranteed that onRenderItem is set\n      // from static defaultProps\n      // TODO: Move this component to composition with required onRenderItem to remove\n      // this cast.\n      var onRenderItem = this.props.onRenderItem;\n      var renderedItem = onRenderItem(props);\n      return hasContextMenu ? React.createElement(SelectedItemWithContextMenu, {\n        key: props.key,\n        renderedItem: renderedItem,\n        beginEditing: this._beginEditing,\n        menuItems: this._createMenuItems(props.item),\n        item: props.item\n      }) : renderedItem;\n    }\n  };\n  SelectedPeopleList.prototype._createMenuItems = function (item) {\n    var _this = this;\n    var menuItems = [];\n    if (this.props.editMenuItemText && this.props.getEditingItemText) {\n      menuItems.push({\n        key: 'Edit',\n        text: this.props.editMenuItemText,\n        onClick: function (ev, menuItem) {\n          _this._beginEditing(menuItem.data);\n        },\n        data: item\n      });\n    }\n    if (this.props.removeMenuItemText) {\n      menuItems.push({\n        key: 'Remove',\n        text: this.props.removeMenuItemText,\n        onClick: function (ev, menuItem) {\n          _this.removeItem(menuItem.data);\n        },\n        data: item\n      });\n    }\n    if (this.props.copyMenuItemText) {\n      menuItems.push({\n        key: 'Copy',\n        text: this.props.copyMenuItemText,\n        onClick: function (ev, menuItem) {\n          if (_this.props.onCopyItems) {\n            _this.copyItems([menuItem.data]);\n          }\n        },\n        data: item\n      });\n    }\n    return menuItems;\n  };\n  SelectedPeopleList.defaultProps = {\n    onRenderItem: function (props) {\n      return React.createElement(ExtendedSelectedItem, __assign({}, props));\n    }\n  };\n  return SelectedPeopleList;\n}(BasePeopleSelectedItemsList);\nexport { SelectedPeopleList };","map":{"version":3,"sources":["components/SelectedItemsList/SelectedPeopleList/SelectedPeopleList.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { BaseSelectedItemsList } from '../BaseSelectedItemsList';\nimport { IBaseSelectedItemsListProps, ISelectedItemProps } from '../BaseSelectedItemsList.types';\nimport { IPersonaProps } from '../../../Persona';\nimport { ExtendedSelectedItem } from './Items/ExtendedSelectedItem';\nimport { SelectedItemWithContextMenu } from './Items/SelectedItemWithContextMenu';\nimport { IRenderFunction } from '../../../Utilities';\nimport { IContextualMenuItem } from '../../../ContextualMenu';\nimport { IBaseFloatingPickerProps } from '../../../FloatingPicker';\nimport { EditingItem } from './Items/EditingItem';\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport interface IExtendedPersonaProps extends IPersonaProps {\n  key?: React.Key;\n  isValid: boolean;\n  blockRecipientRemoval?: boolean;\n  shouldBlockSelection?: boolean;\n  canExpand?: boolean;\n  isEditing?: boolean;\n}\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport interface ISelectedPeopleItemProps extends ISelectedItemProps<IExtendedPersonaProps> {\n  onExpandItem?: () => void;\n  renderPersonaCoin?: IRenderFunction<IPersonaProps>;\n  renderPrimaryText?: IRenderFunction<IPersonaProps>;\n}\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport interface ISelectedPeopleProps extends IBaseSelectedItemsListProps<IExtendedPersonaProps> {\n  onExpandGroup?: (item: IExtendedPersonaProps) => void;\n  removeMenuItemText?: string;\n  copyMenuItemText?: string;\n  editMenuItemText?: string;\n  getEditingItemText?: (item: IExtendedPersonaProps) => string;\n  onRenderFloatingPicker?: React.ComponentType<IBaseFloatingPickerProps<IPersonaProps>>;\n  floatingPickerProps?: IBaseFloatingPickerProps<IPersonaProps>;\n}\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport class BasePeopleSelectedItemsList extends BaseSelectedItemsList<IExtendedPersonaProps, ISelectedPeopleProps> {}\n\n/**\n * Standard People Picker.\n */\nexport class SelectedPeopleList extends BasePeopleSelectedItemsList {\n  public static defaultProps: any = {\n    onRenderItem: (props: ISelectedPeopleItemProps) => <ExtendedSelectedItem {...props} />,\n  };\n\n  protected renderItems = (): JSX.Element[] => {\n    const { items } = this.state;\n    return items.map((item: IExtendedPersonaProps, index: number) => this._renderItem(item, index));\n  };\n\n  private _renderItem(item: IExtendedPersonaProps, index: number): JSX.Element {\n    const { removeButtonAriaLabel } = this.props;\n    const expandGroup = this.props.onExpandGroup;\n    const props = {\n      item,\n      index,\n      key: item.key ? item.key : index,\n      selected: this.selection.isIndexSelected(index),\n      onRemoveItem: () => this.removeItem(item),\n      onItemChange: this.onItemChange,\n      removeButtonAriaLabel: removeButtonAriaLabel,\n      onCopyItem: (itemToCopy: IExtendedPersonaProps) => this.copyItems([itemToCopy]),\n      onExpandItem: expandGroup ? () => expandGroup(item) : undefined,\n      menuItems: this._createMenuItems(item),\n    };\n\n    const hasContextMenu = props.menuItems.length > 0;\n    if ((item as IExtendedPersonaProps).isEditing && hasContextMenu) {\n      return (\n        <EditingItem\n          {...props}\n          onRenderFloatingPicker={this.props.onRenderFloatingPicker}\n          floatingPickerProps={this.props.floatingPickerProps}\n          onEditingComplete={this._completeEditing}\n          getEditingItemText={this.props.getEditingItemText}\n        />\n      );\n    } else {\n      // This cast is here because we are guaranteed that onRenderItem is set\n      // from static defaultProps\n      // TODO: Move this component to composition with required onRenderItem to remove\n      // this cast.\n      const onRenderItem = this.props.onRenderItem as (props: ISelectedPeopleItemProps) => JSX.Element;\n      const renderedItem = onRenderItem(props);\n      return hasContextMenu ? (\n        <SelectedItemWithContextMenu\n          key={props.key}\n          renderedItem={renderedItem}\n          beginEditing={this._beginEditing}\n          menuItems={this._createMenuItems(props.item)}\n          item={props.item}\n        />\n      ) : (\n        renderedItem\n      );\n    }\n  }\n\n  private _beginEditing = (item: IExtendedPersonaProps): void => {\n    item.isEditing = true;\n    this.forceUpdate();\n  };\n\n  private _completeEditing = (oldItem: any, newItem: any): void => {\n    oldItem.isEditing = false;\n    this.replaceItem(oldItem, newItem);\n  };\n\n  private _createMenuItems(item: any): IContextualMenuItem[] {\n    const menuItems: IContextualMenuItem[] = [];\n\n    if (this.props.editMenuItemText && this.props.getEditingItemText) {\n      menuItems.push({\n        key: 'Edit',\n        text: this.props.editMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          this._beginEditing(menuItem.data);\n        },\n        data: item,\n      });\n    }\n\n    if (this.props.removeMenuItemText) {\n      menuItems.push({\n        key: 'Remove',\n        text: this.props.removeMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          this.removeItem(menuItem.data as IExtendedPersonaProps);\n        },\n        data: item,\n      });\n    }\n\n    if (this.props.copyMenuItemText) {\n      menuItems.push({\n        key: 'Copy',\n        text: this.props.copyMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          if (this.props.onCopyItems) {\n            (this.copyItems as (items: IExtendedPersonaProps[]) => void)([menuItem.data] as IExtendedPersonaProps[]);\n          }\n        },\n        data: item,\n      });\n    }\n\n    return menuItems;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}