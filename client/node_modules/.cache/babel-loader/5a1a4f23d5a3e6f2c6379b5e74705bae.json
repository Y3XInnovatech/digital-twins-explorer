{"ast":null,"code":"var _jsxFileName = \"/home/saharsh/digital-twins-explorer/client/src/components/ErrorMessageComponent/ErrorMessageBar.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { MessageBar, MessageBarType } from \"office-ui-fabric-react\";\nimport React, { Component } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { eventService } from \"../../services/EventService\";\nimport \"./ErrorMessage.scss\";\nimport { isDtdlVersion3 } from \"./ErrorMessageHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ErrorMessageBar extends Component {\n  constructor(props) {\n    super(props);\n    this.close = () => {\n      eventService.publishHideWarningMessage();\n      this.setState({\n        showBar: false\n      });\n    };\n    this.state = {\n      incomatibleLangauageVersion: false,\n      showBar: true\n    };\n  }\n  componentDidMount() {\n    eventService.subscribeError(exc => {\n      if (isDtdlVersion3(exc)) {\n        this.setState({\n          incomatibleLangauageVersion: true\n        });\n      }\n    });\n  }\n  render() {\n    const {\n      incomatibleLangauageVersion,\n      showBar\n    } = this.state;\n    if (incomatibleLangauageVersion && showBar) {\n      // Just show a warning that v3 isn't fully supported at this time.\n      return /*#__PURE__*/_jsxDEV(MessageBar, {\n        messageBarType: MessageBarType.warning,\n        isMultiline: false,\n        onDismiss: this.close,\n        dismissButtonAriaLabel: this.props.t(\"errorMessages.closeButton\"),\n        children: this.props.t(\"errorMessages.incompatibleLanguageVersion\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default withTranslation(\"translation\", {\n  withRef: true\n})(ErrorMessageBar);","map":{"version":3,"names":["MessageBar","MessageBarType","React","Component","withTranslation","eventService","isDtdlVersion3","jsxDEV","_jsxDEV","ErrorMessageBar","constructor","props","close","publishHideWarningMessage","setState","showBar","state","incomatibleLangauageVersion","componentDidMount","subscribeError","exc","render","messageBarType","warning","isMultiline","onDismiss","dismissButtonAriaLabel","t","children","fileName","_jsxFileName","lineNumber","columnNumber","withRef"],"sources":["/home/saharsh/digital-twins-explorer/client/src/components/ErrorMessageComponent/ErrorMessageBar.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { MessageBar, MessageBarType } from \"office-ui-fabric-react\";\nimport React, { Component } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { eventService } from \"../../services/EventService\";\n\nimport \"./ErrorMessage.scss\";\nimport { isDtdlVersion3 } from \"./ErrorMessageHelper\";\n\nclass ErrorMessageBar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      incomatibleLangauageVersion: false,\n      showBar: true\n    };\n  }\n\n  componentDidMount() {\n    eventService.subscribeError(exc => {\n      if (isDtdlVersion3(exc)) {\n        this.setState({\n          incomatibleLangauageVersion: true\n        });\n      }\n    });\n  }\n\n  close = () => {\n    eventService.publishHideWarningMessage();\n    this.setState({\n      showBar: false\n    });\n  }\n\n  render() {\n    const { incomatibleLangauageVersion, showBar } = this.state;\n    if (incomatibleLangauageVersion && showBar) {\n      // Just show a warning that v3 isn't fully supported at this time.\n      return (\n        <MessageBar\n          messageBarType={MessageBarType.warning}\n          isMultiline={false}\n          onDismiss={this.close}\n          dismissButtonAriaLabel={this.props.t(\"errorMessages.closeButton\")}>\n          {this.props.t(\"errorMessages.incompatibleLanguageVersion\")}\n        </MessageBar>\n      );\n    }\n    return (<div />);\n  }\n\n}\n\nexport default withTranslation(\"translation\", { withRef: true })(ErrorMessageBar);\n"],"mappings":";AAAA;AACA;;AAEA,SAASA,UAAU,EAAEC,cAAc,QAAQ,wBAAwB;AACnE,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,eAAe,QAAQ,eAAe;AAC/C,SAASC,YAAY,QAAQ,6BAA6B;AAE1D,OAAO,qBAAqB;AAC5B,SAASC,cAAc,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,eAAe,SAASN,SAAS,CAAC;EAEtCO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAiBfC,KAAK,GAAG,MAAM;MACZP,YAAY,CAACQ,yBAAyB,CAAC,CAAC;MACxC,IAAI,CAACC,QAAQ,CAAC;QACZC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC;IArBC,IAAI,CAACC,KAAK,GAAG;MACXC,2BAA2B,EAAE,KAAK;MAClCF,OAAO,EAAE;IACX,CAAC;EACH;EAEAG,iBAAiBA,CAAA,EAAG;IAClBb,YAAY,CAACc,cAAc,CAACC,GAAG,IAAI;MACjC,IAAId,cAAc,CAACc,GAAG,CAAC,EAAE;QACvB,IAAI,CAACN,QAAQ,CAAC;UACZG,2BAA2B,EAAE;QAC/B,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EASAI,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEJ,2BAA2B;MAAEF;IAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;IAC3D,IAAIC,2BAA2B,IAAIF,OAAO,EAAE;MAC1C;MACA,oBACEP,OAAA,CAACR,UAAU;QACTsB,cAAc,EAAErB,cAAc,CAACsB,OAAQ;QACvCC,WAAW,EAAE,KAAM;QACnBC,SAAS,EAAE,IAAI,CAACb,KAAM;QACtBc,sBAAsB,EAAE,IAAI,CAACf,KAAK,CAACgB,CAAC,CAAC,2BAA2B,CAAE;QAAAC,QAAA,EACjE,IAAI,CAACjB,KAAK,CAACgB,CAAC,CAAC,2CAA2C;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAEjB;IACA,oBAAQxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACjB;AAEF;AAEA,eAAe5B,eAAe,CAAC,aAAa,EAAE;EAAE6B,OAAO,EAAE;AAAK,CAAC,CAAC,CAACxB,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}