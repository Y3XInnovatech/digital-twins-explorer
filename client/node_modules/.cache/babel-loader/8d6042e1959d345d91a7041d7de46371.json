{"ast":null,"code":"import { __extends, __spreadArrays } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, css, getId, getRTL, getRTLSafeKeyCode, format, findIndex, find, initializeComponentRef } from '../../Utilities';\nimport { DateRangeType } from '../../utilities/dateValues/DateValues';\nimport { FocusZone } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport { addDays, addWeeks, addMonths, compareDates, compareDatePart, getDateRangeArray, isInDateRangeArray, getWeekNumber, getWeekNumbersInMonth, getMonthStart, getMonthEnd } from '../../utilities/dateMath/DateMath';\nimport * as stylesImport from './Calendar.scss';\nvar styles = stylesImport;\nvar DAYS_IN_WEEK = 7;\nvar CalendarDay = /** @class */function (_super) {\n  __extends(CalendarDay, _super);\n  function CalendarDay(props) {\n    var _this = _super.call(this, props) || this;\n    _this.days = {};\n    _this._onKeyDown = function (callback, ev) {\n      if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n        callback();\n      }\n    };\n    _this._onDayKeyDown = function (originalDate, weekIndex, dayIndex) {\n      return function (ev) {\n        if (ev.which === KeyCodes.enter) {\n          _this._onSelectDate(originalDate, ev);\n          ev.preventDefault();\n        } else {\n          _this._navigateMonthEdge(ev, originalDate, weekIndex, dayIndex);\n        }\n      };\n    };\n    _this._onDayMouseDown = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // set the press styling\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.add(styles.dayPress);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.add(styles.dayPress);\n              ref.classList.add(styles.dayIsHighlighted);\n            } else if (ref) {\n              ref.classList.remove(styles.dayIsHighlighted);\n            }\n          });\n        }\n      };\n    };\n    _this._onDayMouseUp = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // remove press styling\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.remove(styles.dayPress);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.remove(styles.dayPress);\n            }\n          });\n        }\n      };\n    };\n    _this._onDayMouseOver = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // set the hover styling on every day in the same month\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.add(styles.dayHover);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.add(styles.dayHover);\n            }\n          });\n        }\n      };\n    };\n    _this._onDayMouseLeave = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // remove the hover and pressed styling\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.remove(styles.dayHover);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.remove(styles.dayHover);\n            }\n          });\n        }\n      };\n    };\n    _this._onTableMouseLeave = function (ev) {\n      if (ev.target.contains && ev.relatedTarget && ev.relatedTarget.contains && ev.target.contains(ev.relatedTarget)) {\n        return;\n      }\n      _this._applyFunctionToDayRefs(function (ref, day) {\n        if (ref) {\n          ref.classList.remove(styles.dayHover);\n          ref.classList.remove(styles.dayPress);\n        }\n      });\n    };\n    _this._onTableMouseUp = function (ev) {\n      if (ev.target.contains && ev.relatedTarget && ev.relatedTarget.contains && ev.target.contains(ev.relatedTarget)) {\n        return;\n      }\n      _this._applyFunctionToDayRefs(function (ref, day) {\n        if (ref) {\n          ref.classList.remove(styles.dayPress);\n        }\n      });\n    };\n    _this._onSelectDate = function (selectedDate, ev) {\n      var _a = _this.props,\n        onSelectDate = _a.onSelectDate,\n        dateRangeType = _a.dateRangeType,\n        firstDayOfWeek = _a.firstDayOfWeek,\n        navigatedDate = _a.navigatedDate,\n        autoNavigateOnSelection = _a.autoNavigateOnSelection,\n        minDate = _a.minDate,\n        maxDate = _a.maxDate,\n        workWeekDays = _a.workWeekDays;\n      if (ev) {\n        ev.stopPropagation();\n      }\n      var dateRange = getDateRangeArray(selectedDate, dateRangeType, firstDayOfWeek, workWeekDays);\n      if (dateRangeType !== DateRangeType.Day) {\n        dateRange = _this._getBoundedDateRange(dateRange, minDate, maxDate);\n      }\n      dateRange = dateRange.filter(function (d) {\n        return !_this._getIsRestrictedDate(d);\n      });\n      if (onSelectDate) {\n        onSelectDate(selectedDate, dateRange);\n      }\n      // Navigate to next or previous month if needed\n      if (autoNavigateOnSelection && selectedDate.getMonth() !== navigatedDate.getMonth()) {\n        var compareResult = compareDatePart(selectedDate, navigatedDate);\n        if (compareResult < 0) {\n          _this._onSelectPrevMonth();\n        } else if (compareResult > 0) {\n          _this._onSelectNextMonth();\n        }\n      }\n    };\n    _this._onSelectNextMonth = function () {\n      _this.props.onNavigateDate(addMonths(_this.props.navigatedDate, 1), false);\n    };\n    _this._onSelectPrevMonth = function () {\n      _this.props.onNavigateDate(addMonths(_this.props.navigatedDate, -1), false);\n    };\n    _this._onClose = function () {\n      if (_this.props.onDismiss) {\n        _this.props.onDismiss();\n      }\n    };\n    _this._onHeaderSelect = function () {\n      var onHeaderSelect = _this.props.onHeaderSelect;\n      if (onHeaderSelect) {\n        onHeaderSelect(true);\n      }\n    };\n    _this._onHeaderKeyDown = function (ev) {\n      var onHeaderSelect = _this.props.onHeaderSelect;\n      if (onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n        onHeaderSelect(true);\n      }\n    };\n    _this._onPrevMonthKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onKeyDown(_this._onSelectPrevMonth, ev);\n      }\n    };\n    _this._onNextMonthKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onKeyDown(_this._onSelectNextMonth, ev);\n      }\n    };\n    _this._onCloseButtonKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onKeyDown(_this._onClose, ev);\n      }\n    };\n    initializeComponentRef(_this);\n    _this.state = {\n      activeDescendantId: getId('DatePickerDay-active'),\n      weeks: _this._getWeeks(props)\n    };\n    _this._onSelectNextMonth = _this._onSelectNextMonth.bind(_this);\n    _this._onSelectPrevMonth = _this._onSelectPrevMonth.bind(_this);\n    _this._onClose = _this._onClose.bind(_this);\n    return _this;\n  }\n  CalendarDay.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    this.setState({\n      weeks: this._getWeeks(nextProps)\n    });\n  };\n  CalendarDay.prototype.render = function () {\n    var _a, _b;\n    var _this = this;\n    var _c = this.state,\n      activeDescendantId = _c.activeDescendantId,\n      weeks = _c.weeks;\n    var _d = this.props,\n      firstDayOfWeek = _d.firstDayOfWeek,\n      strings = _d.strings,\n      navigatedDate = _d.navigatedDate,\n      selectedDate = _d.selectedDate,\n      dateRangeType = _d.dateRangeType,\n      navigationIcons = _d.navigationIcons,\n      showWeekNumbers = _d.showWeekNumbers,\n      firstWeekOfYear = _d.firstWeekOfYear,\n      dateTimeFormatter = _d.dateTimeFormatter,\n      minDate = _d.minDate,\n      maxDate = _d.maxDate,\n      showCloseButton = _d.showCloseButton,\n      allFocusable = _d.allFocusable;\n    var dayPickerId = getId('DatePickerDay-dayPicker');\n    var monthAndYearId = getId('DatePickerDay-monthAndYear');\n    var leftNavigationIcon = navigationIcons.leftNavigation;\n    var rightNavigationIcon = navigationIcons.rightNavigation;\n    var closeNavigationIcon = navigationIcons.closeIcon;\n    var weekNumbers = showWeekNumbers ? getWeekNumbersInMonth(weeks.length, firstDayOfWeek, firstWeekOfYear, navigatedDate) : null;\n    var selectedDateWeekNumber = showWeekNumbers ? getWeekNumber(selectedDate, firstDayOfWeek, firstWeekOfYear) : undefined;\n    // When the month is highlighted get the corner dates so that styles can be added to them\n    var weekCorners = this._getWeekCornerStyles(weeks, dateRangeType);\n    // determine if previous/next months are in bounds\n    var prevMonthInBounds = minDate ? compareDatePart(minDate, getMonthStart(navigatedDate)) < 0 : true;\n    var nextMonthInBounds = maxDate ? compareDatePart(getMonthEnd(navigatedDate), maxDate) < 0 : true;\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-dayPicker', styles.dayPicker, showWeekNumbers && 'ms-DatePicker-showWeekNumbers' && (getRTL() ? styles.showWeekNumbersRTL : styles.showWeekNumbers)),\n      id: dayPickerId\n    }, React.createElement(\"div\", {\n      className: css('ms-DatePicker-header', styles.header)\n    }, React.createElement(\"div\", {\n      \"aria-live\": \"polite\",\n      \"aria-relevant\": \"text\",\n      \"aria-atomic\": \"true\",\n      id: monthAndYearId,\n      className: styles.monthAndYear\n    }, this.props.onHeaderSelect ? React.createElement(\"div\", {\n      className: css('ms-DatePicker-monthAndYear js-showMonthPicker', styles.headerToggleView),\n      onClick: this._onHeaderSelect,\n      onKeyDown: this._onHeaderKeyDown,\n      \"aria-label\": dateTimeFormatter.formatMonthYear(navigatedDate, strings),\n      role: \"button\",\n      tabIndex: 0\n    }, dateTimeFormatter.formatMonthYear(navigatedDate, strings)) : React.createElement(\"div\", {\n      className: css('ms-DatePicker-monthAndYear', styles.monthAndYear)\n    }, dateTimeFormatter.formatMonthYear(navigatedDate, strings))), React.createElement(\"div\", {\n      className: css('ms-DatePicker-monthComponents', styles.monthComponents)\n    }, React.createElement(\"div\", {\n      className: css('ms-DatePicker-navContainer', styles.navContainer)\n    }, React.createElement(\"button\", {\n      className: css('ms-DatePicker-prevMonth js-prevMonth', styles.prevMonth, (_a = {}, _a['ms-DatePicker-prevMonth--disabled ' + styles.prevMonthIsDisabled] = !prevMonthInBounds, _a)),\n      disabled: !allFocusable && !prevMonthInBounds,\n      \"aria-disabled\": !prevMonthInBounds,\n      onClick: prevMonthInBounds ? this._onSelectPrevMonth : undefined,\n      onKeyDown: prevMonthInBounds ? this._onPrevMonthKeyDown : undefined,\n      \"aria-controls\": dayPickerId,\n      title: strings.prevMonthAriaLabel ? strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, -1).getMonth()] : undefined,\n      role: \"button\",\n      type: \"button\"\n    }, React.createElement(Icon, {\n      iconName: leftNavigationIcon\n    })), React.createElement(\"button\", {\n      className: css('ms-DatePicker-nextMonth js-nextMonth', styles.nextMonth, (_b = {}, _b['ms-DatePicker-nextMonth--disabled ' + styles.nextMonthIsDisabled] = !nextMonthInBounds, _b)),\n      disabled: !allFocusable && !nextMonthInBounds,\n      \"aria-disabled\": !nextMonthInBounds,\n      onClick: nextMonthInBounds ? this._onSelectNextMonth : undefined,\n      onKeyDown: nextMonthInBounds ? this._onNextMonthKeyDown : undefined,\n      \"aria-controls\": dayPickerId,\n      title: strings.nextMonthAriaLabel ? strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, 1).getMonth()] : undefined,\n      role: \"button\",\n      type: \"button\"\n    }, React.createElement(Icon, {\n      iconName: rightNavigationIcon\n    })), showCloseButton && React.createElement(\"button\", {\n      className: css('ms-DatePicker-closeButton js-closeButton', styles.closeButton),\n      onClick: this._onClose,\n      onKeyDown: this._onCloseButtonKeyDown,\n      title: strings.closeButtonAriaLabel,\n      role: \"button\",\n      type: \"button\"\n    }, React.createElement(Icon, {\n      iconName: closeNavigationIcon\n    }))))), React.createElement(FocusZone, null, React.createElement(\"table\", {\n      className: css('ms-DatePicker-table', styles.table),\n      \"aria-readonly\": \"true\",\n      \"aria-multiselectable\": \"false\",\n      \"aria-labelledby\": monthAndYearId,\n      \"aria-activedescendant\": activeDescendantId,\n      role: \"grid\"\n    }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, showWeekNumbers && React.createElement(\"th\", {\n      className: css('ms-DatePicker-weekday', styles.weekday)\n    }), strings.shortDays.map(function (val, index) {\n      return React.createElement(\"th\", {\n        className: css('ms-DatePicker-weekday', styles.weekday),\n        role: \"columnheader\",\n        scope: \"col\",\n        key: index,\n        title: strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK],\n        \"aria-label\": strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK],\n        \"data-is-focusable\": allFocusable ? true : undefined\n      }, strings.shortDays[(index + firstDayOfWeek) % DAYS_IN_WEEK]);\n    }))), React.createElement(\"tbody\", {\n      onMouseLeave: dateRangeType !== DateRangeType.Day ? this._onTableMouseLeave : undefined,\n      onMouseUp: dateRangeType !== DateRangeType.Day ? this._onTableMouseUp : undefined\n    }, weeks.map(function (week, weekIndex) {\n      var _a;\n      return React.createElement(\"tr\", {\n        key: weekNumbers ? weekNumbers[weekIndex] : weekIndex\n      }, showWeekNumbers && weekNumbers && React.createElement(\"th\", {\n        className: css('ms-DatePicker-weekNumbers', 'ms-DatePicker-weekday', styles.weekday, styles.weekNumbers),\n        key: weekIndex,\n        title: weekNumbers && strings.weekNumberFormatString && format(strings.weekNumberFormatString, weekNumbers[weekIndex]),\n        \"aria-label\": weekNumbers && strings.weekNumberFormatString && format(strings.weekNumberFormatString, weekNumbers[weekIndex]),\n        scope: \"row\"\n      }, React.createElement(\"div\", {\n        className: css('ms-DatePicker-day', styles.day, (_a = {}, _a['ms-DatePicker-week--highlighted ' + styles.weekIsHighlighted] = selectedDateWeekNumber === weekNumbers[weekIndex], _a))\n      }, React.createElement(\"span\", null, weekNumbers[weekIndex]))), week.map(function (day, dayIndex) {\n        var _a, _b;\n        var isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n        return React.createElement(\"td\", {\n          key: day.key,\n          onClick: day.isInBounds ? day.onSelected : undefined,\n          className: css(styles.dayWrapper, 'ms-DatePicker-day', _this._getHighlightedCornerStyle(weekCorners, dayIndex, weekIndex), (_a = {}, _a['ms-DatePicker-weekBackground ' + styles.weekBackground] = day.isSelected && (dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek), _a['ms-DatePicker-dayBackground ' + styles.dayBackground] = dateRangeType === DateRangeType.Day, _a['ms-DatePicker-day--highlighted ' + styles.dayIsHighlighted] = day.isSelected && dateRangeType === DateRangeType.Day, _a['ms-DatePicker-day--infocus ' + styles.dayIsFocused] = day.isInBounds && day.isInMonth, _a['ms-DatePicker-day--outfocus ' + styles.dayIsUnfocused] = day.isInBounds && !day.isInMonth, _a[styles.daySelection] = dateRangeType === DateRangeType.Day, _a[styles.weekSelection] = dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek, _a[styles.monthSelection] = dateRangeType === DateRangeType.Month, _a)),\n          ref: function (element) {\n            return _this._setDayCellRef(element, day, isNavigatedDate);\n          },\n          onMouseOver: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseOver(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          onMouseLeave: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseLeave(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          onMouseDown: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseDown(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          onMouseUp: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseUp(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          role: 'gridcell'\n        }, React.createElement(\"button\", {\n          key: day.key + 'button',\n          onClick: day.isInBounds ? day.onSelected : undefined,\n          className: css(styles.day, 'ms-DatePicker-day-button', (_b = {}, _b['ms-DatePicker-day--disabled ' + styles.dayIsDisabled] = !day.isInBounds, _b['ms-DatePicker-day--today ' + styles.dayIsToday] = day.isToday, _b)),\n          onKeyDown: _this._onDayKeyDown(day.originalDate, weekIndex, dayIndex),\n          \"aria-label\": dateTimeFormatter.formatMonthDayYear(day.originalDate, strings),\n          id: isNavigatedDate ? activeDescendantId : undefined,\n          \"aria-readonly\": true,\n          \"aria-current\": day.isToday ? 'date' : undefined,\n          \"aria-selected\": day.isInBounds ? day.isSelected : undefined,\n          \"data-is-focusable\": allFocusable || (day.isInBounds ? true : undefined),\n          ref: function (element) {\n            return _this._setDayRef(element, day, isNavigatedDate);\n          },\n          disabled: !allFocusable && !day.isInBounds,\n          \"aria-disabled\": !day.isInBounds,\n          type: \"button\"\n        }, React.createElement(\"span\", {\n          \"aria-hidden\": \"true\"\n        }, dateTimeFormatter.formatDay(day.originalDate))));\n      }));\n    })))));\n  };\n  CalendarDay.prototype.focus = function () {\n    if (this.navigatedDay) {\n      this.navigatedDay.tabIndex = 0;\n      this.navigatedDay.focus();\n    }\n  };\n  CalendarDay.prototype._setDayRef = function (element, day, isNavigatedDate) {\n    if (isNavigatedDate) {\n      this.navigatedDay = element;\n    }\n  };\n  CalendarDay.prototype._setDayCellRef = function (element, day, isNavigatedDate) {\n    this.days[day.key] = element;\n  };\n  CalendarDay.prototype._getWeekCornerStyles = function (weeks, dateRangeType) {\n    var _this = this;\n    var weekCornersStyled = {};\n    switch (dateRangeType) {\n      case DateRangeType.Month:\n        /* need to handle setting all of the corners on arbitrarily shaped blobs\n              __\n           __|A |\n          |B |C |__\n          |D |E |F |\n                   in this case, A needs top left rounded, top right rounded\n          B needs top left rounded\n          C doesn't need any rounding\n          D needs bottom left rounded\n          E doesn't need any rounding\n          F needs top right rounding\n        */\n        // if there's an item above, lose both top corners. Item below, lose both bottom corners, etc.\n        weeks.forEach(function (week, weekIndex) {\n          week.forEach(function (day, dayIndex) {\n            var above = weeks[weekIndex - 1] && weeks[weekIndex - 1][dayIndex] && weeks[weekIndex - 1][dayIndex].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var below = weeks[weekIndex + 1] && weeks[weekIndex + 1][dayIndex] && weeks[weekIndex + 1][dayIndex].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var left = weeks[weekIndex][dayIndex - 1] && weeks[weekIndex][dayIndex - 1].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var right = weeks[weekIndex][dayIndex + 1] && weeks[weekIndex][dayIndex + 1].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var roundedTopLeft = !above && !left;\n            var roundedTopRight = !above && !right;\n            var roundedBottomLeft = !below && !left;\n            var roundedBottomRight = !below && !right;\n            var style = '';\n            if (roundedTopLeft) {\n              style = getRTL() ? style.concat(styles.topRightCornerDate + ' ') : style.concat(styles.topLeftCornerDate + ' ');\n            }\n            if (roundedTopRight) {\n              style = getRTL() ? style.concat(styles.topLeftCornerDate + ' ') : style.concat(styles.topRightCornerDate + ' ');\n            }\n            if (roundedBottomLeft) {\n              style = getRTL() ? style.concat(styles.bottomRightCornerDate + ' ') : style.concat(styles.bottomLeftCornerDate + ' ');\n            }\n            if (roundedBottomRight) {\n              style = getRTL() ? style.concat(styles.bottomLeftCornerDate + ' ') : style.concat(styles.bottomRightCornerDate + ' ');\n            }\n            if (!above) {\n              style = style.concat(styles.topDate + ' ');\n            }\n            if (!below) {\n              style = style.concat(styles.bottomDate + ' ');\n            }\n            if (!right) {\n              style = style.concat(styles.rightDate + ' ');\n            }\n            if (!left) {\n              style = style.concat(styles.leftdate + ' ');\n            }\n            weekCornersStyled[weekIndex + '_' + dayIndex] = style;\n          });\n        });\n        break;\n      case DateRangeType.Week:\n      case DateRangeType.WorkWeek:\n        weeks.forEach(function (week, weekIndex) {\n          var minIndex = findIndex(week, function (item) {\n            return item.isInBounds;\n          });\n          var maxIndex = _this._findLastIndex(week, function (item) {\n            return item.isInBounds;\n          });\n          var leftStyle = styles.topLeftCornerDate + ' ' + styles.bottomLeftCornerDate;\n          var rightStyle = styles.topRightCornerDate + ' ' + styles.bottomRightCornerDate;\n          weekCornersStyled[weekIndex + '_' + minIndex] = getRTL() ? rightStyle : leftStyle;\n          weekCornersStyled[weekIndex + '_' + maxIndex] = getRTL() ? leftStyle : rightStyle;\n        });\n        break;\n    }\n    return weekCornersStyled;\n  };\n  CalendarDay.prototype._getHighlightedCornerStyle = function (weekCorners, dayIndex, weekIndex) {\n    var cornerStyle = weekCorners[weekIndex + '_' + dayIndex] ? weekCorners[weekIndex + '_' + dayIndex] : '';\n    return cornerStyle;\n  };\n  CalendarDay.prototype._navigateMonthEdge = function (ev, date, weekIndex, dayIndex) {\n    var _a = this.props,\n      minDate = _a.minDate,\n      maxDate = _a.maxDate;\n    var targetDate = undefined;\n    if (weekIndex === 0 && ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n    } else if (weekIndex === this.state.weeks.length - 1 && ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1);\n    } else if (dayIndex === 0 && ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n    } else if (dayIndex === DAYS_IN_WEEK - 1 && ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n    // Don't navigate to out-of-bounds date\n    if (targetDate && (minDate ? compareDatePart(minDate, targetDate) < 1 : true) && (maxDate ? compareDatePart(targetDate, maxDate) < 1 : true)) {\n      this.props.onNavigateDate(targetDate, true);\n      ev.preventDefault();\n    }\n  };\n  CalendarDay.prototype._applyFunctionToDayRefs = function (func) {\n    var _this = this;\n    if (this.state.weeks) {\n      this.state.weeks.forEach(function (week, weekIndex) {\n        week.forEach(function (day) {\n          var ref = _this.days[day.key];\n          func(ref, day, weekIndex);\n        });\n      });\n    }\n  };\n  CalendarDay.prototype._getWeeks = function (propsToUse) {\n    var navigatedDate = propsToUse.navigatedDate,\n      selectedDate = propsToUse.selectedDate,\n      dateRangeType = propsToUse.dateRangeType,\n      firstDayOfWeek = propsToUse.firstDayOfWeek,\n      today = propsToUse.today,\n      minDate = propsToUse.minDate,\n      maxDate = propsToUse.maxDate,\n      showSixWeeksByDefault = propsToUse.showSixWeeksByDefault,\n      workWeekDays = propsToUse.workWeekDays;\n    var date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), 1);\n    var todaysDate = today || new Date();\n    var weeks = [];\n    // Cycle the date backwards to get to the first day of the week.\n    while (date.getDay() !== firstDayOfWeek) {\n      date.setDate(date.getDate() - 1);\n    }\n    // a flag to indicate whether all days of the week are in the month\n    var isAllDaysOfWeekOutOfMonth = false;\n    // in work week view we want to select the whole week\n    var selectedDateRangeType = dateRangeType === DateRangeType.WorkWeek ? DateRangeType.Week : dateRangeType;\n    var selectedDates = getDateRangeArray(selectedDate, selectedDateRangeType, firstDayOfWeek, workWeekDays);\n    if (dateRangeType !== DateRangeType.Day) {\n      selectedDates = this._getBoundedDateRange(selectedDates, minDate, maxDate);\n    }\n    var shouldGetWeeks = true;\n    for (var weekIndex = 0; shouldGetWeeks; weekIndex++) {\n      var week = [];\n      isAllDaysOfWeekOutOfMonth = true;\n      for (var dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\n        // Casting date parameter as an any to avoid [ object Object ] error.\n        var originalDate = new Date(date);\n        var dayInfo = {\n          key: date.toString(),\n          date: date.getDate().toString(),\n          originalDate: originalDate,\n          isInMonth: date.getMonth() === navigatedDate.getMonth(),\n          isToday: compareDates(todaysDate, date),\n          isSelected: isInDateRangeArray(date, selectedDates),\n          onSelected: this._onSelectDate.bind(this, originalDate),\n          isInBounds: (minDate ? compareDatePart(minDate, date) < 1 : true) && (maxDate ? compareDatePart(date, maxDate) < 1 : true) && !this._getIsRestrictedDate(date)\n        };\n        week.push(dayInfo);\n        if (dayInfo.isInMonth) {\n          isAllDaysOfWeekOutOfMonth = false;\n        }\n        date.setDate(date.getDate() + 1);\n      }\n      // We append the condition of the loop depending upon the showSixWeeksByDefault prop.\n      shouldGetWeeks = showSixWeeksByDefault ? !isAllDaysOfWeekOutOfMonth || weekIndex <= 5 : !isAllDaysOfWeekOutOfMonth;\n      if (shouldGetWeeks) {\n        weeks.push(week);\n      }\n    }\n    return weeks;\n  };\n  CalendarDay.prototype._getIsRestrictedDate = function (date) {\n    var restrictedDates = this.props.restrictedDates;\n    if (!restrictedDates) {\n      return false;\n    }\n    var restrictedDate = find(restrictedDates, function (rd) {\n      return compareDates(rd, date);\n    });\n    return restrictedDate ? true : false;\n  };\n  CalendarDay.prototype._getBoundedDateRange = function (dateRange, minDate, maxDate) {\n    var boundedDateRange = __spreadArrays(dateRange);\n    if (minDate) {\n      boundedDateRange = boundedDateRange.filter(function (date) {\n        return compareDatePart(date, minDate) >= 0;\n      });\n    }\n    if (maxDate) {\n      boundedDateRange = boundedDateRange.filter(function (date) {\n        return compareDatePart(date, maxDate) <= 0;\n      });\n    }\n    return boundedDateRange;\n  };\n  /**\n   * Returns the index of the last element in the array where the predicate is true, and -1\n   * otherwise\n   * @param items Array of items to be iterated over using the predicate\n   * @param predicate find calls predicate once for each element of the array, in descending\n   * order, until it finds one where predicate returns true if such an element is found.\n   */\n  CalendarDay.prototype._findLastIndex = function (items, predicate) {\n    for (var i = items.length - 1; i >= 0; i--) {\n      var item = items[i];\n      if (predicate(item)) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  return CalendarDay;\n}(React.Component);\nexport { CalendarDay };","map":{"version":3,"sources":["components/Calendar/CalendarDay.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  css,\n  getId,\n  getRTL,\n  getRTLSafeKeyCode,\n  format,\n  IRefObject,\n  findIndex,\n  find,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { ICalendarStrings, ICalendarIconStrings, ICalendarFormatDateCallbacks } from './Calendar.types';\nimport { DayOfWeek, FirstWeekOfYear, DateRangeType } from '../../utilities/dateValues/DateValues';\nimport { FocusZone } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport {\n  addDays,\n  addWeeks,\n  addMonths,\n  compareDates,\n  compareDatePart,\n  getDateRangeArray,\n  isInDateRangeArray,\n  getWeekNumber,\n  getWeekNumbersInMonth,\n  getMonthStart,\n  getMonthEnd,\n} from '../../utilities/dateMath/DateMath';\n\nimport * as stylesImport from './Calendar.scss';\n\nconst styles: any = stylesImport;\n\nconst DAYS_IN_WEEK = 7;\n\nexport interface IDayInfo {\n  key: string;\n  date: string;\n  originalDate: Date;\n  isInMonth: boolean;\n  isToday: boolean;\n  isSelected: boolean;\n  isInBounds: boolean;\n  onSelected: (ev: React.SyntheticEvent<HTMLElement>) => void;\n}\n\nexport interface ICalendarDay {\n  focus(): void;\n}\n\nexport interface ICalendarDayProps extends React.ClassAttributes<CalendarDay> {\n  componentRef?: IRefObject<ICalendarDay>;\n  strings: ICalendarStrings;\n  selectedDate: Date;\n  navigatedDate: Date;\n  onSelectDate: (date: Date, selectedDateRangeArray?: Date[]) => void;\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\n  onDismiss?: () => void;\n  firstDayOfWeek: DayOfWeek;\n  dateRangeType: DateRangeType;\n  autoNavigateOnSelection: boolean;\n  navigationIcons: ICalendarIconStrings;\n  today?: Date;\n  onHeaderSelect?: (focus: boolean) => void;\n  showWeekNumbers?: boolean;\n  firstWeekOfYear: FirstWeekOfYear;\n  dateTimeFormatter: ICalendarFormatDateCallbacks;\n  showSixWeeksByDefault?: boolean;\n  minDate?: Date;\n  maxDate?: Date;\n  restrictedDates?: Date[];\n  workWeekDays?: DayOfWeek[];\n  showCloseButton?: boolean;\n  allFocusable?: boolean;\n}\n\nexport interface ICalendarDayState {\n  activeDescendantId?: string;\n  weeks?: IDayInfo[][];\n}\n\ninterface IWeekCorners {\n  [key: string]: string;\n}\n\nexport class CalendarDay extends React.Component<ICalendarDayProps, ICalendarDayState> {\n  private navigatedDay: HTMLElement | null;\n  private days: { [key: string]: HTMLElement | null } = {};\n\n  public constructor(props: ICalendarDayProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    this.state = {\n      activeDescendantId: getId('DatePickerDay-active'),\n      weeks: this._getWeeks(props),\n    };\n\n    this._onSelectNextMonth = this._onSelectNextMonth.bind(this);\n    this._onSelectPrevMonth = this._onSelectPrevMonth.bind(this);\n    this._onClose = this._onClose.bind(this);\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: ICalendarDayProps): void {\n    this.setState({\n      weeks: this._getWeeks(nextProps),\n    });\n  }\n\n  public render(): JSX.Element {\n    const { activeDescendantId, weeks } = this.state;\n    const {\n      firstDayOfWeek,\n      strings,\n      navigatedDate,\n      selectedDate,\n      dateRangeType,\n      navigationIcons,\n      showWeekNumbers,\n      firstWeekOfYear,\n      dateTimeFormatter,\n      minDate,\n      maxDate,\n      showCloseButton,\n      allFocusable,\n    } = this.props;\n    const dayPickerId = getId('DatePickerDay-dayPicker');\n    const monthAndYearId = getId('DatePickerDay-monthAndYear');\n    const leftNavigationIcon = navigationIcons.leftNavigation;\n    const rightNavigationIcon = navigationIcons.rightNavigation;\n    const closeNavigationIcon = navigationIcons.closeIcon;\n    const weekNumbers = showWeekNumbers\n      ? getWeekNumbersInMonth(weeks!.length, firstDayOfWeek, firstWeekOfYear, navigatedDate)\n      : null;\n    const selectedDateWeekNumber = showWeekNumbers\n      ? getWeekNumber(selectedDate, firstDayOfWeek, firstWeekOfYear)\n      : undefined;\n\n    // When the month is highlighted get the corner dates so that styles can be added to them\n    const weekCorners: IWeekCorners = this._getWeekCornerStyles(weeks!, dateRangeType);\n\n    // determine if previous/next months are in bounds\n    const prevMonthInBounds = minDate ? compareDatePart(minDate, getMonthStart(navigatedDate)) < 0 : true;\n    const nextMonthInBounds = maxDate ? compareDatePart(getMonthEnd(navigatedDate), maxDate) < 0 : true;\n\n    return (\n      <div\n        className={css(\n          'ms-DatePicker-dayPicker',\n          styles.dayPicker,\n          showWeekNumbers &&\n            'ms-DatePicker-showWeekNumbers' &&\n            (getRTL() ? styles.showWeekNumbersRTL : styles.showWeekNumbers),\n        )}\n        id={dayPickerId}\n      >\n        <div className={css('ms-DatePicker-header', styles.header)}>\n          <div\n            aria-live=\"polite\"\n            aria-relevant=\"text\"\n            aria-atomic=\"true\"\n            id={monthAndYearId}\n            className={styles.monthAndYear}\n          >\n            {this.props.onHeaderSelect ? (\n              <div\n                className={css('ms-DatePicker-monthAndYear js-showMonthPicker', styles.headerToggleView)}\n                onClick={this._onHeaderSelect}\n                onKeyDown={this._onHeaderKeyDown}\n                aria-label={dateTimeFormatter.formatMonthYear(navigatedDate, strings)}\n                role=\"button\"\n                tabIndex={0}\n              >\n                {dateTimeFormatter.formatMonthYear(navigatedDate, strings)}\n              </div>\n            ) : (\n              <div className={css('ms-DatePicker-monthAndYear', styles.monthAndYear)}>\n                {dateTimeFormatter.formatMonthYear(navigatedDate, strings)}\n              </div>\n            )}\n          </div>\n          <div className={css('ms-DatePicker-monthComponents', styles.monthComponents)}>\n            <div className={css('ms-DatePicker-navContainer', styles.navContainer)}>\n              <button\n                className={css('ms-DatePicker-prevMonth js-prevMonth', styles.prevMonth, {\n                  ['ms-DatePicker-prevMonth--disabled ' + styles.prevMonthIsDisabled]: !prevMonthInBounds,\n                })}\n                disabled={!allFocusable && !prevMonthInBounds}\n                aria-disabled={!prevMonthInBounds}\n                onClick={prevMonthInBounds ? this._onSelectPrevMonth : undefined}\n                onKeyDown={prevMonthInBounds ? this._onPrevMonthKeyDown : undefined}\n                aria-controls={dayPickerId}\n                title={\n                  strings.prevMonthAriaLabel\n                    ? strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, -1).getMonth()]\n                    : undefined\n                }\n                role=\"button\"\n                type=\"button\"\n              >\n                <Icon iconName={leftNavigationIcon} />\n              </button>\n              <button\n                className={css('ms-DatePicker-nextMonth js-nextMonth', styles.nextMonth, {\n                  ['ms-DatePicker-nextMonth--disabled ' + styles.nextMonthIsDisabled]: !nextMonthInBounds,\n                })}\n                disabled={!allFocusable && !nextMonthInBounds}\n                aria-disabled={!nextMonthInBounds}\n                onClick={nextMonthInBounds ? this._onSelectNextMonth : undefined}\n                onKeyDown={nextMonthInBounds ? this._onNextMonthKeyDown : undefined}\n                aria-controls={dayPickerId}\n                title={\n                  strings.nextMonthAriaLabel\n                    ? strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, 1).getMonth()]\n                    : undefined\n                }\n                role=\"button\"\n                type=\"button\"\n              >\n                <Icon iconName={rightNavigationIcon} />\n              </button>\n              {showCloseButton && (\n                <button\n                  className={css('ms-DatePicker-closeButton js-closeButton', styles.closeButton)}\n                  onClick={this._onClose}\n                  onKeyDown={this._onCloseButtonKeyDown}\n                  title={strings.closeButtonAriaLabel}\n                  role=\"button\"\n                  type=\"button\"\n                >\n                  <Icon iconName={closeNavigationIcon} />\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n        <FocusZone>\n          <table\n            className={css('ms-DatePicker-table', styles.table)}\n            aria-readonly=\"true\"\n            aria-multiselectable=\"false\"\n            aria-labelledby={monthAndYearId}\n            aria-activedescendant={activeDescendantId}\n            role=\"grid\"\n          >\n            <thead>\n              <tr>\n                {showWeekNumbers && <th className={css('ms-DatePicker-weekday', styles.weekday)} />}\n                {strings.shortDays.map((val, index) => (\n                  <th\n                    className={css('ms-DatePicker-weekday', styles.weekday)}\n                    role=\"columnheader\"\n                    scope=\"col\"\n                    key={index}\n                    title={strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK]}\n                    aria-label={strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK]}\n                    data-is-focusable={allFocusable ? true : undefined}\n                  >\n                    {strings.shortDays[(index + firstDayOfWeek) % DAYS_IN_WEEK]}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody\n              onMouseLeave={dateRangeType !== DateRangeType.Day ? this._onTableMouseLeave : undefined}\n              onMouseUp={dateRangeType !== DateRangeType.Day ? this._onTableMouseUp : undefined}\n            >\n              {weeks!.map((week, weekIndex) => (\n                <tr key={weekNumbers ? weekNumbers[weekIndex] : weekIndex}>\n                  {showWeekNumbers && weekNumbers && (\n                    <th\n                      className={css(\n                        'ms-DatePicker-weekNumbers',\n                        'ms-DatePicker-weekday',\n                        styles.weekday,\n                        styles.weekNumbers,\n                      )}\n                      key={weekIndex}\n                      title={\n                        weekNumbers &&\n                        strings.weekNumberFormatString &&\n                        format(strings.weekNumberFormatString, weekNumbers[weekIndex])\n                      }\n                      aria-label={\n                        weekNumbers &&\n                        strings.weekNumberFormatString &&\n                        format(strings.weekNumberFormatString, weekNumbers[weekIndex])\n                      }\n                      scope=\"row\"\n                    >\n                      <div\n                        className={css('ms-DatePicker-day', styles.day, {\n                          ['ms-DatePicker-week--highlighted ' + styles.weekIsHighlighted]:\n                            selectedDateWeekNumber === weekNumbers[weekIndex],\n                        })}\n                      >\n                        <span>{weekNumbers[weekIndex]}</span>\n                      </div>\n                    </th>\n                  )}\n                  {week.map((day, dayIndex) => {\n                    const isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n                    return (\n                      <td\n                        key={day.key}\n                        onClick={day.isInBounds ? day.onSelected : undefined}\n                        className={css(\n                          styles.dayWrapper,\n                          'ms-DatePicker-day',\n                          this._getHighlightedCornerStyle(weekCorners, dayIndex, weekIndex),\n                          {\n                            ['ms-DatePicker-weekBackground ' + styles.weekBackground]:\n                              day.isSelected &&\n                              (dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek),\n                            ['ms-DatePicker-dayBackground ' + styles.dayBackground]:\n                              dateRangeType === DateRangeType.Day,\n                            ['ms-DatePicker-day--highlighted ' + styles.dayIsHighlighted]:\n                              day.isSelected && dateRangeType === DateRangeType.Day,\n                            ['ms-DatePicker-day--infocus ' + styles.dayIsFocused]: day.isInBounds && day.isInMonth,\n                            ['ms-DatePicker-day--outfocus ' + styles.dayIsUnfocused]: day.isInBounds && !day.isInMonth,\n                            [styles.daySelection]: dateRangeType === DateRangeType.Day,\n                            [styles.weekSelection]:\n                              dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek,\n                            [styles.monthSelection]: dateRangeType === DateRangeType.Month,\n                          },\n                        )}\n                        ref={element => this._setDayCellRef(element, day, isNavigatedDate)}\n                        onMouseOver={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseOver(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        onMouseLeave={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseLeave(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        onMouseDown={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseDown(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        onMouseUp={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseUp(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        role={'gridcell'}\n                      >\n                        <button\n                          key={day.key + 'button'}\n                          onClick={day.isInBounds ? day.onSelected : undefined}\n                          className={css(styles.day, 'ms-DatePicker-day-button', {\n                            ['ms-DatePicker-day--disabled ' + styles.dayIsDisabled]: !day.isInBounds,\n                            ['ms-DatePicker-day--today ' + styles.dayIsToday]: day.isToday,\n                          })}\n                          onKeyDown={this._onDayKeyDown(day.originalDate, weekIndex, dayIndex)}\n                          aria-label={dateTimeFormatter.formatMonthDayYear(day.originalDate, strings)}\n                          id={isNavigatedDate ? activeDescendantId : undefined}\n                          aria-readonly={true}\n                          aria-current={day.isToday ? 'date' : undefined}\n                          aria-selected={day.isInBounds ? day.isSelected : undefined}\n                          data-is-focusable={allFocusable || (day.isInBounds ? true : undefined)}\n                          ref={element => this._setDayRef(element, day, isNavigatedDate)}\n                          disabled={!allFocusable && !day.isInBounds}\n                          aria-disabled={!day.isInBounds}\n                          type=\"button\"\n                        >\n                          <span aria-hidden=\"true\">{dateTimeFormatter.formatDay(day.originalDate)}</span>\n                        </button>\n                      </td>\n                    );\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </FocusZone>\n      </div>\n    );\n  }\n\n  public focus() {\n    if (this.navigatedDay) {\n      this.navigatedDay.tabIndex = 0;\n      this.navigatedDay.focus();\n    }\n  }\n\n  private _setDayRef(element: HTMLElement | null, day: IDayInfo, isNavigatedDate: boolean): void {\n    if (isNavigatedDate) {\n      this.navigatedDay = element;\n    }\n  }\n\n  private _setDayCellRef(element: HTMLElement | null, day: IDayInfo, isNavigatedDate: boolean): void {\n    this.days[day.key] = element;\n  }\n\n  private _getWeekCornerStyles(weeks: IDayInfo[][], dateRangeType: DateRangeType): IWeekCorners {\n    const weekCornersStyled: any = {};\n\n    switch (dateRangeType) {\n      case DateRangeType.Month:\n        /* need to handle setting all of the corners on arbitrarily shaped blobs\n              __\n           __|A |\n          |B |C |__\n          |D |E |F |\n\n          in this case, A needs top left rounded, top right rounded\n          B needs top left rounded\n          C doesn't need any rounding\n          D needs bottom left rounded\n          E doesn't need any rounding\n          F needs top right rounding\n        */\n\n        // if there's an item above, lose both top corners. Item below, lose both bottom corners, etc.\n        weeks.forEach((week: IDayInfo[], weekIndex: number) => {\n          week.forEach((day: IDayInfo, dayIndex: number) => {\n            const above =\n              weeks[weekIndex - 1] &&\n              weeks[weekIndex - 1][dayIndex] &&\n              weeks[weekIndex - 1][dayIndex].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n            const below =\n              weeks[weekIndex + 1] &&\n              weeks[weekIndex + 1][dayIndex] &&\n              weeks[weekIndex + 1][dayIndex].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n            const left =\n              weeks[weekIndex][dayIndex - 1] &&\n              weeks[weekIndex][dayIndex - 1].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n            const right =\n              weeks[weekIndex][dayIndex + 1] &&\n              weeks[weekIndex][dayIndex + 1].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n\n            const roundedTopLeft = !above && !left;\n            const roundedTopRight = !above && !right;\n            const roundedBottomLeft = !below && !left;\n            const roundedBottomRight = !below && !right;\n\n            let style = '';\n            if (roundedTopLeft) {\n              style = getRTL()\n                ? style.concat(styles.topRightCornerDate + ' ')\n                : style.concat(styles.topLeftCornerDate + ' ');\n            }\n            if (roundedTopRight) {\n              style = getRTL()\n                ? style.concat(styles.topLeftCornerDate + ' ')\n                : style.concat(styles.topRightCornerDate + ' ');\n            }\n            if (roundedBottomLeft) {\n              style = getRTL()\n                ? style.concat(styles.bottomRightCornerDate + ' ')\n                : style.concat(styles.bottomLeftCornerDate + ' ');\n            }\n            if (roundedBottomRight) {\n              style = getRTL()\n                ? style.concat(styles.bottomLeftCornerDate + ' ')\n                : style.concat(styles.bottomRightCornerDate + ' ');\n            }\n\n            if (!above) {\n              style = style.concat(styles.topDate + ' ');\n            }\n\n            if (!below) {\n              style = style.concat(styles.bottomDate + ' ');\n            }\n\n            if (!right) {\n              style = style.concat(styles.rightDate + ' ');\n            }\n\n            if (!left) {\n              style = style.concat(styles.leftdate + ' ');\n            }\n\n            weekCornersStyled[weekIndex + '_' + dayIndex] = style;\n          });\n        });\n        break;\n      case DateRangeType.Week:\n      case DateRangeType.WorkWeek:\n        weeks.forEach((week: IDayInfo[], weekIndex: number) => {\n          const minIndex = findIndex(week, (item: IDayInfo) => {\n            return item.isInBounds;\n          });\n          const maxIndex = this._findLastIndex(week, (item: IDayInfo) => {\n            return item.isInBounds;\n          });\n\n          const leftStyle = styles.topLeftCornerDate + ' ' + styles.bottomLeftCornerDate;\n          const rightStyle = styles.topRightCornerDate + ' ' + styles.bottomRightCornerDate;\n          weekCornersStyled[weekIndex + '_' + minIndex] = getRTL() ? rightStyle : leftStyle;\n          weekCornersStyled[weekIndex + '_' + maxIndex] = getRTL() ? leftStyle : rightStyle;\n        });\n        break;\n    }\n\n    return weekCornersStyled;\n  }\n\n  private _getHighlightedCornerStyle(weekCorners: IWeekCorners, dayIndex: number, weekIndex: number): string {\n    const cornerStyle = weekCorners[weekIndex + '_' + dayIndex] ? weekCorners[weekIndex + '_' + dayIndex] : '';\n    return cornerStyle;\n  }\n\n  private _navigateMonthEdge(\n    ev: React.KeyboardEvent<HTMLElement>,\n    date: Date,\n    weekIndex: number,\n    dayIndex: number,\n  ): void {\n    const { minDate, maxDate } = this.props;\n    let targetDate: Date | undefined = undefined;\n\n    if (weekIndex === 0 && ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n    } else if (weekIndex === this.state.weeks!.length - 1 && ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1);\n    } else if (dayIndex === 0 && ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n    } else if (dayIndex === DAYS_IN_WEEK - 1 && ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n\n    // Don't navigate to out-of-bounds date\n    if (\n      targetDate &&\n      (minDate ? compareDatePart(minDate, targetDate) < 1 : true) &&\n      (maxDate ? compareDatePart(targetDate, maxDate) < 1 : true)\n    ) {\n      this.props.onNavigateDate(targetDate, true);\n      ev.preventDefault();\n    }\n  }\n\n  private _onKeyDown = (callback: () => void, ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      callback();\n    }\n  };\n\n  private _onDayKeyDown = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n  ): ((ev: React.KeyboardEvent<HTMLElement>) => void) => {\n    return (ev: React.KeyboardEvent<HTMLElement>): void => {\n      if (ev.which === KeyCodes.enter) {\n        this._onSelectDate(originalDate, ev);\n        ev.preventDefault();\n      } else {\n        this._navigateMonthEdge(ev, originalDate, weekIndex, dayIndex);\n      }\n    };\n  };\n\n  private _onDayMouseDown = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // set the press styling\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.add(styles.dayPress);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.add(styles.dayPress);\n            ref.classList.add(styles.dayIsHighlighted);\n          } else if (ref) {\n            ref.classList.remove(styles.dayIsHighlighted);\n          }\n        });\n      }\n    };\n  };\n\n  private _onDayMouseUp = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // remove press styling\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.remove(styles.dayPress);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.remove(styles.dayPress);\n          }\n        });\n      }\n    };\n  };\n\n  private _onDayMouseOver = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // set the hover styling on every day in the same month\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.add(styles.dayHover);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.add(styles.dayHover);\n          }\n        });\n      }\n    };\n  };\n\n  private _onDayMouseLeave = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // remove the hover and pressed styling\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.remove(styles.dayHover);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.remove(styles.dayHover);\n          }\n        });\n      }\n    };\n  };\n\n  private _onTableMouseLeave = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (\n      (ev.target as HTMLElement).contains &&\n      ev.relatedTarget &&\n      (ev.relatedTarget as HTMLElement).contains &&\n      (ev.target as HTMLElement).contains(ev.relatedTarget as HTMLElement)\n    ) {\n      return;\n    }\n\n    this._applyFunctionToDayRefs((ref, day) => {\n      if (ref) {\n        ref.classList.remove(styles.dayHover);\n        ref.classList.remove(styles.dayPress);\n      }\n    });\n  };\n\n  private _onTableMouseUp = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (\n      (ev.target as HTMLElement).contains &&\n      ev.relatedTarget &&\n      (ev.relatedTarget as HTMLElement).contains &&\n      (ev.target as HTMLElement).contains(ev.relatedTarget as HTMLElement)\n    ) {\n      return;\n    }\n\n    this._applyFunctionToDayRefs((ref, day) => {\n      if (ref) {\n        ref.classList.remove(styles.dayPress);\n      }\n    });\n  };\n\n  private _applyFunctionToDayRefs(func: (ref: HTMLElement | null, day: IDayInfo, weekIndex?: number) => void) {\n    if (this.state.weeks) {\n      this.state.weeks.forEach((week: IDayInfo[], weekIndex: number) => {\n        week.forEach(day => {\n          const ref = this.days[day.key];\n          func(ref, day, weekIndex);\n        });\n      });\n    }\n  }\n\n  private _onSelectDate = (selectedDate: Date, ev: React.SyntheticEvent<HTMLElement>): void => {\n    const {\n      onSelectDate,\n      dateRangeType,\n      firstDayOfWeek,\n      navigatedDate,\n      autoNavigateOnSelection,\n      minDate,\n      maxDate,\n      workWeekDays,\n    } = this.props;\n\n    if (ev) {\n      ev.stopPropagation();\n    }\n\n    let dateRange = getDateRangeArray(selectedDate, dateRangeType, firstDayOfWeek, workWeekDays);\n    if (dateRangeType !== DateRangeType.Day) {\n      dateRange = this._getBoundedDateRange(dateRange, minDate, maxDate);\n    }\n    dateRange = dateRange.filter(d => {\n      return !this._getIsRestrictedDate(d);\n    });\n\n    if (onSelectDate) {\n      onSelectDate(selectedDate, dateRange);\n    }\n\n    // Navigate to next or previous month if needed\n    if (autoNavigateOnSelection && selectedDate.getMonth() !== navigatedDate.getMonth()) {\n      const compareResult = compareDatePart(selectedDate, navigatedDate);\n      if (compareResult < 0) {\n        this._onSelectPrevMonth();\n      } else if (compareResult > 0) {\n        this._onSelectNextMonth();\n      }\n    }\n  };\n\n  private _onSelectNextMonth = (): void => {\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, 1), false);\n  };\n\n  private _onSelectPrevMonth = (): void => {\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, -1), false);\n  };\n\n  private _onClose = (): void => {\n    if (this.props.onDismiss) {\n      this.props.onDismiss();\n    }\n  };\n\n  private _onHeaderSelect = (): void => {\n    const { onHeaderSelect } = this.props;\n    if (onHeaderSelect) {\n      onHeaderSelect(true);\n    }\n  };\n\n  private _onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { onHeaderSelect } = this.props;\n    if (onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      onHeaderSelect(true);\n    }\n  };\n\n  private _onPrevMonthKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onSelectPrevMonth, ev);\n    }\n  };\n\n  private _onNextMonthKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onSelectNextMonth, ev);\n    }\n  };\n\n  private _onCloseButtonKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onClose, ev);\n    }\n  };\n\n  private _getWeeks(propsToUse: ICalendarDayProps): IDayInfo[][] {\n    const {\n      navigatedDate,\n      selectedDate,\n      dateRangeType,\n      firstDayOfWeek,\n      today,\n      minDate,\n      maxDate,\n      showSixWeeksByDefault,\n      workWeekDays,\n    } = propsToUse;\n    const date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), 1);\n    const todaysDate = today || new Date();\n    const weeks: IDayInfo[][] = [];\n\n    // Cycle the date backwards to get to the first day of the week.\n    while (date.getDay() !== firstDayOfWeek) {\n      date.setDate(date.getDate() - 1);\n    }\n\n    // a flag to indicate whether all days of the week are in the month\n    let isAllDaysOfWeekOutOfMonth = false;\n\n    // in work week view we want to select the whole week\n    const selectedDateRangeType = dateRangeType === DateRangeType.WorkWeek ? DateRangeType.Week : dateRangeType;\n    let selectedDates = getDateRangeArray(selectedDate, selectedDateRangeType, firstDayOfWeek, workWeekDays);\n    if (dateRangeType !== DateRangeType.Day) {\n      selectedDates = this._getBoundedDateRange(selectedDates, minDate, maxDate);\n    }\n\n    let shouldGetWeeks = true;\n\n    for (let weekIndex = 0; shouldGetWeeks; weekIndex++) {\n      const week: IDayInfo[] = [];\n\n      isAllDaysOfWeekOutOfMonth = true;\n\n      for (let dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\n        // Casting date parameter as an any to avoid [ object Object ] error.\n        const originalDate = new Date(date as any);\n        const dayInfo: IDayInfo = {\n          key: date.toString(),\n          date: date.getDate().toString(),\n          originalDate: originalDate,\n          isInMonth: date.getMonth() === navigatedDate.getMonth(),\n          isToday: compareDates(todaysDate, date),\n          isSelected: isInDateRangeArray(date, selectedDates),\n          onSelected: this._onSelectDate.bind(this, originalDate),\n          isInBounds:\n            (minDate ? compareDatePart(minDate, date) < 1 : true) &&\n            (maxDate ? compareDatePart(date, maxDate) < 1 : true) &&\n            !this._getIsRestrictedDate(date),\n        };\n\n        week.push(dayInfo);\n\n        if (dayInfo.isInMonth) {\n          isAllDaysOfWeekOutOfMonth = false;\n        }\n\n        date.setDate(date.getDate() + 1);\n      }\n\n      // We append the condition of the loop depending upon the showSixWeeksByDefault prop.\n      shouldGetWeeks = showSixWeeksByDefault\n        ? !isAllDaysOfWeekOutOfMonth || weekIndex <= 5\n        : !isAllDaysOfWeekOutOfMonth;\n      if (shouldGetWeeks) {\n        weeks.push(week);\n      }\n    }\n\n    return weeks;\n  }\n\n  private _getIsRestrictedDate(date: Date): boolean {\n    const { restrictedDates } = this.props;\n    if (!restrictedDates) {\n      return false;\n    }\n    const restrictedDate = find(restrictedDates, rd => {\n      return compareDates(rd, date);\n    });\n    return restrictedDate ? true : false;\n  }\n\n  private _getBoundedDateRange(dateRange: Date[], minDate?: Date, maxDate?: Date): Date[] {\n    let boundedDateRange = [...dateRange];\n    if (minDate) {\n      boundedDateRange = boundedDateRange.filter(date => compareDatePart(date, minDate as Date) >= 0);\n    }\n    if (maxDate) {\n      boundedDateRange = boundedDateRange.filter(date => compareDatePart(date, maxDate as Date) <= 0);\n    }\n    return boundedDateRange;\n  }\n\n  /**\n   * Returns the index of the last element in the array where the predicate is true, and -1\n   * otherwise\n   * @param items Array of items to be iterated over using the predicate\n   * @param predicate find calls predicate once for each element of the array, in descending\n   * order, until it finds one where predicate returns true if such an element is found.\n   */\n  private _findLastIndex<T>(items: T[], predicate: (item: T) => boolean): number {\n    for (let i = items.length - 1; i >= 0; i--) {\n      const item = items[i];\n\n      if (predicate(item)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}