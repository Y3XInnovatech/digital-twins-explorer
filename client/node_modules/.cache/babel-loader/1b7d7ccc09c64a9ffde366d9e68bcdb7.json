{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../../Utilities';\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { Callout, FocusTrapCallout } from '../../../Callout';\nexport var CardCallout = function (props) {\n  var _a = props.gapSpace,\n    gapSpace = _a === void 0 ? 0 : _a,\n    _b = props.directionalHint,\n    directionalHint = _b === void 0 ? DirectionalHint.bottomLeftEdge : _b,\n    directionalHintFixed = props.directionalHintFixed,\n    targetElement = props.targetElement,\n    firstFocus = props.firstFocus,\n    trapFocus = props.trapFocus,\n    onLeave = props.onLeave,\n    className = props.className,\n    finalHeight = props.finalHeight,\n    content = props.content,\n    calloutProps = props.calloutProps;\n  var mergedCalloutProps = __assign(__assign(__assign({}, getNativeProps(props, divProperties)), {\n    className: className,\n    target: targetElement,\n    isBeakVisible: false,\n    directionalHint: directionalHint,\n    directionalHintFixed: directionalHintFixed,\n    finalHeight: finalHeight,\n    minPagePadding: 24,\n    onDismiss: onLeave,\n    gapSpace: gapSpace\n  }), calloutProps);\n  return React.createElement(React.Fragment, null, trapFocus ? React.createElement(FocusTrapCallout, __assign({}, mergedCalloutProps, {\n    focusTrapProps: {\n      forceFocusInsideTrap: false,\n      isClickableOutsideFocusTrap: true,\n      disableFirstFocus: !firstFocus\n    }\n  }), content) : React.createElement(Callout, __assign({}, mergedCalloutProps), content));\n};","map":{"version":3,"sources":["components/HoverCard/CardCallout/CardCallout.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAE9B,SAAS,aAAa,EAAE,cAAc,QAAQ,oBAAoB;AAClE,SAAS,eAAe,QAAQ,iCAAiC;AAEjE,SAAS,OAAO,EAAE,gBAAgB,QAAuB,kBAAkB;AAO3E,OAAO,IAAM,WAAW,GAAG,SAAA,CAAC,KAAwB,EAAA;EAEhD,IAAA,EAAA,GAAA,KAAA,CAAA,QAAY;IAAZ,QAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAY;IACZ,EAAA,GAAA,KAAA,CAAA,eAAgD;IAAhD,eAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,eAAA,CAAA,cAAA,GAAA,EAAgD;IAChD,oBAAA,GAAA,KAAA,CAAA,oBAAoB;IACpB,aAAA,GAAA,KAAA,CAAA,aAAa;IACb,UAAA,GAAA,KAAA,CAAA,UAAU;IACV,SAAA,GAAA,KAAA,CAAA,SAAS;IACT,OAAA,GAAA,KAAA,CAAA,OAAO;IACP,SAAA,GAAA,KAAA,CAAA,SAAS;IACT,WAAA,GAAA,KAAA,CAAA,WAAW;IACX,OAAA,GAAA,KAAA,CAAA,OAAO;IACP,YAAA,GAAA,KAAA,CAAA,YAAY;EAGd,IAAM,kBAAkB,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACnB,cAAc,CAAC,KAAK,EAAE,aAAa,CAAC,CAAA,EAAA;IACvC,SAAS,EAAE,SAAS;IACpB,MAAM,EAAE,aAAa;IACrB,aAAa,EAAE,KAAK;IACpB,eAAe,EAAE,eAAe;IAChC,oBAAoB,EAAE,oBAAoB;IAC1C,WAAW,EAAE,WAAW;IACxB,cAAc,EAAE,EAAE;IAClB,SAAS,EAAE,OAAO;IAClB,QAAQ,EAAE;EAAQ,CAAA,CAAA,EACf,YAAY,CAChB;EAED,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,SAAS,GACR,KAAA,CAAA,aAAA,CAAC,gBAAgB,EAAA,QAAA,CAAA,CAAA,CAAA,EACX,kBAAkB,EAAA;IACtB,cAAc,EAAE;MACd,oBAAoB,EAAE,KAAK;MAC3B,2BAA2B,EAAE,IAAI;MACjC,iBAAiB,EAAE,CAAC;IACrB;EAAA,CAAA,CAAA,EAEA,OAAO,CACS,GAEnB,KAAA,CAAA,aAAA,CAAC,OAAO,EAAA,QAAA,CAAA,CAAA,CAAA,EAAK,kBAAkB,CAAA,EAAG,OAAO,CAC1C,CACA;AAEP,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { divProperties, getNativeProps } from '../../../Utilities';\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { IBaseCardProps } from '../BaseCard.types';\nimport { Callout, FocusTrapCallout, ICalloutProps } from '../../../Callout';\n\nexport interface ICardCalloutProps extends IBaseCardProps<{}, {}, {}> {\n  finalHeight?: number;\n  content?: JSX.Element;\n}\n\nexport const CardCallout = (props: ICardCalloutProps) => {\n  const {\n    gapSpace = 0,\n    directionalHint = DirectionalHint.bottomLeftEdge,\n    directionalHintFixed,\n    targetElement,\n    firstFocus,\n    trapFocus,\n    onLeave,\n    className,\n    finalHeight,\n    content,\n    calloutProps,\n  } = props;\n\n  const mergedCalloutProps: ICalloutProps = {\n    ...getNativeProps(props, divProperties),\n    className: className,\n    target: targetElement,\n    isBeakVisible: false,\n    directionalHint: directionalHint,\n    directionalHintFixed: directionalHintFixed,\n    finalHeight: finalHeight,\n    minPagePadding: 24,\n    onDismiss: onLeave,\n    gapSpace: gapSpace,\n    ...calloutProps,\n  };\n\n  return (\n    <>\n      {trapFocus ? (\n        <FocusTrapCallout\n          {...mergedCalloutProps}\n          focusTrapProps={{\n            forceFocusInsideTrap: false,\n            isClickableOutsideFocusTrap: true,\n            disableFirstFocus: !firstFocus,\n          }}\n        >\n          {content}\n        </FocusTrapCallout>\n      ) : (\n        <Callout {...mergedCalloutProps}>{content}</Callout>\n      )}\n    </>\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}