{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst jsiterable_1 = __importDefault(require(\"jsiterable\"));\nconst jsonld = __importStar(require(\"jsonld\"));\nconst constants_1 = require(\"./constants\");\nconst errors_1 = __importDefault(require(\"./errors\"));\n// tslint:disable-next-line:no-typeof-undefined\nconst remoteLoader = typeof process !== undefined && process.versions && process.versions.node ? jsonld.documentLoaders.node() : jsonld.documentLoaders.xhr();\nclass JsonldProcessor {\n  /**\n   *Creates an instance of JsonldProcessor.\n   * @param {JsonldProcessorOptions} [options={}] JsonldProcessor options.\n   * @memberof JsonldProcessor\n   */\n  constructor(options = {}) {\n    this._contexts = new Map();\n    this._contextLoader = url => __awaiter(this, void 0, void 0, function* () {\n      if (this._contexts.has(url)) {\n        return Promise.resolve({\n          contextUrl: null,\n          documentUrl: url,\n          document: this._contexts.get(url)\n        });\n      }\n      // Check for lower-case contexts\n      if (this._contexts.has(url.toLowerCase())) {\n        return Promise.resolve({\n          contextUrl: null,\n          documentUrl: url,\n          document: this._contexts.get(url.toLowerCase())\n        });\n      }\n      if (this._options.remoteContexts) {\n        return remoteLoader(url);\n      }\n      throw new errors_1.default.ContextNotFoundError(url);\n    });\n    this._options = options;\n  }\n  /**\n   * @description Gets all contexts registered with the processor.\n   * @readonly\n   * @type {Iterable<[string, any]>}\n   * @memberof JsonldProcessor\n   */\n  get contexts() {\n    return new jsiterable_1.default(this._contexts);\n  }\n  /**\n   * @description Adds a context to the processor.\n   * @param {string} uri The uri of the context.\n   * @param {*} context The context object.\n   * @memberof JsonldProcessor\n   */\n  addContext(uri, context) {\n    if (!uri) {\n      throw new ReferenceError(`Invalid uri. uri is ${uri}`);\n    }\n    if (!context) {\n      throw new ReferenceError(`Invalid context. context is ${context}`);\n    }\n    if (typeof context !== 'object') {\n      throw new ReferenceError(`Invalid context. Expected context to be a JSON object, but got ${typeof context}`);\n    }\n    const normalizedUri = uri.toLowerCase();\n    if (this._contexts.has(normalizedUri)) {\n      throw new errors_1.default.DuplicateContextError(uri);\n    }\n    this._contexts.set(normalizedUri, context);\n  }\n  /**\n   * @description Performs a JSON-LD compaction.\n   * @param {*} document The document to compact. NOTE: The document should already be in expanded form.\n   * @param {any|any[]} [contexts]\n   * @returns {Promise<any>}\n   * @memberof JsonldProcessor\n   */\n  compact(document, contexts = []) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!document) {\n        throw new ReferenceError(`Invalid document. document is ${document}`);\n      }\n      if (!document[constants_1.JsonldKeywords.context] && contexts.length === 0) {\n        throw new errors_1.default.ContextNotSpecifiedError('jsonld.compact');\n      }\n      const compactionContext = contexts && contexts.length > 0 ? contexts : document[constants_1.JsonldKeywords.context];\n      return jsonld.compact(document, compactionContext, {\n        compactToRelative: true,\n        graph: false,\n        documentLoader: this._contextLoader\n      });\n    });\n  }\n  /**\n   * @description Performs a JSON-LD expansion.\n   * @param {*} document The document to expand.\n   * @param {any|any[]} [contexts] Optional contexts to use for expansion.\n   * @returns {Promise<any>}\n   * @memberof JsonldProcessor\n   */\n  expand(document, contexts = [], base) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!document) {\n        throw new ReferenceError(`Invalid document. document is ${document}`);\n      }\n      if (!document[constants_1.JsonldKeywords.context] && contexts.length === 0) {\n        throw new errors_1.default.ContextNotSpecifiedError('jsonld.expand');\n      }\n      return jsonld.expand(document, {\n        base,\n        expandContext: contexts,\n        documentLoader: this._contextLoader\n      });\n    });\n  }\n  /**\n   * @description Performs a JSON=LD flatten operation.\n   * @param {*} document The document to flatten.\n   * @param {any|any[]} [contexts] Optional contexts to use for expansion before flattening.\n   * @returns {Promise<any[]>}\n   * @memberof JsonldProcessor\n   */\n  flatten(document, contexts = [], base) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!document) {\n        throw new ReferenceError(`Invalid document. document is ${document}`);\n      }\n      if (!document[constants_1.JsonldKeywords.context] && contexts.length === 0) {\n        throw new errors_1.default.ContextNotSpecifiedError('jsonld.flatten');\n      }\n      return jsonld.flatten(document, null, {\n        base,\n        expandContext: contexts,\n        documentLoader: this._contextLoader\n      });\n    });\n  }\n  /**\n   * @description Performs a JSON-LD framing operation.\n   * @param {*} document The document to frame.\n   * @param {*} frame The JSON-LD frame instruction.\n   * @param {any|any[]} [contexts] Optional expansion contexts to use for framing.\n   * @returns {Promise<any>}\n   * @memberof JsonldProcessor\n   */\n  frame(document, frame, contexts = [], base) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!document) {\n        throw new ReferenceError(`Invalid document. document is ${document}`);\n      }\n      if (!frame) {\n        throw new ReferenceError(`Invalid frame. frame is ${frame}`);\n      }\n      return jsonld.frame(document, frame, {\n        base,\n        expandContext: contexts,\n        documentLoader: this._contextLoader\n      });\n    });\n  }\n  /**\n   * @description Removes a context from the processor.\n   * @param {string} uri The uri of the context to remove.\n   * @memberof JsonldProcessor\n   */\n  removeContext(uri) {\n    if (!uri) {\n      throw new ReferenceError(`Invalid uri. uri is ${uri}`);\n    }\n    this._contexts.delete(uri.toLowerCase());\n  }\n}\nexports.JsonldProcessor = JsonldProcessor;\nexports.default = JsonldProcessor;","map":{"version":3,"sources":["../src/jsonldProcessor.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst jsiterable_1 = __importDefault(require(\"jsiterable\"));\nconst jsonld = __importStar(require(\"jsonld\"));\nconst constants_1 = require(\"./constants\");\nconst errors_1 = __importDefault(require(\"./errors\"));\n// tslint:disable-next-line:no-typeof-undefined\nconst remoteLoader = typeof process !== undefined && process.versions && process.versions.node\n    ? jsonld.documentLoaders.node()\n    : jsonld.documentLoaders.xhr();\nclass JsonldProcessor {\n    /**\n     *Creates an instance of JsonldProcessor.\n     * @param {JsonldProcessorOptions} [options={}] JsonldProcessor options.\n     * @memberof JsonldProcessor\n     */\n    constructor(options = {}) {\n        this._contexts = new Map();\n        this._contextLoader = (url) => __awaiter(this, void 0, void 0, function* () {\n            if (this._contexts.has(url)) {\n                return Promise.resolve({\n                    contextUrl: null,\n                    documentUrl: url,\n                    document: this._contexts.get(url)\n                });\n            }\n            // Check for lower-case contexts\n            if (this._contexts.has(url.toLowerCase())) {\n                return Promise.resolve({\n                    contextUrl: null,\n                    documentUrl: url,\n                    document: this._contexts.get(url.toLowerCase())\n                });\n            }\n            if (this._options.remoteContexts) {\n                return remoteLoader(url);\n            }\n            throw new errors_1.default.ContextNotFoundError(url);\n        });\n        this._options = options;\n    }\n    /**\n     * @description Gets all contexts registered with the processor.\n     * @readonly\n     * @type {Iterable<[string, any]>}\n     * @memberof JsonldProcessor\n     */\n    get contexts() {\n        return new jsiterable_1.default(this._contexts);\n    }\n    /**\n     * @description Adds a context to the processor.\n     * @param {string} uri The uri of the context.\n     * @param {*} context The context object.\n     * @memberof JsonldProcessor\n     */\n    addContext(uri, context) {\n        if (!uri) {\n            throw new ReferenceError(`Invalid uri. uri is ${uri}`);\n        }\n        if (!context) {\n            throw new ReferenceError(`Invalid context. context is ${context}`);\n        }\n        if (typeof context !== 'object') {\n            throw new ReferenceError(`Invalid context. Expected context to be a JSON object, but got ${typeof context}`);\n        }\n        const normalizedUri = uri.toLowerCase();\n        if (this._contexts.has(normalizedUri)) {\n            throw new errors_1.default.DuplicateContextError(uri);\n        }\n        this._contexts.set(normalizedUri, context);\n    }\n    /**\n     * @description Performs a JSON-LD compaction.\n     * @param {*} document The document to compact. NOTE: The document should already be in expanded form.\n     * @param {any|any[]} [contexts]\n     * @returns {Promise<any>}\n     * @memberof JsonldProcessor\n     */\n    compact(document, contexts = []) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!document) {\n                throw new ReferenceError(`Invalid document. document is ${document}`);\n            }\n            if (!document[constants_1.JsonldKeywords.context] && contexts.length === 0) {\n                throw new errors_1.default.ContextNotSpecifiedError('jsonld.compact');\n            }\n            const compactionContext = contexts && contexts.length > 0 ? contexts : document[constants_1.JsonldKeywords.context];\n            return jsonld.compact(document, compactionContext, {\n                compactToRelative: true,\n                graph: false,\n                documentLoader: this._contextLoader\n            });\n        });\n    }\n    /**\n     * @description Performs a JSON-LD expansion.\n     * @param {*} document The document to expand.\n     * @param {any|any[]} [contexts] Optional contexts to use for expansion.\n     * @returns {Promise<any>}\n     * @memberof JsonldProcessor\n     */\n    expand(document, contexts = [], base) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!document) {\n                throw new ReferenceError(`Invalid document. document is ${document}`);\n            }\n            if (!document[constants_1.JsonldKeywords.context] && contexts.length === 0) {\n                throw new errors_1.default.ContextNotSpecifiedError('jsonld.expand');\n            }\n            return jsonld.expand(document, {\n                base,\n                expandContext: contexts,\n                documentLoader: this._contextLoader\n            });\n        });\n    }\n    /**\n     * @description Performs a JSON=LD flatten operation.\n     * @param {*} document The document to flatten.\n     * @param {any|any[]} [contexts] Optional contexts to use for expansion before flattening.\n     * @returns {Promise<any[]>}\n     * @memberof JsonldProcessor\n     */\n    flatten(document, contexts = [], base) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!document) {\n                throw new ReferenceError(`Invalid document. document is ${document}`);\n            }\n            if (!document[constants_1.JsonldKeywords.context] && contexts.length === 0) {\n                throw new errors_1.default.ContextNotSpecifiedError('jsonld.flatten');\n            }\n            return jsonld.flatten(document, null, {\n                base,\n                expandContext: contexts,\n                documentLoader: this._contextLoader\n            });\n        });\n    }\n    /**\n     * @description Performs a JSON-LD framing operation.\n     * @param {*} document The document to frame.\n     * @param {*} frame The JSON-LD frame instruction.\n     * @param {any|any[]} [contexts] Optional expansion contexts to use for framing.\n     * @returns {Promise<any>}\n     * @memberof JsonldProcessor\n     */\n    frame(document, frame, contexts = [], base) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!document) {\n                throw new ReferenceError(`Invalid document. document is ${document}`);\n            }\n            if (!frame) {\n                throw new ReferenceError(`Invalid frame. frame is ${frame}`);\n            }\n            return jsonld.frame(document, frame, {\n                base,\n                expandContext: contexts,\n                documentLoader: this._contextLoader\n            });\n        });\n    }\n    /**\n     * @description Removes a context from the processor.\n     * @param {string} uri The uri of the context to remove.\n     * @memberof JsonldProcessor\n     */\n    removeContext(uri) {\n        if (!uri) {\n            throw new ReferenceError(`Invalid uri. uri is ${uri}`);\n        }\n        this._contexts.delete(uri.toLowerCase());\n    }\n}\nexports.JsonldProcessor = JsonldProcessor;\nexports.default = JsonldProcessor;\n//# sourceMappingURL=jsonldProcessor.js.map"]},"metadata":{},"sourceType":"script"}