{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warnDeprecations, classNamesFunction, divProperties, memoizeFunction, getInitials, getNativeProps, getRTL } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\nvar getClassNames = classNamesFunction({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\nvar getInitialsStyles = memoizeFunction(function (className, initialsColor, initialsTextColor, text, primaryText, showUnknownPersonaCoin) {\n  return mergeStyles(className, !showUnknownPersonaCoin && {\n    backgroundColor: getPersonaInitialsColor({\n      text: text,\n      initialsColor: initialsColor,\n      primaryText: primaryText\n    }),\n    color: initialsTextColor\n  });\n});\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nvar PersonaCoinBase = /** @class */function (_super) {\n  __extends(PersonaCoinBase, _super);\n  function PersonaCoinBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._onRenderCoin = function (props) {\n      var _a = _this.props,\n        coinSize = _a.coinSize,\n        styles = _a.styles,\n        imageUrl = _a.imageUrl,\n        imageAlt = _a.imageAlt,\n        imageShouldFadeIn = _a.imageShouldFadeIn,\n        imageShouldStartVisible = _a.imageShouldStartVisible,\n        theme = _a.theme,\n        showUnknownPersonaCoin = _a.showUnknownPersonaCoin;\n      // Render the Image component only if an image URL is provided\n      if (!imageUrl) {\n        return null;\n      }\n      var size = _this.props.size;\n      var classNames = getClassNames(styles, {\n        theme: theme,\n        size: size,\n        showUnknownPersonaCoin: showUnknownPersonaCoin\n      });\n      var dimension = coinSize || sizeToPixels[size];\n      return React.createElement(Image, {\n        className: classNames.image,\n        imageFit: ImageFit.cover,\n        src: imageUrl,\n        width: dimension,\n        height: dimension,\n        alt: imageAlt,\n        shouldFadeIn: imageShouldFadeIn,\n        shouldStartVisible: imageShouldStartVisible,\n        onLoadingStateChange: _this._onPhotoLoadingStateChange\n      });\n    };\n    _this._onRenderInitials = function (props) {\n      var imageInitials = props.imageInitials;\n      var allowPhoneInitials = props.allowPhoneInitials,\n        showUnknownPersonaCoin = props.showUnknownPersonaCoin;\n      if (showUnknownPersonaCoin) {\n        return React.createElement(Icon, {\n          iconName: \"Help\"\n        });\n      }\n      var isRTL = getRTL(_this.props.theme);\n      imageInitials = imageInitials || getInitials(_this._getText(), isRTL, allowPhoneInitials);\n      return imageInitials !== '' ? React.createElement(\"span\", null, imageInitials) : React.createElement(Icon, {\n        iconName: \"Contact\"\n      });\n    };\n    _this._onPhotoLoadingStateChange = function (loadState) {\n      _this.setState({\n        isImageLoaded: loadState === ImageLoadState.loaded,\n        isImageError: loadState === ImageLoadState.error\n      });\n      _this.props.onPhotoLoadingStateChange && _this.props.onPhotoLoadingStateChange(loadState);\n    };\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('PersonaCoin', props, {\n        primaryText: 'text'\n      });\n    }\n    _this.state = {\n      isImageLoaded: false,\n      isImageError: false\n    };\n    return _this;\n  }\n  PersonaCoinBase.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    if (nextProps.imageUrl !== this.props.imageUrl) {\n      this.setState({\n        isImageLoaded: false,\n        isImageError: false\n      });\n    }\n  };\n  PersonaCoinBase.prototype.render = function () {\n    var _a = this.props,\n      className = _a.className,\n      coinProps = _a.coinProps,\n      showUnknownPersonaCoin = _a.showUnknownPersonaCoin,\n      coinSize = _a.coinSize,\n      styles = _a.styles,\n      imageUrl = _a.imageUrl,\n      initialsColor = _a.initialsColor,\n      initialsTextColor = _a.initialsTextColor,\n      isOutOfOffice = _a.isOutOfOffice,\n      /* eslint-disable deprecation/deprecation */\n      _b = _a.onRenderCoin,\n      /* eslint-disable deprecation/deprecation */\n      onRenderCoin = _b === void 0 ? this._onRenderCoin : _b,\n      _c = _a.onRenderPersonaCoin,\n      onRenderPersonaCoin = _c === void 0 ? onRenderCoin : _c,\n      /* eslint-enable deprecation/deprecation */\n      _d = _a.onRenderInitials,\n      /* eslint-enable deprecation/deprecation */\n      onRenderInitials = _d === void 0 ? this._onRenderInitials : _d,\n      presence = _a.presence,\n      presenceTitle = _a.presenceTitle,\n      presenceColors = _a.presenceColors,\n      // eslint-disable-next-line deprecation/deprecation\n      primaryText = _a.primaryText,\n      showInitialsUntilImageLoads = _a.showInitialsUntilImageLoads,\n      text = _a.text,\n      theme = _a.theme;\n    var size = this.props.size;\n    var divProps = getNativeProps(this.props, divProperties);\n    var divCoinProps = getNativeProps(coinProps || {}, divProperties);\n    var coinSizeStyle = coinSize ? {\n      width: coinSize,\n      height: coinSize\n    } : undefined;\n    var hideImage = showUnknownPersonaCoin;\n    var personaPresenceProps = {\n      coinSize: coinSize,\n      isOutOfOffice: isOutOfOffice,\n      presence: presence,\n      presenceTitle: presenceTitle,\n      presenceColors: presenceColors,\n      size: size,\n      theme: theme\n    };\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: coinProps && coinProps.className ? coinProps.className : className,\n      size: size,\n      coinSize: coinSize,\n      showUnknownPersonaCoin: showUnknownPersonaCoin\n    });\n    var shouldRenderInitials = Boolean(!this.state.isImageLoaded && (showInitialsUntilImageLoads && imageUrl || !imageUrl || this.state.isImageError || hideImage));\n    return React.createElement(\"div\", __assign({\n      role: \"presentation\"\n    }, divProps, {\n      className: classNames.coin\n    }),\n    // eslint-disable-next-line deprecation/deprecation\n    size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? React.createElement(\"div\", __assign({\n      role: \"presentation\"\n    }, divCoinProps, {\n      className: classNames.imageArea,\n      style: coinSizeStyle\n    }), shouldRenderInitials && React.createElement(\"div\", {\n      className: getInitialsStyles(classNames.initials, initialsColor, initialsTextColor, text, primaryText, showUnknownPersonaCoin),\n      style: coinSizeStyle,\n      \"aria-hidden\": \"true\"\n    }, onRenderInitials(this.props, this._onRenderInitials)), !hideImage && onRenderPersonaCoin(this.props, this._onRenderCoin), React.createElement(PersonaPresence, __assign({}, personaPresenceProps))) :\n    // Otherwise, render just PersonaPresence.\n    this.props.presence ? React.createElement(PersonaPresence, __assign({}, personaPresenceProps)) :\n    // Just render Contact Icon if there isn't a Presence prop.\n    React.createElement(Icon, {\n      iconName: \"Contact\",\n      className: classNames.size10WithoutPresenceIcon\n    }), this.props.children);\n  };\n  /**\n   * Deprecation helper for getting text.\n   */\n  PersonaCoinBase.prototype._getText = function () {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.props.text || this.props.primaryText || '';\n  };\n  PersonaCoinBase.defaultProps = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: ''\n  };\n  return PersonaCoinBase;\n}(React.Component);\nexport { PersonaCoinBase };","map":{"version":3,"sources":["components/Persona/PersonaCoin/PersonaCoin.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  warnDeprecations,\n  classNamesFunction,\n  divProperties,\n  memoizeFunction,\n  getInitials,\n  getNativeProps,\n  getRTL,\n} from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport {\n  IPersonaCoinProps,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles,\n  IPersonaPresenceProps,\n  PersonaInitialsColor,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\n\nconst getClassNames = classNamesFunction<IPersonaCoinStyleProps, IPersonaCoinStyles>({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nconst getInitialsStyles = memoizeFunction(\n  (\n    className: string,\n    initialsColor: PersonaInitialsColor | string | undefined,\n    initialsTextColor: string | undefined,\n    text: string | undefined,\n    primaryText: string | undefined,\n    showUnknownPersonaCoin: boolean | undefined,\n  ) =>\n    mergeStyles(\n      className,\n      !showUnknownPersonaCoin && {\n        backgroundColor: getPersonaInitialsColor({ text, initialsColor, primaryText }),\n        color: initialsTextColor,\n      },\n    ),\n);\n\nexport interface IPersonaState {\n  isImageLoaded?: boolean;\n  isImageError?: boolean;\n}\n\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport class PersonaCoinBase extends React.Component<IPersonaCoinProps, IPersonaState> {\n  public static defaultProps: IPersonaCoinProps = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: '',\n  };\n\n  constructor(props: IPersonaCoinProps) {\n    super(props);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('PersonaCoin', props, { primaryText: 'text' });\n    }\n\n    this.state = {\n      isImageLoaded: false,\n      isImageError: false,\n    };\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IPersonaCoinProps): void {\n    if (nextProps.imageUrl !== this.props.imageUrl) {\n      this.setState({\n        isImageLoaded: false,\n        isImageError: false,\n      });\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      className,\n      coinProps,\n      showUnknownPersonaCoin,\n      coinSize,\n      styles,\n      imageUrl,\n      initialsColor,\n      initialsTextColor,\n      isOutOfOffice,\n      /* eslint-disable deprecation/deprecation */\n      onRenderCoin = this._onRenderCoin,\n      onRenderPersonaCoin = onRenderCoin,\n      /* eslint-enable deprecation/deprecation */\n      onRenderInitials = this._onRenderInitials,\n      presence,\n      presenceTitle,\n      presenceColors,\n      // eslint-disable-next-line deprecation/deprecation\n      primaryText,\n      showInitialsUntilImageLoads,\n      text,\n      theme,\n    } = this.props;\n\n    const size = this.props.size as PersonaSize;\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n    const divCoinProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(coinProps || {}, divProperties);\n    const coinSizeStyle = coinSize ? { width: coinSize, height: coinSize } : undefined;\n    const hideImage = showUnknownPersonaCoin;\n\n    const personaPresenceProps: IPersonaPresenceProps = {\n      coinSize,\n      isOutOfOffice,\n      presence,\n      presenceTitle,\n      presenceColors,\n      size,\n      theme,\n    };\n\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className: coinProps && coinProps.className ? coinProps.className : className,\n      size,\n      coinSize,\n      showUnknownPersonaCoin,\n    });\n\n    const shouldRenderInitials = Boolean(\n      !this.state.isImageLoaded &&\n        ((showInitialsUntilImageLoads && imageUrl) || !imageUrl || this.state.isImageError || hideImage),\n    );\n\n    return (\n      <div role=\"presentation\" {...divProps} className={classNames.coin}>\n        {// Render PersonaCoin if size is not size8. size10 and tiny need to removed after a deprecation cleanup.\n        // eslint-disable-next-line deprecation/deprecation\n        size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? (\n          <div role=\"presentation\" {...divCoinProps} className={classNames.imageArea} style={coinSizeStyle}>\n            {shouldRenderInitials && (\n              <div\n                className={getInitialsStyles(\n                  classNames.initials,\n                  initialsColor,\n                  initialsTextColor,\n                  text,\n                  primaryText,\n                  showUnknownPersonaCoin,\n                )}\n                style={coinSizeStyle}\n                aria-hidden=\"true\"\n              >\n                {onRenderInitials(this.props, this._onRenderInitials)}\n              </div>\n            )}\n            {!hideImage && onRenderPersonaCoin(this.props, this._onRenderCoin)}\n            <PersonaPresence {...personaPresenceProps} />\n          </div>\n        ) : // Otherwise, render just PersonaPresence.\n        this.props.presence ? (\n          <PersonaPresence {...personaPresenceProps} />\n        ) : (\n          // Just render Contact Icon if there isn't a Presence prop.\n          <Icon iconName=\"Contact\" className={classNames.size10WithoutPresenceIcon} />\n        )}\n        {this.props.children}\n      </div>\n    );\n  }\n\n  private _onRenderCoin = (props: IPersonaCoinProps): JSX.Element | null => {\n    const {\n      coinSize,\n      styles,\n      imageUrl,\n      imageAlt,\n      imageShouldFadeIn,\n      imageShouldStartVisible,\n      theme,\n      showUnknownPersonaCoin,\n    } = this.props;\n\n    // Render the Image component only if an image URL is provided\n    if (!imageUrl) {\n      return null;\n    }\n\n    const size = this.props.size as PersonaSize;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      size,\n      showUnknownPersonaCoin,\n    });\n\n    const dimension = coinSize || sizeToPixels[size];\n\n    return (\n      <Image\n        className={classNames.image}\n        imageFit={ImageFit.cover}\n        src={imageUrl}\n        width={dimension}\n        height={dimension}\n        alt={imageAlt}\n        shouldFadeIn={imageShouldFadeIn}\n        shouldStartVisible={imageShouldStartVisible}\n        onLoadingStateChange={this._onPhotoLoadingStateChange}\n      />\n    );\n  };\n\n  /**\n   * Deprecation helper for getting text.\n   */\n  private _getText(): string {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.props.text || this.props.primaryText || '';\n  }\n\n  private _onRenderInitials = (props: IPersonaCoinProps): JSX.Element => {\n    let { imageInitials } = props;\n    const { allowPhoneInitials, showUnknownPersonaCoin } = props;\n\n    if (showUnknownPersonaCoin) {\n      return <Icon iconName=\"Help\" />;\n    }\n\n    const isRTL = getRTL(this.props.theme);\n\n    imageInitials = imageInitials || getInitials(this._getText(), isRTL, allowPhoneInitials);\n\n    return imageInitials !== '' ? <span>{imageInitials}</span> : <Icon iconName=\"Contact\" />;\n  };\n\n  private _onPhotoLoadingStateChange = (loadState: ImageLoadState) => {\n    this.setState({\n      isImageLoaded: loadState === ImageLoadState.loaded,\n      isImageError: loadState === ImageLoadState.error,\n    });\n\n    this.props.onPhotoLoadingStateChange && this.props.onPhotoLoadingStateChange(loadState);\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}