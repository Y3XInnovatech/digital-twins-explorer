{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { concatStyleSets, getFocusStyle, HighContrastSelector, getScreenSelector, ScreenWidthMaxMedium, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nexport var CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\nvar MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\nvar getItemHighContrastStyles = memoizeFunction(function () {\n  var _a;\n  return {\n    selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n      backgroundColor: 'Highlight',\n      borderColor: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), _a)\n  };\n});\nexport var getMenuItemStyles = memoizeFunction(function (theme) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  var semanticColors = theme.semanticColors,\n    fonts = theme.fonts,\n    palette = theme.palette;\n  var ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n  var ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n  var ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n  var ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n  var menuItemStyles = {\n    item: [fonts.medium, {\n      color: semanticColors.bodyText,\n      position: 'relative',\n      boxSizing: 'border-box'\n    }],\n    divider: {\n      display: 'block',\n      height: '1px',\n      backgroundColor: ContextualMenuItemDividerColor,\n      position: 'relative'\n    },\n    root: [getFocusStyle(theme), fonts.medium, {\n      color: semanticColors.bodyText,\n      backgroundColor: 'transparent',\n      border: 'none',\n      width: '100%',\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      display: 'block',\n      cursor: 'pointer',\n      padding: '0px 8px 0 4px',\n      textAlign: 'left'\n    }],\n    rootDisabled: {\n      color: semanticColors.disabledBodyText,\n      cursor: 'default',\n      pointerEvents: 'none',\n      selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n        color: 'GrayText',\n        opacity: 1\n      }, getHighContrastNoAdjustStyle()), _a)\n    },\n    rootHovered: __assign({\n      backgroundColor: ContextualMenuItemBackgroundHoverColor,\n      color: ContextualMenuItemTextHoverColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDarkAlt\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    }, getItemHighContrastStyles()),\n    rootFocused: __assign({\n      backgroundColor: palette.white\n    }, getItemHighContrastStyles()),\n    rootChecked: __assign({\n      selectors: {\n        '.ms-ContextualMenu-checkmarkIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    }, getItemHighContrastStyles()),\n    rootPressed: __assign({\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDark\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    }, getItemHighContrastStyles()),\n    rootExpanded: __assign({\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      color: semanticColors.bodyTextChecked\n    }, getItemHighContrastStyles()),\n    linkContent: {\n      whiteSpace: 'nowrap',\n      height: 'inherit',\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: '100%'\n    },\n    anchorLink: {\n      padding: '0px 8px 0 4px',\n      textRendering: 'auto',\n      color: 'inherit',\n      letterSpacing: 'normal',\n      wordSpacing: 'normal',\n      textTransform: 'none',\n      textIndent: '0px',\n      textShadow: 'none',\n      textDecoration: 'none',\n      boxSizing: 'border-box'\n    },\n    label: {\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      display: 'inline-block',\n      flexGrow: '1',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    secondaryText: {\n      color: theme.palette.neutralSecondary,\n      paddingLeft: '20px',\n      textAlign: 'right'\n    },\n    icon: {\n      display: 'inline-block',\n      minHeight: '1px',\n      maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      fontSize: IconFontSizes.medium,\n      width: IconFontSizes.medium,\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      selectors: (_b = {}, _b[MediumScreenSelector] = {\n        fontSize: IconFontSizes.large,\n        width: IconFontSizes.large\n      }, _b)\n    },\n    iconColor: {\n      color: semanticColors.menuIcon,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'inherit'\n      }, _c['$root:hover &'] = {\n        selectors: (_d = {}, _d[HighContrastSelector] = {\n          color: 'HighlightText'\n        }, _d)\n      }, _c['$root:focus &'] = {\n        selectors: (_e = {}, _e[HighContrastSelector] = {\n          color: 'HighlightText'\n        }, _e)\n      }, _c)\n    },\n    iconDisabled: {\n      color: semanticColors.disabledBodyText\n    },\n    checkmarkIcon: {\n      color: semanticColors.bodySubtext,\n      selectors: (_f = {}, _f[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _f)\n    },\n    subMenuIcon: {\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      color: palette.neutralSecondary,\n      textAlign: 'center',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      fontSize: IconFontSizes.small,\n      selectors: (_g = {\n        ':hover': {\n          color: palette.neutralPrimary\n        },\n        ':active': {\n          color: palette.neutralPrimary\n        }\n      }, _g[MediumScreenSelector] = {\n        fontSize: IconFontSizes.medium\n      }, _g[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _g)\n    },\n    splitButtonFlexContainer: [getFocusStyle(theme), {\n      display: 'flex',\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'flex-start'\n    }]\n  };\n  return concatStyleSets(menuItemStyles);\n});","map":{"version":3,"sources":["components/ContextualMenu/ContextualMenu.cnstyles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  concatStyleSets,\n  getFocusStyle,\n  HighContrastSelector,\n  IRawStyle,\n  ITheme,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { IMenuItemStyles } from './ContextualMenu.types';\nimport { memoizeFunction } from '../../Utilities';\n\nexport const CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nconst getItemHighContrastStyles = memoizeFunction(\n  (): IRawStyle => {\n    return {\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n          color: 'HighlightText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    };\n  },\n);\n\nexport const getMenuItemStyles = memoizeFunction(\n  (theme: ITheme): IMenuItemStyles => {\n    const { semanticColors, fonts, palette } = theme;\n    const ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n    const ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n    const ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n    const ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n\n    const menuItemStyles: IMenuItemStyles = {\n      item: [\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          position: 'relative',\n          boxSizing: 'border-box',\n        },\n      ],\n      divider: {\n        display: 'block',\n        height: '1px',\n        backgroundColor: ContextualMenuItemDividerColor,\n        position: 'relative',\n      },\n      root: [\n        getFocusStyle(theme),\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          backgroundColor: 'transparent',\n          border: 'none',\n          width: '100%',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          display: 'block',\n          cursor: 'pointer',\n          padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n          textAlign: 'left',\n        },\n      ],\n      rootDisabled: {\n        color: semanticColors.disabledBodyText,\n        cursor: 'default',\n        pointerEvents: 'none',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            opacity: 1,\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      rootHovered: {\n        backgroundColor: ContextualMenuItemBackgroundHoverColor,\n        color: ContextualMenuItemTextHoverColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDarkAlt,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootFocused: {\n        backgroundColor: palette.white,\n        ...getItemHighContrastStyles(),\n      },\n      rootChecked: {\n        selectors: {\n          '.ms-ContextualMenu-checkmarkIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootPressed: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDark,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootExpanded: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        color: semanticColors.bodyTextChecked,\n        ...getItemHighContrastStyles(),\n      },\n      linkContent: {\n        whiteSpace: 'nowrap',\n        height: 'inherit',\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: '100%',\n      },\n      anchorLink: {\n        padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n        textRendering: 'auto',\n        color: 'inherit',\n        letterSpacing: 'normal',\n        wordSpacing: 'normal',\n        textTransform: 'none',\n        textIndent: '0px',\n        textShadow: 'none',\n        textDecoration: 'none',\n        boxSizing: 'border-box',\n      },\n      label: {\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        display: 'inline-block',\n        flexGrow: '1',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n      secondaryText: {\n        color: theme.palette.neutralSecondary,\n        paddingLeft: '20px',\n        textAlign: 'right',\n      },\n      icon: {\n        display: 'inline-block',\n        minHeight: '1px',\n        maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        fontSize: IconFontSizes.medium,\n        width: IconFontSizes.medium,\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        selectors: {\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.large,\n            width: IconFontSizes.large,\n          },\n        },\n      },\n      iconColor: {\n        color: semanticColors.menuIcon,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'inherit',\n          },\n          ['$root:hover &']: {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'HighlightText',\n              },\n            },\n          },\n          ['$root:focus &']: {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'HighlightText',\n              },\n            },\n          },\n        },\n      },\n      iconDisabled: {\n        color: semanticColors.disabledBodyText,\n      },\n      checkmarkIcon: {\n        color: semanticColors.bodySubtext,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n      subMenuIcon: {\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        color: palette.neutralSecondary,\n        textAlign: 'center',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        fontSize: IconFontSizes.small, // 12px\n        selectors: {\n          ':hover': {\n            color: palette.neutralPrimary,\n          },\n          ':active': {\n            color: palette.neutralPrimary,\n          },\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.medium, // 16px\n          },\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n      splitButtonFlexContainer: [\n        getFocusStyle(theme),\n        {\n          display: 'flex',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          flexWrap: 'nowrap',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        },\n      ],\n    };\n\n    return concatStyleSets(menuItemStyles);\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}