{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { initializeComponentRef, EventGroup, Async, classNamesFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nvar MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\nvar getClassNames = classNamesFunction();\nvar TRANSITION_DURATION_DRAG = 200; // ms\nvar TRANSITION_DURATION_DROP = 1500; // ms\nvar CLASSNAME_ADD_INTERVAL = 20; // ms\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\nvar DetailsColumnBase = /** @class */function (_super) {\n  __extends(DetailsColumnBase, _super);\n  function DetailsColumnBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._root = React.createRef();\n    _this._onRenderColumnHeaderTooltip = function (tooltipHostProps) {\n      return React.createElement(\"span\", {\n        className: tooltipHostProps.hostClassName\n      }, tooltipHostProps.children);\n    };\n    _this._onColumnClick = function (ev) {\n      var _a = _this.props,\n        onColumnClick = _a.onColumnClick,\n        column = _a.column;\n      if (column.columnActionsMode === ColumnActionsMode.disabled) {\n        return;\n      }\n      if (column.onColumnClick) {\n        column.onColumnClick(ev, column);\n      }\n      if (onColumnClick) {\n        onColumnClick(ev, column);\n      }\n    };\n    _this._onDragStart = function (item, itemIndex, selectedItems, event) {\n      var classNames = _this._classNames;\n      if (itemIndex) {\n        _this._updateHeaderDragInfo(itemIndex);\n        _this._root.current.classList.add(classNames.borderWhileDragging);\n        _this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderWhileDragging);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n    };\n    _this._onDragEnd = function (item, event) {\n      var classNames = _this._classNames;\n      if (event) {\n        _this._updateHeaderDragInfo(-1, event);\n      }\n      _this._root.current.classList.remove(classNames.borderWhileDragging);\n      _this._root.current.classList.remove(classNames.noBorderWhileDragging);\n    };\n    _this._updateHeaderDragInfo = function (itemIndex, event) {\n      /* eslint-disable deprecation/deprecation */\n      if (_this.props.setDraggedItemIndex) {\n        _this.props.setDraggedItemIndex(itemIndex);\n      }\n      /* eslint-enable deprecation/deprecation */\n      if (_this.props.updateDragInfo) {\n        _this.props.updateDragInfo({\n          itemIndex: itemIndex\n        }, event);\n      }\n    };\n    _this._onColumnContextMenu = function (ev) {\n      var _a = _this.props,\n        onColumnContextMenu = _a.onColumnContextMenu,\n        column = _a.column;\n      if (column.onColumnContextMenu) {\n        column.onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n      if (onColumnContextMenu) {\n        onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n    };\n    _this._onRootMouseDown = function (ev) {\n      var isDraggable = _this.props.isDraggable;\n      // Ignore anything except the primary button.\n      if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n        ev.stopPropagation();\n      }\n    };\n    initializeComponentRef(_this);\n    _this._async = new Async(_this);\n    _this._events = new EventGroup(_this);\n    return _this;\n  }\n  DetailsColumnBase.prototype.render = function () {\n    var _a = this.props,\n      column = _a.column,\n      columnIndex = _a.columnIndex,\n      parentId = _a.parentId,\n      isDraggable = _a.isDraggable,\n      styles = _a.styles,\n      theme = _a.theme,\n      _b = _a.cellStyleProps,\n      cellStyleProps = _b === void 0 ? DEFAULT_CELL_STYLE_PROPS : _b,\n      _c = _a.useFastIcons,\n      useFastIcons = _c === void 0 ? true : _c;\n    var _d = this.props.onRenderColumnHeaderTooltip,\n      onRenderColumnHeaderTooltip = _d === void 0 ? this._onRenderColumnHeaderTooltip : _d;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps: cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP\n    });\n    var classNames = this._classNames;\n    var IconComponent = useFastIcons ? FontIcon : Icon;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      key: column.key,\n      ref: this._root,\n      role: 'columnheader',\n      \"aria-sort\": column.isSorted ? column.isSortedDescending ? 'descending' : 'ascending' : 'none',\n      \"aria-colindex\": columnIndex,\n      className: classNames.root,\n      \"data-is-draggable\": isDraggable,\n      draggable: isDraggable,\n      style: {\n        width: column.calculatedWidth + cellStyleProps.cellLeftPadding + cellStyleProps.cellRightPadding + (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0)\n      },\n      \"data-automationid\": 'ColumnsHeaderColumn',\n      \"data-item-key\": column.key\n    }, isDraggable && React.createElement(IconComponent, {\n      iconName: \"GripperBarVertical\",\n      className: classNames.gripperBarVerticalStyle\n    }), onRenderColumnHeaderTooltip({\n      hostClassName: classNames.cellTooltip,\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      setAriaDescribedBy: false,\n      column: column,\n      content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n      children: React.createElement(\"span\", {\n        id: parentId + \"-\" + column.key,\n        \"aria-label\": column.isIconOnly ? column.name : undefined,\n        \"aria-labelledby\": column.isIconOnly ? undefined : parentId + \"-\" + column.key + \"-name\",\n        className: classNames.cellTitle,\n        \"data-is-focusable\": column.columnActionsMode !== ColumnActionsMode.disabled,\n        role: column.columnActionsMode !== ColumnActionsMode.disabled && (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined) ? 'button' : undefined,\n        \"aria-describedby\": !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleLabel() ? parentId + \"-\" + column.key + \"-tooltip\" : undefined,\n        onContextMenu: this._onColumnContextMenu,\n        onClick: this._onColumnClick,\n        \"aria-haspopup\": column.columnActionsMode === ColumnActionsMode.hasDropdown,\n        \"aria-expanded\": column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n      }, React.createElement(\"span\", {\n        id: parentId + \"-\" + column.key + \"-name\",\n        className: classNames.cellName\n      }, (column.iconName || column.iconClassName) && React.createElement(IconComponent, {\n        className: classNames.iconClassName,\n        iconName: column.iconName\n      }), column.isIconOnly ? React.createElement(\"span\", {\n        className: classNames.accessibleLabel\n      }, column.name) : column.name), column.isFiltered && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"Filter\"\n      }), column.isSorted && React.createElement(IconComponent, {\n        className: classNames.sortIcon,\n        iconName: column.isSortedDescending ? 'SortDown' : 'SortUp'\n      }), column.isGrouped && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"GroupedDescending\"\n      }), column.columnActionsMode === ColumnActionsMode.hasDropdown && !column.isIconOnly && React.createElement(IconComponent, {\n        \"aria-hidden\": true,\n        className: classNames.filterChevron,\n        iconName: \"ChevronDown\"\n      }))\n    }, this._onRenderColumnHeaderTooltip)), !this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleLabel() : null);\n  };\n  DetailsColumnBase.prototype.componentDidMount = function () {\n    var _this = this;\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n    var classNames = this._classNames;\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n        this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n      this._async.setTimeout(function () {\n        if (_this._root.current) {\n          _this._root.current.classList.remove(classNames.borderAfterDropping);\n          _this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  };\n  DetailsColumnBase.prototype.componentWillUnmount = function () {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n      delete this._dragDropSubscription;\n    }\n    this._async.dispose();\n    this._events.dispose();\n  };\n  DetailsColumnBase.prototype.componentDidUpdate = function () {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n      this._events.off(this._root.current, 'mousedown');\n      delete this._dragDropSubscription;\n    }\n  };\n  DetailsColumnBase.prototype._getColumnDragDropOptions = function () {\n    var _this = this;\n    var columnIndex = this.props.columnIndex;\n    var options = {\n      selectionIndex: columnIndex,\n      context: {\n        data: columnIndex,\n        index: columnIndex\n      },\n      canDrag: function () {\n        return _this.props.isDraggable;\n      },\n      canDrop: function () {\n        return false;\n      },\n      onDragStart: this._onDragStart,\n      updateDropState: function () {\n        return undefined;\n      },\n      onDrop: function () {\n        return undefined;\n      },\n      onDragEnd: this._onDragEnd\n    };\n    return options;\n  };\n  DetailsColumnBase.prototype._hasAccessibleLabel = function () {\n    var column = this.props.column;\n    return !!(column.ariaLabel || column.filterAriaLabel || column.sortAscendingAriaLabel || column.sortDescendingAriaLabel || column.groupAriaLabel);\n  };\n  DetailsColumnBase.prototype._renderAccessibleLabel = function () {\n    var _a = this.props,\n      column = _a.column,\n      parentId = _a.parentId;\n    var classNames = this._classNames;\n    return this._hasAccessibleLabel() && !this.props.onRenderColumnHeaderTooltip ? React.createElement(\"label\", {\n      key: column.key + \"_label\",\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      className: classNames.accessibleLabel\n    }, column.ariaLabel, column.isFiltered && column.filterAriaLabel || null, column.isSorted && (column.isSortedDescending ? column.sortDescendingAriaLabel : column.sortAscendingAriaLabel) || null, column.isGrouped && column.groupAriaLabel || null) : null;\n  };\n  DetailsColumnBase.prototype._addDragDropHandling = function () {\n    this._dragDropSubscription = this.props.dragDropHelper.subscribe(this._root.current, this._events, this._getColumnDragDropOptions());\n    // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  };\n  return DetailsColumnBase;\n}(React.Component);\nexport { DetailsColumnBase };","map":{"version":3,"sources":["components/DetailsList/DetailsColumn.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,IAAI,EAAE,QAAQ,QAAQ,YAAY;AAE3C,SAAS,sBAAsB,EAAE,UAAU,EAAE,KAAK,EAAe,kBAAkB,QAAQ,iBAAiB;AAC5G,SAAS,iBAAiB,QAAQ,qBAAqB;AAEvD,SAAS,wBAAwB,QAAQ,qBAAqB;AAQ9D,IAAM,wBAAwB,GAAG,CAAC,CAAC,CAAC;AAEpC,IAAM,aAAa,GAAG,kBAAkB,CAAA,CAAkD;AAC1F,IAAM,wBAAwB,GAAG,GAAG,CAAC,CAAC;AACtC,IAAM,wBAAwB,GAAG,IAAI,CAAC,CAAC;AACvC,IAAM,sBAAsB,GAAG,EAAE,CAAC,CAAC;AAEnC;;;;AAIG;AACH,IAAA,iBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAuC,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;EAOrC,SAAA,iBAAA,CAAY,KAA0B,EAAA;IAAtC,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IAAA,IAAA;IALN,KAAA,CAAA,KAAK,GAAG,KAAK,CAAC,SAAS,CAAA,CAAkB;IAsLzC,KAAA,CAAA,4BAA4B,GAAG,UAAC,gBAAkD,EAAA;MACxF,OAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;QAAM,SAAS,EAAE,gBAAgB,CAAC;MAAa,CAAA,EAAG,gBAAgB,CAAC,QAAQ,CAAQ;IAC5F,CAAC;IAEO,KAAA,CAAA,cAAc,GAAG,UAAC,EAAiC,EAAA;MACnD,IAAA,EAAA,GAAA,KAAA,CAAA,KAAsC;QAApC,aAAA,GAAA,EAAA,CAAA,aAAa;QAAE,MAAA,GAAA,EAAA,CAAA,MAAqB;MAE5C,IAAI,MAAM,CAAC,iBAAiB,KAAK,iBAAiB,CAAC,QAAQ,EAAE;QAC3D;MACD;MAED,IAAI,MAAM,CAAC,aAAa,EAAE;QACxB,MAAM,CAAC,aAAa,CAAC,EAAE,EAAE,MAAM,CAAC;MACjC;MAED,IAAI,aAAa,EAAE;QACjB,aAAa,CAAC,EAAE,EAAE,MAAM,CAAC;MAC1B;IACH,CAAC;IAiDO,KAAA,CAAA,YAAY,GAAG,UAAC,IAAU,EAAE,SAAkB,EAAE,aAAqB,EAAE,KAAkB,EAAA;MAC/F,IAAM,UAAU,GAAG,KAAI,CAAC,WAAW;MACnC,IAAI,SAAS,EAAE;QACb,KAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC;QACrC,KAAI,CAAC,KAAK,CAAC,OAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,mBAAmB,CAAC;QACjE,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,YAAA;UACrB,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACtB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,qBAAqB,CAAC;UACnE;QACH,CAAC,EAAE,sBAAsB,CAAC;MAC3B;IACH,CAAC;IAEO,KAAA,CAAA,UAAU,GAAG,UAAC,IAAU,EAAE,KAAkB,EAAA;MAClD,IAAM,UAAU,GAAG,KAAI,CAAC,WAAW;MACnC,IAAI,KAAK,EAAE;QACT,KAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;MACtC;MACD,KAAI,CAAC,KAAK,CAAC,OAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC;MACpE,KAAI,CAAC,KAAK,CAAC,OAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,qBAAqB,CAAC;IACxE,CAAC;IAEO,KAAA,CAAA,qBAAqB,GAAG,UAAC,SAAiB,EAAE,KAAkB,EAAA;MACpE;MACA,IAAI,KAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE;QAClC,KAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,SAAS,CAAC;MAC1C;MACD;MACA,IAAI,KAAI,CAAC,KAAK,CAAC,cAAc,EAAE;QAC7B,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC;UAAE,SAAS,EAAA;QAAA,CAAE,EAAE,KAAK,CAAC;MAChD;IACH,CAAC;IAEO,KAAA,CAAA,oBAAoB,GAAG,UAAC,EAAiC,EAAA;MACzD,IAAA,EAAA,GAAA,KAAA,CAAA,KAA4C;QAA1C,mBAAA,GAAA,EAAA,CAAA,mBAAmB;QAAE,MAAA,GAAA,EAAA,CAAA,MAAqB;MAClD,IAAI,MAAM,CAAC,mBAAmB,EAAE;QAC9B,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,EAAE,CAAC;QACtC,EAAE,CAAC,cAAc,CAAA,CAAE;MACpB;MACD,IAAI,mBAAmB,EAAE;QACvB,mBAAmB,CAAC,MAAM,EAAE,EAAE,CAAC;QAC/B,EAAE,CAAC,cAAc,CAAA,CAAE;MACpB;IACH,CAAC;IAEO,KAAA,CAAA,gBAAgB,GAAG,UAAC,EAAc,EAAA;MAChC,IAAA,WAAA,GAAA,KAAA,CAAA,KAAA,CAAA,WAAW;MACnB;MACA,IAAI,WAAW,IAAI,EAAE,CAAC,MAAM,KAAK,wBAAwB,EAAE;QACzD,EAAE,CAAC,eAAe,CAAA,CAAE;MACrB;IACH,CAAC;IAtSC,sBAAsB,CAAC,KAAI,CAAC;IAC5B,KAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,KAAI,CAAC;IAC7B,KAAI,CAAC,OAAO,GAAG,IAAI,UAAU,CAAC,KAAI,CAAC;;EACrC;EAEO,iBAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACQ,IAAA,EAAA,GAAA,IAAA,CAAA,KASQ;MARZ,MAAA,GAAA,EAAA,CAAA,MAAM;MACN,WAAA,GAAA,EAAA,CAAA,WAAW;MACX,QAAA,GAAA,EAAA,CAAA,QAAQ;MACR,WAAA,GAAA,EAAA,CAAA,WAAW;MACX,MAAA,GAAA,EAAA,CAAA,MAAM;MACN,KAAA,GAAA,EAAA,CAAA,KAAK;MACL,EAAA,GAAA,EAAA,CAAA,cAAyC;MAAzC,cAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,wBAAA,GAAA,EAAyC;MACzC,EAAA,GAAA,EAAA,CAAA,YAAmB;MAAnB,YAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,EACY;IACN,IAAA,EAAA,GAAA,IAAA,CAAA,KAAA,CAAA,2BAA+D;MAA/D,2BAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,IAAA,CAAA,4BAAA,GAAA,EAA+D;IAEvE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAM,EAAE;MACvC,KAAK,EAAE,KAAM;MACb,eAAe,EAAE,MAAM,CAAC,eAAe;MACvC,aAAa,EAAE,MAAM,CAAC,aAAa;MACnC,YAAY,EAAE,MAAM,CAAC,iBAAiB,KAAK,iBAAiB,CAAC,QAAQ;MACrE,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI;MACrB,aAAa,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,UAAU;MACvE,QAAQ,EAAE,MAAM,CAAC,QAAQ;MACzB,UAAU,EAAE,MAAM,CAAC,UAAU;MAC7B,cAAc,EAAA,cAAA;MACd,sBAAsB,EAAE,wBAAwB;MAChD,sBAAsB,EAAE;KACzB,CAAC;IAEF,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW;IACnC,IAAM,aAAa,GAAG,YAAY,GAAG,QAAQ,GAAG,IAAI;IAEpD,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MACE,GAAG,EAAE,MAAM,CAAC,GAAG;MACf,GAAG,EAAE,IAAI,CAAC,KAAK;MACf,IAAI,EAAE,cAAc;MAAA,WAAA,EACT,MAAM,CAAC,QAAQ,GAAI,MAAM,CAAC,kBAAkB,GAAG,YAAY,GAAG,WAAW,GAAI,MAAM;MAAA,eAAA,EAC/E,WAAW;MAC1B,SAAS,EAAE,UAAU,CAAC,IAAI;MAAA,mBAAA,EACP,WAAW;MAC9B,SAAS,EAAE,WAAW;MACtB,KAAK,EAAE;QACL,KAAK,EACH,MAAM,CAAC,eAAgB,GACvB,cAAc,CAAC,eAAe,GAC9B,cAAc,CAAC,gBAAgB,IAC9B,MAAM,CAAC,QAAQ,GAAG,cAAc,CAAC,qBAAqB,GAAG,CAAC;OAC9D;MAAA,mBAAA,EACkB,qBAAqB;MAAA,eAAA,EACzB,MAAM,CAAC;IAAG,CAAA,EAExB,WAAW,IACV,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA;MAAC,QAAQ,EAAC,oBAAoB;MAAC,SAAS,EAAE,UAAU,CAAC;IAAuB,CAAA,CAC3F,EACA,2BAA2B,CAC1B;MACE,aAAa,EAAE,UAAU,CAAC,WAAW;MACrC,EAAE,EAAK,QAAQ,GAAA,GAAA,GAAI,MAAM,CAAC,GAAG,GAAA,UAAU;MACvC,kBAAkB,EAAE,KAAK;MACzB,MAAM,EAAA,MAAA;MACN,OAAO,EAAE,MAAM,CAAC,iBAAiB,KAAK,iBAAiB,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,GAAG,EAAE;MACxF,QAAQ,EACN,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;QACE,EAAE,EAAK,QAAQ,GAAA,GAAA,GAAI,MAAM,CAAC,GAAK;QAAA,YAAA,EACnB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,GAAG,SAAS;QAAA,iBAAA,EACtC,MAAM,CAAC,UAAU,GAAG,SAAS,GAAM,QAAQ,GAAA,GAAA,GAAI,MAAM,CAAC,GAAG,GAAA,OAAO;QACjF,SAAS,EAAE,UAAU,CAAC,SAAS;QAAA,mBAAA,EACZ,MAAM,CAAC,iBAAiB,KAAK,iBAAiB,CAAC,QAAQ;QAC1E,IAAI,EACF,MAAM,CAAC,iBAAiB,KAAK,iBAAiB,CAAC,QAAQ,KACtD,MAAM,CAAC,aAAa,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,KAAK,SAAS,CAAC,GAC1E,QAAQ,GACR,SAAS;QAAA,kBAAA,EAGb,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B,IAAI,IAAI,CAAC,mBAAmB,CAAA,CAAE,GAC9D,QAAQ,GAAA,GAAA,GAAI,MAAM,CAAC,GAAG,GAAA,UAAU,GACnC,SAAS;QAEf,aAAa,EAAE,IAAI,CAAC,oBAAoB;QACxC,OAAO,EAAE,IAAI,CAAC,cAAc;QAAA,eAAA,EACb,MAAM,CAAC,iBAAiB,KAAK,iBAAiB,CAAC,WAAW;QAAA,eAAA,EAEvE,MAAM,CAAC,iBAAiB,KAAK,iBAAiB,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG;MAAS,CAAA,EAG9F,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;QAAM,EAAE,EAAK,QAAQ,GAAA,GAAA,GAAI,MAAM,CAAC,GAAG,GAAA,OAAO;QAAE,SAAS,EAAE,UAAU,CAAC;MAAQ,CAAA,EACvE,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,aAAa,KACvC,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA;QAAC,SAAS,EAAE,UAAU,CAAC,aAAa;QAAE,QAAQ,EAAE,MAAM,CAAC;MAAQ,CAAA,CAC9E,EAEA,MAAM,CAAC,UAAU,GAChB,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;QAAM,SAAS,EAAE,UAAU,CAAC;MAAe,CAAA,EAAG,MAAM,CAAC,IAAI,CAAQ,GAEjE,MAAM,CAAC,IACR,CACI,EAEN,MAAM,CAAC,UAAU,IAAI,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA;QAAC,SAAS,EAAE,UAAU,CAAC,QAAQ;QAAE,QAAQ,EAAC;MAAQ,CAAA,CAAG,EAExF,MAAM,CAAC,QAAQ,IACd,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA;QACZ,SAAS,EAAE,UAAU,CAAC,QAAQ;QAC9B,QAAQ,EAAE,MAAM,CAAC,kBAAkB,GAAG,UAAU,GAAG;MAAQ,CAAA,CAE9D,EAEA,MAAM,CAAC,SAAS,IAAI,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA;QAAC,SAAS,EAAE,UAAU,CAAC,QAAQ;QAAE,QAAQ,EAAC;MAAmB,CAAA,CAAG,EAElG,MAAM,CAAC,iBAAiB,KAAK,iBAAiB,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,UAAU,IAC/E,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA;QAAA,aAAA,EAAc,IAAI;QAAE,SAAS,EAAE,UAAU,CAAC,aAAa;QAAE,QAAQ,EAAC;MAAa,CAAA,CAC9F;KAGN,EACD,IAAI,CAAC,4BAA4B,CAClC,CACG,EACL,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B,GAAG,IAAI,CAAC,sBAAsB,CAAA,CAAE,GAAG,IAAI,CAC9E;EAEP,CAAC;EAEM,iBAAA,CAAA,SAAA,CAAA,iBAAiB,GAAxB,YAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IACE,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;MACvD,IAAI,CAAC,oBAAoB,CAAA,CAAE;IAC5B;IAED,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW;IAEnC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;MACxB,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;QACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,mBAAmB,CAAC;QAEhE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,YAAA;UACrB,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACtB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,qBAAqB,CAAC;UACnE;QACH,CAAC,EAAE,sBAAsB,CAAC;MAC3B;MAED,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,YAAA;QACrB,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;UACtB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC;UACnE,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,qBAAqB,CAAC;QACtE;MACH,CAAC,EAAE,wBAAwB,GAAG,sBAAsB,CAAC;IACtD;EACH,CAAC;EAEM,iBAAA,CAAA,SAAA,CAAA,oBAAoB,GAA3B,YAAA;IACE,IAAI,IAAI,CAAC,qBAAqB,EAAE;MAC9B,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAA,CAAE;MACpC,OAAO,IAAI,CAAC,qBAAqB;IAClC;IACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAA,CAAE;IACrB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAA,CAAE;EACxB,CAAC;EAEM,iBAAA,CAAA,SAAA,CAAA,kBAAkB,GAAzB,YAAA;IACE,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;MACtF,IAAI,CAAC,oBAAoB,CAAA,CAAE;IAC5B;IAED,IAAI,IAAI,CAAC,qBAAqB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;MACzD,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAA,CAAE;MACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC;MACjD,OAAO,IAAI,CAAC,qBAAqB;IAClC;EACH,CAAC;EAsBO,iBAAA,CAAA,SAAA,CAAA,yBAAyB,GAAjC,YAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IACU,IAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,WAAW;IACnB,IAAM,OAAO,GAAG;MACd,cAAc,EAAE,WAAW;MAC3B,OAAO,EAAE;QAAE,IAAI,EAAE,WAAW;QAAE,KAAK,EAAE;MAAW,CAAE;MAClD,OAAO,EAAE,SAAA,CAAA,EAAA;QAAM,OAAA,KAAI,CAAC,KAAK,CAAC,WAAY;MAAvB,CAAuB;MACtC,OAAO,EAAE,SAAA,CAAA,EAAA;QAAM,OAAA,KAAK;MAAL,CAAK;MACpB,WAAW,EAAE,IAAI,CAAC,YAAY;MAC9B,eAAe,EAAE,SAAA,CAAA,EAAA;QAAM,OAAA,SAAS;MAAT,CAAS;MAChC,MAAM,EAAE,SAAA,CAAA,EAAA;QAAM,OAAA,SAAS;MAAT,CAAS;MACvB,SAAS,EAAE,IAAI,CAAC;KACjB;IACD,OAAO,OAAO;EAChB,CAAC;EAEO,iBAAA,CAAA,SAAA,CAAA,mBAAmB,GAA3B,YAAA;IACU,IAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,MAAM;IAEd,OAAO,CAAC,EACN,MAAM,CAAC,SAAS,IAChB,MAAM,CAAC,eAAe,IACtB,MAAM,CAAC,sBAAsB,IAC7B,MAAM,CAAC,uBAAuB,IAC9B,MAAM,CAAC,cAAc,CACtB;EACH,CAAC;EAEO,iBAAA,CAAA,SAAA,CAAA,sBAAsB,GAA9B,YAAA;IACQ,IAAA,EAAA,GAAA,IAAA,CAAA,KAAiC;MAA/B,MAAA,GAAA,EAAA,CAAA,MAAM;MAAE,QAAA,GAAA,EAAA,CAAA,QAAuB;IACvC,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW;IAEnC,OAAO,IAAI,CAAC,mBAAmB,CAAA,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B,GAC1E,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;MACE,GAAG,EAAK,MAAM,CAAC,GAAG,GAAA,QAAQ;MAC1B,EAAE,EAAK,QAAQ,GAAA,GAAA,GAAI,MAAM,CAAC,GAAG,GAAA,UAAU;MACvC,SAAS,EAAE,UAAU,CAAC;IAAe,CAAA,EAEpC,MAAM,CAAC,SAAS,EACf,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,eAAe,IAAK,IAAI,EACpD,MAAM,CAAC,QAAQ,KACd,MAAM,CAAC,kBAAkB,GAAG,MAAM,CAAC,uBAAuB,GAAG,MAAM,CAAC,sBAAsB,CAAC,IAC5F,IAAI,EACJ,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,cAAc,IAAK,IAAI,CAC9C,GACN,IAAI;EACV,CAAC;EAuDO,iBAAA,CAAA,SAAA,CAAA,oBAAoB,GAA5B,YAAA;IACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAe,CAAC,SAAS,CAC/D,IAAI,CAAC,KAAK,CAAC,OAAQ,EACnB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,yBAAyB,CAAA,CAAE,CACjC;IAED;IACA,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC;EACzE,CAAC;EACH,OAAA,iBAAC;AAAD,CAAC,CA3TsC,KAAK,CAAC,SAAS,CAAA","sourcesContent":["import * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { initializeComponentRef, EventGroup, Async, IDisposable, classNamesFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { IDragDropOptions } from './../../utilities/dragdrop/interfaces';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport {\n  IDetailsColumnStyleProps,\n  IDetailsColumnProps,\n  IDetailsColumnStyles,\n  IDetailsColumnRenderTooltipProps,\n} from './DetailsColumn.types';\n\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nconst getClassNames = classNamesFunction<IDetailsColumnStyleProps, IDetailsColumnStyles>();\nconst TRANSITION_DURATION_DRAG = 200; // ms\nconst TRANSITION_DURATION_DROP = 1500; // ms\nconst CLASSNAME_ADD_INTERVAL = 20; // ms\n\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\nexport class DetailsColumnBase extends React.Component<IDetailsColumnProps> {\n  private _async: Async;\n  private _events: EventGroup;\n  private _root = React.createRef<HTMLDivElement>();\n  private _dragDropSubscription: IDisposable;\n  private _classNames: IProcessedStyleSet<IDetailsColumnStyles>;\n\n  constructor(props: IDetailsColumnProps) {\n    super(props);\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      column,\n      columnIndex,\n      parentId,\n      isDraggable,\n      styles,\n      theme,\n      cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n      useFastIcons = true,\n    } = this.props;\n    const { onRenderColumnHeaderTooltip = this._onRenderColumnHeaderTooltip } = this.props;\n\n    this._classNames = getClassNames(styles, {\n      theme: theme!,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP,\n    });\n\n    const classNames = this._classNames;\n    const IconComponent = useFastIcons ? FontIcon : Icon;\n\n    return (\n      <>\n        <div\n          key={column.key}\n          ref={this._root}\n          role={'columnheader'}\n          aria-sort={column.isSorted ? (column.isSortedDescending ? 'descending' : 'ascending') : 'none'}\n          aria-colindex={columnIndex}\n          className={classNames.root}\n          data-is-draggable={isDraggable}\n          draggable={isDraggable}\n          style={{\n            width:\n              column.calculatedWidth! +\n              cellStyleProps.cellLeftPadding +\n              cellStyleProps.cellRightPadding +\n              (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0),\n          }}\n          data-automationid={'ColumnsHeaderColumn'}\n          data-item-key={column.key}\n        >\n          {isDraggable && (\n            <IconComponent iconName=\"GripperBarVertical\" className={classNames.gripperBarVerticalStyle} />\n          )}\n          {onRenderColumnHeaderTooltip(\n            {\n              hostClassName: classNames.cellTooltip,\n              id: `${parentId}-${column.key}-tooltip`,\n              setAriaDescribedBy: false,\n              column,\n              content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n              children: (\n                <span\n                  id={`${parentId}-${column.key}`}\n                  aria-label={column.isIconOnly ? column.name : undefined}\n                  aria-labelledby={column.isIconOnly ? undefined : `${parentId}-${column.key}-name`}\n                  className={classNames.cellTitle}\n                  data-is-focusable={column.columnActionsMode !== ColumnActionsMode.disabled}\n                  role={\n                    column.columnActionsMode !== ColumnActionsMode.disabled &&\n                    (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined)\n                      ? 'button'\n                      : undefined\n                  }\n                  aria-describedby={\n                    !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleLabel()\n                      ? `${parentId}-${column.key}-tooltip`\n                      : undefined\n                  }\n                  onContextMenu={this._onColumnContextMenu}\n                  onClick={this._onColumnClick}\n                  aria-haspopup={column.columnActionsMode === ColumnActionsMode.hasDropdown}\n                  aria-expanded={\n                    column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n                  }\n                >\n                  <span id={`${parentId}-${column.key}-name`} className={classNames.cellName}>\n                    {(column.iconName || column.iconClassName) && (\n                      <IconComponent className={classNames.iconClassName} iconName={column.iconName} />\n                    )}\n\n                    {column.isIconOnly ? (\n                      <span className={classNames.accessibleLabel}>{column.name}</span>\n                    ) : (\n                      column.name\n                    )}\n                  </span>\n\n                  {column.isFiltered && <IconComponent className={classNames.nearIcon} iconName=\"Filter\" />}\n\n                  {column.isSorted && (\n                    <IconComponent\n                      className={classNames.sortIcon}\n                      iconName={column.isSortedDescending ? 'SortDown' : 'SortUp'}\n                    />\n                  )}\n\n                  {column.isGrouped && <IconComponent className={classNames.nearIcon} iconName=\"GroupedDescending\" />}\n\n                  {column.columnActionsMode === ColumnActionsMode.hasDropdown && !column.isIconOnly && (\n                    <IconComponent aria-hidden={true} className={classNames.filterChevron} iconName=\"ChevronDown\" />\n                  )}\n                </span>\n              ),\n            },\n            this._onRenderColumnHeaderTooltip,\n          )}\n        </div>\n        {!this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleLabel() : null}\n      </>\n    );\n  }\n\n  public componentDidMount(): void {\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    const classNames = this._classNames;\n\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n\n        this._async.setTimeout(() => {\n          if (this._root.current) {\n            this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n\n      this._async.setTimeout(() => {\n        if (this._root.current) {\n          this._root.current.classList.remove(classNames.borderAfterDropping);\n          this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n      delete this._dragDropSubscription;\n    }\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public componentDidUpdate(): void {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n      this._events.off(this._root.current, 'mousedown');\n      delete this._dragDropSubscription;\n    }\n  }\n\n  private _onRenderColumnHeaderTooltip = (tooltipHostProps: IDetailsColumnRenderTooltipProps): JSX.Element => {\n    return <span className={tooltipHostProps.hostClassName}>{tooltipHostProps.children}</span>;\n  };\n\n  private _onColumnClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onColumnClick, column } = this.props;\n\n    if (column.columnActionsMode === ColumnActionsMode.disabled) {\n      return;\n    }\n\n    if (column.onColumnClick) {\n      column.onColumnClick(ev, column);\n    }\n\n    if (onColumnClick) {\n      onColumnClick(ev, column);\n    }\n  };\n\n  private _getColumnDragDropOptions(): IDragDropOptions {\n    const { columnIndex } = this.props;\n    const options = {\n      selectionIndex: columnIndex,\n      context: { data: columnIndex, index: columnIndex },\n      canDrag: () => this.props.isDraggable!,\n      canDrop: () => false,\n      onDragStart: this._onDragStart,\n      updateDropState: () => undefined,\n      onDrop: () => undefined,\n      onDragEnd: this._onDragEnd,\n    };\n    return options;\n  }\n\n  private _hasAccessibleLabel(): boolean {\n    const { column } = this.props;\n\n    return !!(\n      column.ariaLabel ||\n      column.filterAriaLabel ||\n      column.sortAscendingAriaLabel ||\n      column.sortDescendingAriaLabel ||\n      column.groupAriaLabel\n    );\n  }\n\n  private _renderAccessibleLabel(): JSX.Element | null {\n    const { column, parentId } = this.props;\n    const classNames = this._classNames;\n\n    return this._hasAccessibleLabel() && !this.props.onRenderColumnHeaderTooltip ? (\n      <label\n        key={`${column.key}_label`}\n        id={`${parentId}-${column.key}-tooltip`}\n        className={classNames.accessibleLabel}\n      >\n        {column.ariaLabel}\n        {(column.isFiltered && column.filterAriaLabel) || null}\n        {(column.isSorted &&\n          (column.isSortedDescending ? column.sortDescendingAriaLabel : column.sortAscendingAriaLabel)) ||\n          null}\n        {(column.isGrouped && column.groupAriaLabel) || null}\n      </label>\n    ) : null;\n  }\n\n  private _onDragStart = (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent): void => {\n    const classNames = this._classNames;\n    if (itemIndex) {\n      this._updateHeaderDragInfo(itemIndex);\n      this._root.current!.classList.add(classNames.borderWhileDragging);\n      this._async.setTimeout(() => {\n        if (this._root.current) {\n          this._root.current.classList.add(classNames.noBorderWhileDragging);\n        }\n      }, CLASSNAME_ADD_INTERVAL);\n    }\n  };\n\n  private _onDragEnd = (item?: any, event?: MouseEvent): void => {\n    const classNames = this._classNames;\n    if (event) {\n      this._updateHeaderDragInfo(-1, event);\n    }\n    this._root.current!.classList.remove(classNames.borderWhileDragging);\n    this._root.current!.classList.remove(classNames.noBorderWhileDragging);\n  };\n\n  private _updateHeaderDragInfo = (itemIndex: number, event?: MouseEvent) => {\n    /* eslint-disable deprecation/deprecation */\n    if (this.props.setDraggedItemIndex) {\n      this.props.setDraggedItemIndex(itemIndex);\n    }\n    /* eslint-enable deprecation/deprecation */\n    if (this.props.updateDragInfo) {\n      this.props.updateDragInfo({ itemIndex }, event);\n    }\n  };\n\n  private _onColumnContextMenu = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onColumnContextMenu, column } = this.props;\n    if (column.onColumnContextMenu) {\n      column.onColumnContextMenu(column, ev);\n      ev.preventDefault();\n    }\n    if (onColumnContextMenu) {\n      onColumnContextMenu(column, ev);\n      ev.preventDefault();\n    }\n  };\n\n  private _onRootMouseDown = (ev: MouseEvent): void => {\n    const { isDraggable } = this.props;\n    // Ignore anything except the primary button.\n    if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n      ev.stopPropagation();\n    }\n  };\n\n  private _addDragDropHandling() {\n    this._dragDropSubscription = this.props.dragDropHelper!.subscribe(\n      this._root.current!,\n      this._events,\n      this._getColumnDragDropOptions(),\n    );\n\n    // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}