{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nexport var CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e;\n  // eslint-disable-next-line deprecation/deprecation\n  var _f = props.height,\n    height = _f === void 0 ? props.checkBoxHeight || '18px' : _f,\n    checked = props.checked,\n    className = props.className,\n    theme = props.theme;\n  var palette = theme.palette,\n    semanticColors = theme.semanticColors,\n    fonts = theme.fonts;\n  var isRTL = getRTL(theme);\n  var classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n  var sharedCircleCheck = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    verticalAlign: 'middle'\n  };\n  return {\n    root: [classNames.root, fonts.medium, {\n      // lineHeight currently needs to be a string to output without 'px'\n      lineHeight: '1',\n      width: height,\n      height: height,\n      verticalAlign: 'top',\n      position: 'relative',\n      userSelect: 'none',\n      selectors: (_a = {\n        ':before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: '1px',\n          right: '1px',\n          bottom: '1px',\n          left: '1px',\n          borderRadius: '50%',\n          opacity: 1,\n          background: semanticColors.bodyBackground\n        }\n      }, _a[\".\" + classNames.checkHost + \":hover &, .\" + classNames.checkHost + \":focus &, &:hover, &:focus\"] = {\n        opacity: 1\n      }, _a)\n    }, checked && ['is-checked', {\n      selectors: {\n        ':before': {\n          background: palette.themePrimary,\n          opacity: 1,\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            background: 'Window'\n          }, _b)\n        }\n      }\n    }], className],\n    circle: [classNames.circle, sharedCircleCheck, {\n      color: palette.neutralSecondary,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _c)\n    }, checked && {\n      color: palette.white\n    }],\n    check: [classNames.check, sharedCircleCheck, {\n      opacity: 0,\n      color: palette.neutralSecondary,\n      fontSize: IconFontSizes.medium,\n      left: isRTL ? '-0.5px' : '.5px',\n      selectors: (_d = {\n        ':hover': {\n          opacity: 1\n        }\n      }, _d[HighContrastSelector] = __assign({}, getHighContrastNoAdjustStyle()), _d)\n    }, checked && {\n      opacity: 1,\n      color: palette.white,\n      fontWeight: 900,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none',\n        color: 'WindowText'\n      }, _e)\n    }],\n    checkHost: classNames.checkHost\n  };\n};","map":{"version":3,"sources":["components/Check/Check.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { ICheckStyleProps, ICheckStyles } from './Check.types';\nimport {\n  HighContrastSelector,\n  IStyle,\n  getGlobalClassNames,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { getRTL } from '../../Utilities';\n\nexport const CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost',\n};\n\nexport const getStyles = (props: ICheckStyleProps): ICheckStyles => {\n  // eslint-disable-next-line deprecation/deprecation\n  const { height = props.checkBoxHeight || '18px', checked, className, theme } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n  const isRTL = getRTL(theme);\n\n  const classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n\n  const sharedCircleCheck: IStyle = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    verticalAlign: 'middle',\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      {\n        // lineHeight currently needs to be a string to output without 'px'\n        lineHeight: '1',\n        width: height,\n        height: height,\n        verticalAlign: 'top',\n        position: 'relative',\n        userSelect: 'none',\n\n        selectors: {\n          ':before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '1px',\n            right: '1px',\n            bottom: '1px',\n            left: '1px',\n            borderRadius: '50%',\n            opacity: 1,\n            background: semanticColors.bodyBackground,\n          },\n\n          [`.${classNames.checkHost}:hover &, .${classNames.checkHost}:focus &, &:hover, &:focus`]: {\n            opacity: 1,\n          },\n        },\n      },\n\n      checked && [\n        'is-checked',\n        {\n          selectors: {\n            ':before': {\n              background: palette.themePrimary,\n              opacity: 1,\n              selectors: {\n                [HighContrastSelector]: {\n                  background: 'Window',\n                },\n              },\n            },\n          },\n        },\n      ],\n      className,\n    ],\n\n    circle: [\n      classNames.circle,\n      sharedCircleCheck,\n\n      {\n        color: palette.neutralSecondary,\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n          },\n        },\n      },\n\n      checked && {\n        color: palette.white,\n      },\n    ],\n\n    check: [\n      classNames.check,\n      sharedCircleCheck,\n\n      {\n        opacity: 0,\n        color: palette.neutralSecondary,\n        fontSize: IconFontSizes.medium,\n        left: isRTL ? '-0.5px' : '.5px', // for centering the check icon inside the circle.\n\n        selectors: {\n          ':hover': {\n            opacity: 1,\n          },\n\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      checked && {\n        opacity: 1,\n        color: palette.white,\n        fontWeight: 900,\n\n        selectors: {\n          [HighContrastSelector]: {\n            border: 'none',\n            color: 'WindowText',\n          },\n        },\n      },\n    ],\n\n    checkHost: classNames.checkHost,\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}