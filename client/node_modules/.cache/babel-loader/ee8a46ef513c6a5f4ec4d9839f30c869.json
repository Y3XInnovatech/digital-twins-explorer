{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { AnimationClassNames, AnimationStyles, HighContrastSelector, getFocusStyle, getGlobalClassNames, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nexport var DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields'\n};\nvar IsFocusableSelector = \"[data-is-focusable='true']\";\nexport var DEFAULT_CELL_STYLE_PROPS = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24\n};\n// Source of default row heights to share.\nexport var DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32\n};\n// Constant values\nvar values = __assign(__assign({}, DEFAULT_ROW_HEIGHTS), {\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6\n});\nexport var getDetailsRowStyles = function (props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n  var theme = props.theme,\n    isSelected = props.isSelected,\n    canSelect = props.canSelect,\n    droppingClassName = props.droppingClassName,\n    anySelected = props.anySelected,\n    isCheckVisible = props.isCheckVisible,\n    checkboxCellClassName = props.checkboxCellClassName,\n    compact = props.compact,\n    className = props.className,\n    _o = props.cellStyleProps,\n    cellStyleProps = _o === void 0 ? DEFAULT_CELL_STYLE_PROPS : _o,\n    enableUpdateAnimations = props.enableUpdateAnimations;\n  var palette = theme.palette,\n    fonts = theme.fonts;\n  var neutralPrimary = palette.neutralPrimary,\n    white = palette.white,\n    neutralSecondary = palette.neutralSecondary,\n    neutralLighter = palette.neutralLighter,\n    neutralLight = palette.neutralLight,\n    neutralDark = palette.neutralDark,\n    neutralQuaternaryAlt = palette.neutralQuaternaryAlt;\n  var focusBorder = theme.semanticColors.focusBorder;\n  var classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n  var colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt\n  };\n  // Selected row styles\n  var selectedStyles = [getFocusStyle(theme, {\n    inset: -1,\n    borderColor: focusBorder,\n    outlineColor: white\n  }), classNames.isSelected, {\n    color: colors.selectedMetaText,\n    background: colors.selectedBackground,\n    borderBottom: \"1px solid \" + white,\n    selectors: (_a = {\n      '&:before': {\n        position: 'absolute',\n        display: 'block',\n        top: -1,\n        height: 1,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        content: '',\n        borderTop: \"1px solid \" + white\n      },\n      // Selected State hover\n      '&:hover': {\n        background: colors.selectedHoverBackground,\n        color: colors.selectedHoverMetaText,\n        selectors: (_b = {},\n        // Selected State hover meta cell\n        _b[\".\" + classNames.cell + \" \" + HighContrastSelector] = {\n          color: 'HighlightText',\n          selectors: {\n            '> a': {\n              color: 'HighlightText'\n            }\n          }\n        },\n        // Selected State hover Header cell\n        _b[\".\" + classNames.isRowHeader] = {\n          color: colors.selectedHoverHeaderText,\n          selectors: (_c = {}, _c[HighContrastSelector] = {\n            color: 'HighlightText'\n          }, _c)\n        },\n        // Ensure high-contrast mode overrides default hover background\n        _b[HighContrastSelector] = {\n          background: 'Highlight'\n        }, _b)\n      },\n      // Focus state\n      '&:focus': {\n        background: colors.focusBackground,\n        selectors: (_d = {},\n        // Selected State hover meta cell\n        _d[\".\" + classNames.cell] = {\n          color: colors.focusMetaText,\n          selectors: (_e = {}, _e[HighContrastSelector] = {\n            color: 'HighlightText',\n            selectors: {\n              '> a': {\n                color: 'HighlightText'\n              }\n            }\n          }, _e)\n        },\n        // Row header cell\n        _d[\".\" + classNames.isRowHeader] = {\n          color: colors.focusHeaderText,\n          selectors: (_f = {}, _f[HighContrastSelector] = {\n            color: 'HighlightText'\n          }, _f)\n        },\n        // Ensure high-contrast mode overrides default focus background\n        _d[HighContrastSelector] = {\n          background: 'Highlight'\n        }, _d)\n      }\n    }, _a[HighContrastSelector] = __assign(__assign({\n      background: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), {\n      selectors: {\n        a: {\n          color: 'HighlightText'\n        }\n      }\n    }),\n    // Focus and hover state\n    _a['&:focus:hover'] = {\n      background: colors.focusHoverBackground\n    }, _a)\n  }];\n  var cannotSelectStyles = [classNames.isContentUnselectable, {\n    userSelect: 'none',\n    cursor: 'default'\n  }];\n  var rootCompactStyles = {\n    minHeight: values.compactRowHeight,\n    border: 0\n  };\n  var cellCompactStyles = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\"\n  };\n  var defaultCellStyles = [getFocusStyle(theme, {\n    inset: -1\n  }), classNames.cell, {\n    display: 'inline-block',\n    position: 'relative',\n    boxSizing: 'border-box',\n    minHeight: values.rowHeight,\n    verticalAlign: 'top',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingTop: values.rowVerticalPadding,\n    paddingBottom: values.rowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\",\n    selectors: (_g = {\n      '& > button': {\n        maxWidth: '100%'\n      }\n    }, _g[IsFocusableSelector] = getFocusStyle(theme, {\n      inset: -1,\n      borderColor: neutralSecondary,\n      outlineColor: white\n    }), _g)\n  }, isSelected && {\n    selectors: (_h = {}, _h[HighContrastSelector] = __assign(__assign({\n      background: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), {\n      selectors: {\n        a: {\n          color: 'HighlightText'\n        }\n      }\n    }), _h)\n  }, compact && cellCompactStyles];\n  return {\n    root: [classNames.root, AnimationClassNames.fadeIn400, droppingClassName, theme.fonts.small, isCheckVisible && classNames.isCheckVisible, getFocusStyle(theme, {\n      borderColor: focusBorder,\n      outlineColor: white\n    }), {\n      borderBottom: \"1px solid \" + neutralLighter,\n      background: colors.defaultBackground,\n      color: colors.defaultMetaText,\n      // This ensures that the row always tries to consume is minimum width and does not compress.\n      display: 'inline-flex',\n      minWidth: '100%',\n      minHeight: values.rowHeight,\n      whiteSpace: 'nowrap',\n      padding: 0,\n      boxSizing: 'border-box',\n      verticalAlign: 'top',\n      textAlign: 'left',\n      selectors: (_j = {}, _j[\".\" + classNames.listCellFirstChild + \" &:before\"] = {\n        display: 'none'\n      }, _j['&:hover'] = {\n        background: colors.defaultHoverBackground,\n        color: colors.defaultHoverMetaText,\n        selectors: (_k = {}, _k[\".\" + classNames.isRowHeader] = {\n          color: colors.defaultHoverHeaderText\n        }, _k)\n      }, _j[\"&:hover .\" + classNames.check] = {\n        opacity: 1\n      }, _j[\".\" + IsFocusVisibleClassName + \" &:focus .\" + classNames.check] = {\n        opacity: 1\n      }, _j)\n    }, isSelected && selectedStyles, !canSelect && cannotSelectStyles, compact && rootCompactStyles, className],\n    cellUnpadded: {\n      paddingRight: cellStyleProps.cellRightPadding + \"px\"\n    },\n    cellPadded: {\n      paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding + \"px\",\n      selectors: (_l = {}, _l[\"&.\" + classNames.cellCheck] = {\n        paddingRight: 0\n      }, _l)\n    },\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [classNames.cellMeasurer, {\n      overflow: 'visible',\n      whiteSpace: 'nowrap'\n    }],\n    checkCell: [defaultCellStyles, classNames.cellCheck, checkboxCellClassName, {\n      padding: 0,\n      // Ensure that the check cell covers the top border of the cell.\n      // This ensures the click target does not leave a spot which would\n      // cause other items to be deselected.\n      paddingTop: 1,\n      marginTop: -1,\n      flexShrink: 0\n    }],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none'\n    },\n    fields: [classNames.fields, {\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    isRowHeader: [classNames.isRowHeader, {\n      color: colors.defaultHeaderText,\n      fontSize: fonts.medium.fontSize\n    }, isSelected && {\n      color: colors.selectedHeaderText,\n      fontWeight: FontWeights.semibold,\n      selectors: (_m = {}, _m[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _m)\n    }],\n    isMultiline: [defaultCellStyles, {\n      whiteSpace: 'normal',\n      wordBreak: 'break-word',\n      textOverflow: 'clip'\n    }],\n    check: [classNames.check]\n  };\n};","map":{"version":3,"sources":["components/DetailsList/DetailsRow.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IDetailsRowStyleProps, IDetailsRowStyles, ICellStyleProps } from './DetailsRow.types';\nimport {\n  AnimationClassNames,\n  AnimationStyles,\n  HighContrastSelector,\n  IStyle,\n  getFocusStyle,\n  getGlobalClassNames,\n  FontWeights,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nexport const DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields',\n};\nconst IsFocusableSelector = \"[data-is-focusable='true']\";\n\nexport const DEFAULT_CELL_STYLE_PROPS: ICellStyleProps = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24,\n};\n\n// Source of default row heights to share.\nexport const DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32,\n};\n\n// Constant values\nconst values = {\n  ...DEFAULT_ROW_HEIGHTS,\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6,\n};\n\nexport const getDetailsRowStyles = (props: IDetailsRowStyleProps): IDetailsRowStyles => {\n  const {\n    theme,\n    isSelected,\n    canSelect,\n    droppingClassName,\n    anySelected,\n    isCheckVisible,\n    checkboxCellClassName,\n    compact,\n    className,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    enableUpdateAnimations,\n  } = props;\n\n  const { palette, fonts } = theme;\n  const {\n    neutralPrimary,\n    white,\n    neutralSecondary,\n    neutralLighter,\n    neutralLight,\n    neutralDark,\n    neutralQuaternaryAlt,\n  } = palette;\n  const { focusBorder } = theme.semanticColors;\n\n  const classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n\n  const colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt,\n  };\n\n  // Selected row styles\n  const selectedStyles: IStyle = [\n    getFocusStyle(theme, { inset: -1, borderColor: focusBorder, outlineColor: white }),\n    classNames.isSelected,\n    {\n      color: colors.selectedMetaText,\n      background: colors.selectedBackground,\n      borderBottom: `1px solid ${white}`,\n      selectors: {\n        '&:before': {\n          position: 'absolute',\n          display: 'block',\n          top: -1,\n          height: 1,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          content: '',\n          borderTop: `1px solid ${white}`,\n        },\n\n        // Selected State hover\n        '&:hover': {\n          background: colors.selectedHoverBackground,\n          color: colors.selectedHoverMetaText,\n          selectors: {\n            // Selected State hover meta cell\n            [`.${classNames.cell} ${HighContrastSelector}`]: {\n              color: 'HighlightText',\n              selectors: {\n                '> a': {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Selected State hover Header cell\n            [`.${classNames.isRowHeader}`]: {\n              color: colors.selectedHoverHeaderText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Ensure high-contrast mode overrides default hover background\n            [HighContrastSelector]: {\n              background: 'Highlight',\n            },\n          },\n        },\n\n        // Focus state\n        '&:focus': {\n          background: colors.focusBackground,\n          selectors: {\n            // Selected State hover meta cell\n            [`.${classNames.cell}`]: {\n              color: colors.focusMetaText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                  selectors: {\n                    '> a': {\n                      color: 'HighlightText',\n                    },\n                  },\n                },\n              },\n            },\n\n            // Row header cell\n            [`.${classNames.isRowHeader}`]: {\n              color: colors.focusHeaderText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Ensure high-contrast mode overrides default focus background\n            [HighContrastSelector]: {\n              background: 'Highlight',\n            },\n          },\n        },\n\n        [HighContrastSelector]: {\n          background: 'Highlight',\n          color: 'HighlightText',\n          ...getHighContrastNoAdjustStyle(),\n          selectors: {\n            a: {\n              color: 'HighlightText',\n            },\n          },\n        },\n\n        // Focus and hover state\n        '&:focus:hover': {\n          background: colors.focusHoverBackground,\n        },\n      },\n    },\n  ];\n\n  const cannotSelectStyles: IStyle = [\n    classNames.isContentUnselectable,\n    {\n      userSelect: 'none',\n      cursor: 'default',\n    },\n  ];\n\n  const rootCompactStyles: IStyle = {\n    minHeight: values.compactRowHeight,\n    border: 0,\n  };\n\n  const cellCompactStyles: IStyle = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: `${cellStyleProps.cellLeftPadding}px`,\n  };\n\n  const defaultCellStyles: IStyle = [\n    getFocusStyle(theme, { inset: -1 }),\n    classNames.cell,\n    {\n      display: 'inline-block',\n      position: 'relative',\n      boxSizing: 'border-box',\n      minHeight: values.rowHeight,\n      verticalAlign: 'top',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingTop: values.rowVerticalPadding,\n      paddingBottom: values.rowVerticalPadding,\n      paddingLeft: `${cellStyleProps.cellLeftPadding}px`,\n      selectors: {\n        '& > button': {\n          maxWidth: '100%',\n        },\n\n        [IsFocusableSelector]: getFocusStyle(theme, { inset: -1, borderColor: neutralSecondary, outlineColor: white }),\n      },\n    },\n\n    isSelected && {\n      selectors: {\n        [HighContrastSelector]: {\n          background: 'Highlight',\n          color: 'HighlightText',\n          ...getHighContrastNoAdjustStyle(),\n          selectors: {\n            a: {\n              color: 'HighlightText',\n            },\n          },\n        },\n      },\n    },\n\n    compact && cellCompactStyles,\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      AnimationClassNames.fadeIn400,\n      droppingClassName,\n      theme.fonts.small,\n      isCheckVisible && classNames.isCheckVisible,\n      getFocusStyle(theme, { borderColor: focusBorder, outlineColor: white }),\n      {\n        borderBottom: `1px solid ${neutralLighter}`,\n        background: colors.defaultBackground,\n        color: colors.defaultMetaText,\n        // This ensures that the row always tries to consume is minimum width and does not compress.\n        display: 'inline-flex',\n        minWidth: '100%',\n        minHeight: values.rowHeight,\n        whiteSpace: 'nowrap',\n        padding: 0,\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        textAlign: 'left',\n        selectors: {\n          [`.${classNames.listCellFirstChild} &:before`]: {\n            display: 'none',\n          },\n\n          '&:hover': {\n            background: colors.defaultHoverBackground,\n            color: colors.defaultHoverMetaText,\n            selectors: {\n              [`.${classNames.isRowHeader}`]: {\n                color: colors.defaultHoverHeaderText,\n              },\n            },\n          },\n\n          [`&:hover .${classNames.check}`]: {\n            opacity: 1,\n          },\n\n          [`.${IsFocusVisibleClassName} &:focus .${classNames.check}`]: {\n            opacity: 1,\n          },\n        },\n      },\n      isSelected && selectedStyles,\n      !canSelect && cannotSelectStyles,\n      compact && rootCompactStyles,\n      className,\n    ],\n\n    cellUnpadded: {\n      paddingRight: `${cellStyleProps.cellRightPadding}px`,\n    },\n\n    cellPadded: {\n      paddingRight: `${cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding}px`,\n      selectors: {\n        [`&.${classNames.cellCheck}`]: {\n          paddingRight: 0,\n        },\n      },\n    },\n\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [\n      classNames.cellMeasurer,\n      {\n        overflow: 'visible',\n        whiteSpace: 'nowrap',\n      },\n    ],\n    checkCell: [\n      defaultCellStyles,\n      classNames.cellCheck,\n      checkboxCellClassName,\n      {\n        padding: 0,\n        // Ensure that the check cell covers the top border of the cell.\n        // This ensures the click target does not leave a spot which would\n        // cause other items to be deselected.\n        paddingTop: 1,\n        marginTop: -1,\n        flexShrink: 0,\n      },\n    ],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none',\n    },\n    fields: [\n      classNames.fields,\n      {\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n    isRowHeader: [\n      classNames.isRowHeader,\n      {\n        color: colors.defaultHeaderText,\n        fontSize: fonts.medium.fontSize,\n      },\n      isSelected && {\n        color: colors.selectedHeaderText,\n        fontWeight: FontWeights.semibold,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n    ],\n    isMultiline: [\n      defaultCellStyles,\n      {\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n        textOverflow: 'clip',\n      },\n    ],\n    check: [classNames.check],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}