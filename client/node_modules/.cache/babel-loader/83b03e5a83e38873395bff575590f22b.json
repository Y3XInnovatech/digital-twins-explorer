{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, css, getRTL, format } from '../../Utilities';\nimport { FocusZone } from '../../FocusZone';\nimport * as stylesImport from './Calendar.scss';\nimport { Icon } from '../../Icon';\nvar styles = stylesImport;\nvar CELL_COUNT = 12;\nvar DefaultCalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined\n};\nvar DefaultNavigationIcons = {\n  leftNavigation: 'Up',\n  rightNavigation: 'Down',\n  closeIcon: 'CalculatorMultiply'\n};\nvar CalendarYearGridCell = /** @class */function (_super) {\n  __extends(CalendarYearGridCell, _super);\n  function CalendarYearGridCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._buttonRef = React.createRef();\n    _this._onRenderYear = function () {\n      var _a = _this.props,\n        year = _a.year,\n        onRenderYear = _a.onRenderYear;\n      if (onRenderYear) {\n        return onRenderYear(year);\n      }\n      return year;\n    };\n    _this._onClick = function () {\n      if (_this.props.onSelectYear) {\n        _this.props.onSelectYear(_this.props.year);\n      }\n    };\n    _this._onKeyDown = function (ev) {\n      if (_this.props.onSelectYear && ev.which === KeyCodes.enter) {\n        _this.props.onSelectYear(_this.props.year);\n      }\n    };\n    return _this;\n  }\n  CalendarYearGridCell.prototype.focus = function () {\n    if (this._buttonRef.current) {\n      this._buttonRef.current.focus();\n    }\n  };\n  CalendarYearGridCell.prototype.render = function () {\n    var _a;\n    var _b = this.props,\n      year = _b.year,\n      selected = _b.selected,\n      disabled = _b.disabled,\n      onSelectYear = _b.onSelectYear;\n    return React.createElement(\"button\", {\n      className: css('ms-DatePicker-yearOption', styles.yearOption, (_a = {}, _a['ms-DatePicker-day--highlighted ' + styles.yearIsHighlighted] = selected, _a['ms-DatePicker-yearOption--disabled ' + styles.yearOptionIsDisabled] = disabled, _a)),\n      type: \"button\",\n      role: \"gridcell\",\n      onClick: !disabled && onSelectYear ? this._onClick : undefined,\n      onKeyDown: !disabled && onSelectYear ? this._onKeyDown : undefined,\n      disabled: disabled,\n      \"aria-label\": String(year),\n      \"aria-selected\": selected,\n      ref: this._buttonRef\n    }, this._onRenderYear());\n  };\n  return CalendarYearGridCell;\n}(React.Component);\nvar CalendarYearGrid = /** @class */function (_super) {\n  __extends(CalendarYearGrid, _super);\n  function CalendarYearGrid() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._selectedCellRef = React.createRef();\n    _this._currentCellRef = React.createRef();\n    _this._renderCell = function (year) {\n      var selected = year === _this.props.selectedYear;\n      var _a = _this.props,\n        minYear = _a.minYear,\n        maxYear = _a.maxYear,\n        onSelectYear = _a.onSelectYear;\n      var disabled = minYear !== undefined && year < minYear || maxYear !== undefined && year > maxYear;\n      var current = year === new Date().getFullYear();\n      return React.createElement(CalendarYearGridCell, {\n        key: year,\n        year: year,\n        selected: selected,\n        current: current,\n        disabled: disabled,\n        onSelectYear: onSelectYear,\n        ref: selected ? _this._selectedCellRef : current ? _this._currentCellRef : undefined\n      });\n    };\n    return _this;\n  }\n  CalendarYearGrid.prototype.focus = function () {\n    if (this._selectedCellRef.current) {\n      this._selectedCellRef.current.focus();\n    } else if (this._currentCellRef.current) {\n      this._currentCellRef.current.focus();\n    }\n  };\n  CalendarYearGrid.prototype.render = function () {\n    var _a = this.props,\n      fromYear = _a.fromYear,\n      toYear = _a.toYear;\n    var year = fromYear;\n    var cells = [];\n    while (year <= toYear) {\n      cells.push(this._renderCell(year));\n      year++;\n    }\n    return React.createElement(FocusZone, null, React.createElement(\"div\", {\n      className: css('ms-DatePicker-optionGrid', styles.optionGrid),\n      role: \"grid\"\n    }, React.createElement(\"div\", {\n      role: \"row\"\n    }, cells)));\n  };\n  return CalendarYearGrid;\n}(React.Component);\nvar CalendarYearNavPrev = /** @class */function (_super) {\n  __extends(CalendarYearNavPrev, _super);\n  function CalendarYearNavPrev() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._onSelectPrev = function () {\n      if (!_this.isDisabled && _this.props.onSelectPrev) {\n        _this.props.onSelectPrev();\n      }\n    };\n    _this._onKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onSelectPrev();\n      }\n    };\n    return _this;\n  }\n  CalendarYearNavPrev.prototype.render = function () {\n    var _a;\n    var iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    var strings = this.props.strings || DefaultCalendarYearStrings;\n    var prevRangeAriaLabel = strings.prevRangeAriaLabel;\n    var prevRange = {\n      fromYear: this.props.fromYear - CELL_COUNT,\n      toYear: this.props.toYear - CELL_COUNT\n    };\n    var prevAriaLabel = prevRangeAriaLabel ? typeof prevRangeAriaLabel === 'string' ? prevRangeAriaLabel : prevRangeAriaLabel(prevRange) : undefined;\n    var disabled = this.isDisabled;\n    var onSelectPrev = this.props.onSelectPrev;\n    return React.createElement(\"button\", {\n      className: css('ms-DatePicker-prevDecade', styles.prevDecade, (_a = {}, _a['ms-DatePicker-prevDecade--disabled ' + styles.prevDecadeIsDisabled] = disabled, _a)),\n      onClick: !disabled && onSelectPrev ? this._onSelectPrev : undefined,\n      onKeyDown: !disabled && onSelectPrev ? this._onKeyDown : undefined,\n      type: \"button\",\n      tabIndex: 0,\n      title: prevAriaLabel,\n      disabled: disabled\n    }, React.createElement(Icon, {\n      iconName: getRTL() ? iconStrings.rightNavigation : iconStrings.leftNavigation\n    }));\n  };\n  Object.defineProperty(CalendarYearNavPrev.prototype, \"isDisabled\", {\n    get: function () {\n      var minYear = this.props.minYear;\n      return minYear !== undefined && this.props.fromYear < minYear;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CalendarYearNavPrev;\n}(React.Component);\nvar CalendarYearNavNext = /** @class */function (_super) {\n  __extends(CalendarYearNavNext, _super);\n  function CalendarYearNavNext() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._onSelectNext = function () {\n      if (!_this.isDisabled && _this.props.onSelectNext) {\n        _this.props.onSelectNext();\n      }\n    };\n    _this._onKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onSelectNext();\n      }\n    };\n    return _this;\n  }\n  CalendarYearNavNext.prototype.render = function () {\n    var _a;\n    var iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    var strings = this.props.strings || DefaultCalendarYearStrings;\n    var nextRangeAriaLabel = strings.nextRangeAriaLabel;\n    var nextRange = {\n      fromYear: this.props.fromYear + CELL_COUNT,\n      toYear: this.props.toYear + CELL_COUNT\n    };\n    var nextAriaLabel = nextRangeAriaLabel ? typeof nextRangeAriaLabel === 'string' ? nextRangeAriaLabel : nextRangeAriaLabel(nextRange) : undefined;\n    var onSelectNext = this.props.onSelectNext;\n    var disabled = this.isDisabled;\n    return React.createElement(\"button\", {\n      className: css('ms-DatePicker-nextDecade', styles.nextDecade, (_a = {}, _a['ms-DatePicker-nextDecade--disabled ' + styles.nextDecadeIsDisabled] = disabled, _a)),\n      onClick: !disabled && onSelectNext ? this._onSelectNext : undefined,\n      onKeyDown: !disabled && onSelectNext ? this._onKeyDown : undefined,\n      type: \"button\",\n      tabIndex: 0,\n      title: nextAriaLabel,\n      disabled: this.isDisabled\n    }, React.createElement(Icon, {\n      iconName: getRTL() ? iconStrings.leftNavigation : iconStrings.rightNavigation\n    }));\n  };\n  Object.defineProperty(CalendarYearNavNext.prototype, \"isDisabled\", {\n    get: function () {\n      var maxYear = this.props.maxYear;\n      return maxYear !== undefined && this.props.fromYear + CELL_COUNT > maxYear;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CalendarYearNavNext;\n}(React.Component);\nvar CalendarYearNav = /** @class */function (_super) {\n  __extends(CalendarYearNav, _super);\n  function CalendarYearNav() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CalendarYearNav.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-decadeComponents', styles.decadeComponents)\n    }, React.createElement(\"div\", {\n      className: css('ms-DatePicker-navContainer', styles.navContainer)\n    }, React.createElement(CalendarYearNavPrev, __assign({}, this.props)), React.createElement(CalendarYearNavNext, __assign({}, this.props))));\n  };\n  return CalendarYearNav;\n}(React.Component);\nvar CalendarYearTitle = /** @class */function (_super) {\n  __extends(CalendarYearTitle, _super);\n  function CalendarYearTitle() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._onHeaderSelect = function () {\n      if (_this.props.onHeaderSelect) {\n        _this.props.onHeaderSelect(true);\n      }\n    };\n    _this._onHeaderKeyDown = function (ev) {\n      if (_this.props.onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n        _this.props.onHeaderSelect(true);\n      }\n    };\n    _this._onRenderYear = function (year) {\n      if (_this.props.onRenderYear) {\n        return _this.props.onRenderYear(year);\n      }\n      return year;\n    };\n    return _this;\n  }\n  CalendarYearTitle.prototype.render = function () {\n    var _a = this.props,\n      fromYear = _a.fromYear,\n      toYear = _a.toYear,\n      onHeaderSelect = _a.onHeaderSelect;\n    if (onHeaderSelect) {\n      var strings = this.props.strings || DefaultCalendarYearStrings;\n      var rangeAriaLabel = strings.rangeAriaLabel;\n      var currentDateRange = rangeAriaLabel ? typeof rangeAriaLabel === 'string' ? rangeAriaLabel : rangeAriaLabel(this.props) : undefined;\n      var ariaLabel = strings.headerAriaLabelFormatString ? format(strings.headerAriaLabelFormatString, currentDateRange) : currentDateRange;\n      return React.createElement(\"div\", {\n        className: css('ms-DatePicker-currentDecade js-showYearPicker', styles.currentDecade, styles.headerToggleView),\n        onClick: this._onHeaderSelect,\n        onKeyDown: this._onHeaderKeyDown,\n        \"aria-label\": ariaLabel,\n        role: \"button\",\n        \"aria-atomic\": true,\n        \"aria-live\": \"polite\",\n        tabIndex: 0\n      }, this._onRenderYear(fromYear), \" - \", this._onRenderYear(toYear));\n    }\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-currentDecade js-showYearPicker', styles.currentDecade)\n    }, this._onRenderYear(fromYear), \" - \", this._onRenderYear(toYear));\n  };\n  return CalendarYearTitle;\n}(React.Component);\nvar CalendarYearHeader = /** @class */function (_super) {\n  __extends(CalendarYearHeader, _super);\n  function CalendarYearHeader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._onRenderTitle = function () {\n      if (_this.props.onRenderTitle) {\n        return _this.props.onRenderTitle(_this.props);\n      }\n      return React.createElement(CalendarYearTitle, __assign({}, _this.props));\n    };\n    _this._onRenderNav = function () {\n      return React.createElement(CalendarYearNav, __assign({}, _this.props));\n    };\n    return _this;\n  }\n  CalendarYearHeader.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-header', styles.header)\n    }, this._onRenderTitle(), this._onRenderNav());\n  };\n  return CalendarYearHeader;\n}(React.Component);\nvar CalendarYear = /** @class */function (_super) {\n  __extends(CalendarYear, _super);\n  function CalendarYear(props) {\n    var _this = _super.call(this, props) || this;\n    _this._gridRef = React.createRef();\n    _this._onNavNext = function () {\n      _this.setState({\n        fromYear: _this.state.fromYear + CELL_COUNT\n      });\n    };\n    _this._onNavPrev = function () {\n      _this.setState({\n        fromYear: _this.state.fromYear - CELL_COUNT\n      });\n    };\n    _this._renderHeader = function () {\n      return React.createElement(CalendarYearHeader, __assign({}, _this.props, {\n        fromYear: _this.state.fromYear,\n        toYear: _this.state.fromYear + CELL_COUNT - 1,\n        onSelectPrev: _this._onNavPrev,\n        onSelectNext: _this._onNavNext\n      }));\n    };\n    _this._renderGrid = function () {\n      return React.createElement(CalendarYearGrid, __assign({}, _this.props, {\n        fromYear: _this.state.fromYear,\n        toYear: _this.state.fromYear + CELL_COUNT - 1,\n        ref: _this._gridRef\n      }));\n    };\n    _this.state = _this._calculateInitialStateFromProps(props);\n    return _this;\n  }\n  CalendarYear.prototype.focus = function () {\n    if (this._gridRef.current) {\n      this._gridRef.current.focus();\n    }\n  };\n  CalendarYear.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-yearPicker', styles.yearPicker)\n    }, this._renderHeader(), this._renderGrid());\n  };\n  CalendarYear.prototype._calculateInitialStateFromProps = function (props) {\n    var selectedYear = props.selectedYear,\n      navigatedYear = props.navigatedYear;\n    var rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n    var fromYear = Math.floor(rangeYear / 10) * 10;\n    return {\n      fromYear: fromYear,\n      navigatedYear: navigatedYear,\n      selectedYear: selectedYear\n    };\n  };\n  return CalendarYear;\n}(React.Component);\nexport { CalendarYear };","map":{"version":3,"sources":["components/Calendar/CalendarYear.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { KeyCodes, css, getRTL, format } from '../../Utilities';\nimport { ICalendarIconStrings } from './Calendar.types';\nimport { FocusZone } from '../../FocusZone';\nimport * as stylesImport from './Calendar.scss';\nimport { Icon } from '../../Icon';\n\nconst styles: any = stylesImport;\n\nconst CELL_COUNT = 12;\n\nexport interface ICalendarYearRange {\n  fromYear: number;\n  toYear: number;\n}\n\nexport interface ICalendarYearRangeToString {\n  (range: ICalendarYearRange): string;\n}\n\nexport interface ICalendarYearStrings {\n  rangeAriaLabel?: string | ICalendarYearRangeToString;\n  prevRangeAriaLabel?: string | ICalendarYearRangeToString;\n  nextRangeAriaLabel?: string | ICalendarYearRangeToString;\n  headerAriaLabelFormatString?: string;\n}\n\nexport interface ICalendarYear {\n  focus(): void;\n}\n\nexport interface ICalendarYearProps {\n  navigationIcons?: ICalendarIconStrings;\n  navigatedYear?: number;\n  selectedYear?: number;\n  minYear?: number;\n  maxYear?: number;\n  onHeaderSelect?: (focus: boolean) => void;\n  onSelectYear?: (year: number) => void;\n  onRenderTitle?: (props: ICalendarYearHeaderProps) => React.ReactNode;\n  onRenderYear?: (year: number) => React.ReactNode;\n  className?: string;\n  strings?: ICalendarYearStrings;\n}\n\nconst DefaultCalendarYearStrings: ICalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined,\n};\n\nconst DefaultNavigationIcons: ICalendarIconStrings = {\n  leftNavigation: 'Up',\n  rightNavigation: 'Down',\n  closeIcon: 'CalculatorMultiply',\n};\n\ninterface ICalendarYearGridCell {\n  focus(): void;\n}\n\ninterface ICalendarYearGridCellProps {\n  year: number;\n  current?: boolean;\n  selected?: boolean;\n  disabled?: boolean;\n  onSelectYear?: (year: number) => void;\n  onRenderYear?: (year: number) => React.ReactNode;\n}\n\nclass CalendarYearGridCell extends React.Component<ICalendarYearGridCellProps, {}> implements ICalendarYearGridCell {\n  private _buttonRef = React.createRef<HTMLButtonElement>();\n\n  public focus() {\n    if (this._buttonRef.current) {\n      this._buttonRef.current.focus();\n    }\n  }\n\n  public render() {\n    const { year, selected, disabled, onSelectYear } = this.props;\n    return (\n      <button\n        className={css('ms-DatePicker-yearOption', styles.yearOption, {\n          ['ms-DatePicker-day--highlighted ' + styles.yearIsHighlighted]: selected,\n          ['ms-DatePicker-yearOption--disabled ' + styles.yearOptionIsDisabled]: disabled,\n        })}\n        type=\"button\"\n        role=\"gridcell\"\n        onClick={!disabled && onSelectYear ? this._onClick : undefined}\n        onKeyDown={!disabled && onSelectYear ? this._onKeyDown : undefined}\n        disabled={disabled}\n        aria-label={String(year)}\n        aria-selected={selected}\n        ref={this._buttonRef}\n      >\n        {this._onRenderYear()}\n      </button>\n    );\n  }\n\n  private _onRenderYear = () => {\n    const { year, onRenderYear } = this.props;\n    if (onRenderYear) {\n      return onRenderYear(year);\n    }\n    return year;\n  };\n\n  private _onClick = () => {\n    if (this.props.onSelectYear) {\n      this.props.onSelectYear(this.props.year);\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (this.props.onSelectYear && ev.which === KeyCodes.enter) {\n      this.props.onSelectYear(this.props.year);\n    }\n  };\n}\n\ninterface ICalendarYearGrid {\n  focus(): void;\n}\n\ninterface ICalendarYearGridProps extends ICalendarYearProps, ICalendarYearRange {\n  selectedYear?: number;\n}\n\nclass CalendarYearGrid extends React.Component<ICalendarYearGridProps, {}> implements ICalendarYearGrid {\n  private _selectedCellRef = React.createRef<CalendarYearGridCell>();\n  private _currentCellRef = React.createRef<CalendarYearGridCell>();\n\n  public focus() {\n    if (this._selectedCellRef.current) {\n      this._selectedCellRef.current.focus();\n    } else if (this._currentCellRef.current) {\n      this._currentCellRef.current.focus();\n    }\n  }\n\n  public render() {\n    const { fromYear, toYear } = this.props;\n    let year = fromYear;\n    const cells = [];\n    while (year <= toYear) {\n      cells.push(this._renderCell(year));\n      year++;\n    }\n    return (\n      <FocusZone>\n        <div className={css('ms-DatePicker-optionGrid', styles.optionGrid)} role=\"grid\">\n          <div role=\"row\">{cells}</div>\n        </div>\n      </FocusZone>\n    );\n  }\n\n  private _renderCell = (year: number): React.ReactNode => {\n    const selected = year === this.props.selectedYear;\n    const { minYear, maxYear, onSelectYear } = this.props;\n    const disabled = (minYear !== undefined && year < minYear) || (maxYear !== undefined && year > maxYear);\n    const current = year === new Date().getFullYear();\n    return (\n      <CalendarYearGridCell\n        key={year}\n        year={year}\n        selected={selected}\n        current={current}\n        disabled={disabled}\n        onSelectYear={onSelectYear}\n        ref={selected ? this._selectedCellRef : current ? this._currentCellRef : undefined}\n      />\n    );\n  };\n}\n\nexport interface ICalendarYearHeaderProps extends ICalendarYearProps, ICalendarYearRange {\n  onSelectPrev?: () => void;\n  onSelectNext?: () => void;\n}\n\nclass CalendarYearNavPrev extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    const iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    const strings = this.props.strings || DefaultCalendarYearStrings;\n    const prevRangeAriaLabel = strings.prevRangeAriaLabel;\n    const prevRange = { fromYear: this.props.fromYear - CELL_COUNT, toYear: this.props.toYear - CELL_COUNT };\n    const prevAriaLabel = prevRangeAriaLabel\n      ? typeof prevRangeAriaLabel === 'string'\n        ? (prevRangeAriaLabel as string)\n        : (prevRangeAriaLabel as ICalendarYearRangeToString)(prevRange)\n      : undefined;\n    const disabled = this.isDisabled;\n    const { onSelectPrev } = this.props;\n    return (\n      <button\n        className={css('ms-DatePicker-prevDecade', styles.prevDecade, {\n          ['ms-DatePicker-prevDecade--disabled ' + styles.prevDecadeIsDisabled]: disabled,\n        })}\n        onClick={!disabled && onSelectPrev ? this._onSelectPrev : undefined}\n        onKeyDown={!disabled && onSelectPrev ? this._onKeyDown : undefined}\n        type=\"button\"\n        tabIndex={0}\n        title={prevAriaLabel}\n        disabled={disabled}\n      >\n        <Icon iconName={getRTL() ? iconStrings.rightNavigation : iconStrings.leftNavigation} />\n      </button>\n    );\n  }\n\n  public get isDisabled() {\n    const { minYear } = this.props;\n    return minYear !== undefined && this.props.fromYear < minYear;\n  }\n\n  private _onSelectPrev = () => {\n    if (!this.isDisabled && this.props.onSelectPrev) {\n      this.props.onSelectPrev();\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.which === KeyCodes.enter) {\n      this._onSelectPrev();\n    }\n  };\n}\n\nclass CalendarYearNavNext extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    const iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    const strings = this.props.strings || DefaultCalendarYearStrings;\n    const nextRangeAriaLabel = strings.nextRangeAriaLabel;\n    const nextRange = { fromYear: this.props.fromYear + CELL_COUNT, toYear: this.props.toYear + CELL_COUNT };\n    const nextAriaLabel = nextRangeAriaLabel\n      ? typeof nextRangeAriaLabel === 'string'\n        ? (nextRangeAriaLabel as string)\n        : (nextRangeAriaLabel as ICalendarYearRangeToString)(nextRange)\n      : undefined;\n    const { onSelectNext } = this.props;\n    const disabled = this.isDisabled;\n    return (\n      <button\n        className={css('ms-DatePicker-nextDecade', styles.nextDecade, {\n          ['ms-DatePicker-nextDecade--disabled ' + styles.nextDecadeIsDisabled]: disabled,\n        })}\n        onClick={!disabled && onSelectNext ? this._onSelectNext : undefined}\n        onKeyDown={!disabled && onSelectNext ? this._onKeyDown : undefined}\n        type=\"button\"\n        tabIndex={0}\n        title={nextAriaLabel}\n        disabled={this.isDisabled}\n      >\n        <Icon iconName={getRTL() ? iconStrings.leftNavigation : iconStrings.rightNavigation} />\n      </button>\n    );\n  }\n\n  public get isDisabled() {\n    const { maxYear } = this.props;\n    return maxYear !== undefined && this.props.fromYear + CELL_COUNT > maxYear;\n  }\n\n  private _onSelectNext = () => {\n    if (!this.isDisabled && this.props.onSelectNext) {\n      this.props.onSelectNext();\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.which === KeyCodes.enter) {\n      this._onSelectNext();\n    }\n  };\n}\n\nclass CalendarYearNav extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    return (\n      <div className={css('ms-DatePicker-decadeComponents', styles.decadeComponents)}>\n        <div className={css('ms-DatePicker-navContainer', styles.navContainer)}>\n          <CalendarYearNavPrev {...this.props} />\n          <CalendarYearNavNext {...this.props} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass CalendarYearTitle extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    const { fromYear, toYear, onHeaderSelect } = this.props;\n    if (onHeaderSelect) {\n      const strings = this.props.strings || DefaultCalendarYearStrings;\n      const rangeAriaLabel = strings.rangeAriaLabel;\n      const currentDateRange = rangeAriaLabel\n        ? typeof rangeAriaLabel === 'string'\n          ? (rangeAriaLabel as string)\n          : (rangeAriaLabel as ICalendarYearRangeToString)(this.props)\n        : undefined;\n\n      const ariaLabel = strings.headerAriaLabelFormatString\n        ? format(strings.headerAriaLabelFormatString, currentDateRange)\n        : currentDateRange;\n\n      return (\n        <div\n          className={css(\n            'ms-DatePicker-currentDecade js-showYearPicker',\n            styles.currentDecade,\n            styles.headerToggleView,\n          )}\n          onClick={this._onHeaderSelect}\n          onKeyDown={this._onHeaderKeyDown}\n          aria-label={ariaLabel}\n          role=\"button\"\n          aria-atomic={true}\n          aria-live=\"polite\"\n          tabIndex={0}\n        >\n          {this._onRenderYear(fromYear)} - {this._onRenderYear(toYear)}\n        </div>\n      );\n    }\n    return (\n      <div className={css('ms-DatePicker-currentDecade js-showYearPicker', styles.currentDecade)}>\n        {this._onRenderYear(fromYear)} - {this._onRenderYear(toYear)}\n      </div>\n    );\n  }\n\n  private _onHeaderSelect = () => {\n    if (this.props.onHeaderSelect) {\n      this.props.onHeaderSelect(true);\n    }\n  };\n\n  private _onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (this.props.onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      this.props.onHeaderSelect(true);\n    }\n  };\n\n  private _onRenderYear = (year: number) => {\n    if (this.props.onRenderYear) {\n      return this.props.onRenderYear(year);\n    }\n    return year;\n  };\n}\n\nclass CalendarYearHeader extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    return (\n      <div className={css('ms-DatePicker-header', styles.header)}>\n        {this._onRenderTitle()}\n        {this._onRenderNav()}\n      </div>\n    );\n  }\n\n  private _onRenderTitle = () => {\n    if (this.props.onRenderTitle) {\n      return this.props.onRenderTitle(this.props);\n    }\n    return <CalendarYearTitle {...this.props} />;\n  };\n\n  private _onRenderNav = () => {\n    return <CalendarYearNav {...this.props} />;\n  };\n}\n\nexport interface ICalendarYearState {\n  fromYear: number;\n  navigatedYear?: number;\n  selectedYear?: number;\n}\n\nexport class CalendarYear extends React.Component<ICalendarYearProps, ICalendarYearState> implements ICalendarYear {\n  private _gridRef = React.createRef<CalendarYearGrid>();\n\n  public constructor(props: ICalendarYearProps) {\n    super(props);\n    this.state = this._calculateInitialStateFromProps(props);\n  }\n\n  public focus() {\n    if (this._gridRef.current) {\n      this._gridRef.current.focus();\n    }\n  }\n\n  public render() {\n    return (\n      <div className={css('ms-DatePicker-yearPicker', styles.yearPicker)}>\n        {this._renderHeader()}\n        {this._renderGrid()}\n      </div>\n    );\n  }\n\n  private _onNavNext = () => {\n    this.setState({ fromYear: this.state.fromYear + CELL_COUNT });\n  };\n\n  private _onNavPrev = () => {\n    this.setState({ fromYear: this.state.fromYear - CELL_COUNT });\n  };\n\n  private _renderHeader = (): React.ReactNode => {\n    return (\n      <CalendarYearHeader\n        {...this.props}\n        fromYear={this.state.fromYear}\n        toYear={this.state.fromYear + CELL_COUNT - 1}\n        onSelectPrev={this._onNavPrev}\n        onSelectNext={this._onNavNext}\n      />\n    );\n  };\n\n  private _renderGrid = (): React.ReactNode => {\n    return (\n      <CalendarYearGrid\n        {...this.props}\n        fromYear={this.state.fromYear}\n        toYear={this.state.fromYear + CELL_COUNT - 1}\n        ref={this._gridRef}\n      />\n    );\n  };\n\n  private _calculateInitialStateFromProps(props: ICalendarYearProps): ICalendarYearState {\n    const { selectedYear, navigatedYear } = props;\n    const rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n    const fromYear = Math.floor(rangeYear / 10) * 10;\n    return {\n      fromYear: fromYear,\n      navigatedYear: navigatedYear,\n      selectedYear: selectedYear,\n    };\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}