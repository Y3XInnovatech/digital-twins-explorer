{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, css, getId, getRTL, getRTLSafeKeyCode, warnMutuallyExclusive, initializeComponentRef, Async, on, FocusRects } from '../../Utilities';\nimport { classNamesFunction, getNativeProps, divProperties } from '../../Utilities';\nimport { Label } from '../../Label';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'SliderBase';\nexport var ONKEYDOWN_TIMEOUT_DURATION = 1000;\nvar SliderBase = /** @class */function (_super) {\n  __extends(SliderBase, _super);\n  function SliderBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._disposables = [];\n    _this._sliderLine = React.createRef();\n    _this._thumb = React.createRef();\n    _this._onKeyDownTimer = -1;\n    _this._getAriaValueText = function (value) {\n      var ariaValueText = _this.props.ariaValueText;\n      if (value !== undefined) {\n        return ariaValueText ? ariaValueText(value) : value.toString();\n      }\n      return undefined;\n    };\n    _this._onMouseDownOrTouchStart = function (event) {\n      if (event.type === 'mousedown') {\n        _this._disposables.push(on(window, 'mousemove', _this._onMouseMoveOrTouchMove, true), on(window, 'mouseup', _this._onMouseUpOrTouchEnd, true));\n      } else if (event.type === 'touchstart') {\n        _this._disposables.push(on(window, 'touchmove', _this._onMouseMoveOrTouchMove, true), on(window, 'touchend', _this._onMouseUpOrTouchEnd, true));\n      }\n      _this._onMouseMoveOrTouchMove(event, true);\n    };\n    _this._onMouseMoveOrTouchMove = function (event, suppressEventCancelation) {\n      if (!_this._sliderLine.current) {\n        return;\n      }\n      var _a = _this.props,\n        max = _a.max,\n        min = _a.min,\n        step = _a.step;\n      var steps = (max - min) / step;\n      var sliderPositionRect = _this._sliderLine.current.getBoundingClientRect();\n      var sliderLength = !_this.props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n      var stepLength = sliderLength / steps;\n      var currentSteps;\n      var distance;\n      if (!_this.props.vertical) {\n        var left = _this._getPosition(event, _this.props.vertical);\n        distance = getRTL(_this.props.theme) ? sliderPositionRect.right - left : left - sliderPositionRect.left;\n        currentSteps = distance / stepLength;\n      } else {\n        var bottom = _this._getPosition(event, _this.props.vertical);\n        distance = sliderPositionRect.bottom - bottom;\n        currentSteps = distance / stepLength;\n      }\n      var currentValue;\n      var renderedValue;\n      // The value shouldn't be bigger than max or be smaller than min.\n      if (currentSteps > Math.floor(steps)) {\n        renderedValue = currentValue = max;\n      } else if (currentSteps < 0) {\n        renderedValue = currentValue = min;\n      } else {\n        renderedValue = min + step * currentSteps;\n        currentValue = min + step * Math.round(currentSteps);\n      }\n      _this._updateValue(currentValue, renderedValue);\n      if (!suppressEventCancelation) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n    _this._onMouseUpOrTouchEnd = function (event) {\n      // Disable renderedValue override.\n      _this.setState({\n        renderedValue: undefined\n      });\n      if (_this.props.onChanged) {\n        _this.props.onChanged(event, _this.state.value);\n      }\n      _this._disposeListeners();\n    };\n    _this._disposeListeners = function () {\n      _this._disposables.forEach(function (dispose) {\n        return dispose();\n      });\n      _this._disposables = [];\n    };\n    _this._onKeyDown = function (event) {\n      var _a = _this.props.value,\n        value = _a === void 0 ? _this.state.value : _a;\n      var _b = _this.props,\n        max = _b.max,\n        min = _b.min,\n        step = _b.step;\n      var diff = 0;\n      // eslint-disable-next-line deprecation/deprecation\n      switch (event.which) {\n        case getRTLSafeKeyCode(KeyCodes.left, _this.props.theme):\n        case KeyCodes.down:\n          diff = -step;\n          _this._clearOnKeyDownTimer();\n          _this._setOnKeyDownTimer(event);\n          break;\n        case getRTLSafeKeyCode(KeyCodes.right, _this.props.theme):\n        case KeyCodes.up:\n          diff = step;\n          _this._clearOnKeyDownTimer();\n          _this._setOnKeyDownTimer(event);\n          break;\n        case KeyCodes.home:\n          value = min;\n          break;\n        case KeyCodes.end:\n          value = max;\n          break;\n        default:\n          return;\n      }\n      var newValue = Math.min(max, Math.max(min, value + diff));\n      _this._updateValue(newValue, newValue);\n      event.preventDefault();\n      event.stopPropagation();\n      // Disable renderedValue override.\n      _this.setState({\n        renderedValue: undefined\n      });\n    };\n    _this._clearOnKeyDownTimer = function () {\n      _this._async.clearTimeout(_this._onKeyDownTimer);\n    };\n    _this._setOnKeyDownTimer = function (event) {\n      _this._onKeyDownTimer = _this._async.setTimeout(function () {\n        if (_this.props.onChanged) {\n          _this.props.onChanged(event, _this.state.value);\n        }\n      }, ONKEYDOWN_TIMEOUT_DURATION);\n    };\n    _this._async = new Async(_this);\n    initializeComponentRef(_this);\n    warnMutuallyExclusive(COMPONENT_NAME, _this.props, {\n      value: 'defaultValue'\n    });\n    _this._id = getId('Slider');\n    var value = props.value !== undefined ? props.value : props.defaultValue !== undefined ? props.defaultValue : props.min;\n    _this.state = {\n      value: value,\n      renderedValue: undefined\n    };\n    return _this;\n  }\n  SliderBase.prototype.componentWillUnmount = function () {\n    this._async.dispose();\n    this._disposeListeners();\n  };\n  SliderBase.prototype.render = function () {\n    var _a, _b, _c, _d, _e;\n    var _f = this.props,\n      ariaLabel = _f.ariaLabel,\n      className = _f.className,\n      disabled = _f.disabled,\n      label = _f.label,\n      max = _f.max,\n      min = _f.min,\n      showValue = _f.showValue,\n      buttonProps = _f.buttonProps,\n      vertical = _f.vertical,\n      valueFormat = _f.valueFormat,\n      styles = _f.styles,\n      theme = _f.theme,\n      originFromZero = _f.originFromZero;\n    var value = this.value;\n    var renderedValue = this.renderedValue;\n    var thumbOffsetPercent = min === max ? 0 : (renderedValue - min) / (max - min) * 100;\n    var zeroOffsetPercent = min >= 0 ? 0 : -min / (max - min) * 100;\n    var lengthString = vertical ? 'height' : 'width';\n    var onMouseDownProp = disabled ? {} : {\n      onMouseDown: this._onMouseDownOrTouchStart\n    };\n    var onTouchStartProp = disabled ? {} : {\n      onTouchStart: this._onMouseDownOrTouchStart\n    };\n    var onKeyDownProp = disabled ? {} : {\n      onKeyDown: this._onKeyDown\n    };\n    var classNames = getClassNames(styles, {\n      className: className,\n      disabled: disabled,\n      vertical: vertical,\n      showTransitions: renderedValue === value,\n      showValue: showValue,\n      theme: theme\n    });\n    var divButtonProps = buttonProps ? getNativeProps(buttonProps, divProperties) : undefined;\n    return React.createElement(\"div\", {\n      className: classNames.root\n    }, label && React.createElement(Label, __assign({\n      className: classNames.titleLabel\n    }, ariaLabel ? {} : {\n      htmlFor: this._id\n    }, {\n      disabled: disabled\n    }), label), React.createElement(\"div\", {\n      className: classNames.container\n    }, React.createElement(\"div\", __assign({\n      id: this._id,\n      \"aria-valuenow\": value,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuetext\": this._getAriaValueText(value),\n      \"aria-label\": ariaLabel || label,\n      \"aria-disabled\": disabled\n    }, onMouseDownProp, onTouchStartProp, onKeyDownProp, divButtonProps, {\n      className: css(classNames.slideBox, buttonProps.className),\n      role: \"slider\",\n      tabIndex: disabled ? undefined : 0,\n      \"data-is-focusable\": !disabled\n    }), React.createElement(\"div\", {\n      ref: this._sliderLine,\n      className: classNames.line\n    }, originFromZero && React.createElement(\"span\", {\n      className: css(classNames.zeroTick),\n      style: this._getStyleUsingOffsetPercent(vertical, zeroOffsetPercent)\n    }), React.createElement(\"span\", {\n      ref: this._thumb,\n      className: classNames.thumb,\n      style: this._getStyleUsingOffsetPercent(vertical, thumbOffsetPercent)\n    }), originFromZero ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.inactiveSection),\n      style: (_a = {}, _a[lengthString] = Math.min(thumbOffsetPercent, zeroOffsetPercent) + '%', _a)\n    }), React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.activeSection),\n      style: (_b = {}, _b[lengthString] = Math.abs(zeroOffsetPercent - thumbOffsetPercent) + '%', _b)\n    }), React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.inactiveSection),\n      style: (_c = {}, _c[lengthString] = Math.min(100 - thumbOffsetPercent, 100 - zeroOffsetPercent) + '%', _c)\n    })) : React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.activeSection),\n      style: (_d = {}, _d[lengthString] = thumbOffsetPercent + '%', _d)\n    }), React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.inactiveSection),\n      style: (_e = {}, _e[lengthString] = 100 - thumbOffsetPercent + '%', _e)\n    })))), showValue && React.createElement(Label, {\n      className: classNames.valueLabel,\n      disabled: disabled\n    }, valueFormat ? valueFormat(value) : value)), React.createElement(FocusRects, null));\n  };\n  SliderBase.prototype.focus = function () {\n    if (this._thumb.current) {\n      this._thumb.current.focus();\n    }\n  };\n  Object.defineProperty(SliderBase.prototype, \"value\", {\n    get: function () {\n      var _a = this.props.value,\n        value = _a === void 0 ? this.state.value : _a;\n      if (this.props.min === undefined || this.props.max === undefined || value === undefined) {\n        return undefined;\n      } else {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SliderBase.prototype, \"renderedValue\", {\n    get: function () {\n      // renderedValue is expected to be defined while user is interacting with control, otherwise `undefined`.\n      // Fall back to `value`.\n      var _a = this.state.renderedValue,\n        renderedValue = _a === void 0 ? this.value : _a;\n      return renderedValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  SliderBase.prototype._getStyleUsingOffsetPercent = function (vertical, thumbOffsetPercent) {\n    var _a;\n    var direction = vertical ? 'bottom' : getRTL(this.props.theme) ? 'right' : 'left';\n    return _a = {}, _a[direction] = thumbOffsetPercent + '%', _a;\n  };\n  SliderBase.prototype._getPosition = function (event, vertical) {\n    var currentPosition;\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !vertical ? event.clientX : event.clientY;\n        break;\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !vertical ? event.touches[0].clientX : event.touches[0].clientY;\n        break;\n    }\n    return currentPosition;\n  };\n  SliderBase.prototype._updateValue = function (value, renderedValue) {\n    var _this = this;\n    var _a = this.props,\n      step = _a.step,\n      snapToStep = _a.snapToStep;\n    var numDec = 0;\n    if (isFinite(step)) {\n      while (Math.round(step * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step) {\n        numDec++;\n      }\n    }\n    // Make sure value has correct number of decimal places based on number of decimals in step\n    var roundedValue = parseFloat(value.toFixed(numDec));\n    var valueChanged = roundedValue !== this.state.value;\n    if (snapToStep) {\n      renderedValue = roundedValue;\n    }\n    this.setState({\n      value: roundedValue,\n      renderedValue: renderedValue\n    }, function () {\n      if (valueChanged && _this.props.onChange) {\n        _this.props.onChange(_this.state.value);\n      }\n    });\n  };\n  SliderBase.defaultProps = {\n    step: 1,\n    min: 0,\n    max: 10,\n    showValue: true,\n    disabled: false,\n    vertical: false,\n    buttonProps: {},\n    originFromZero: false\n  };\n  return SliderBase;\n}(React.Component);\nexport { SliderBase };","map":{"version":3,"sources":["components/Slider/Slider.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  css,\n  getId,\n  getRTL,\n  getRTLSafeKeyCode,\n  warnMutuallyExclusive,\n  initializeComponentRef,\n  Async,\n  on,\n  FocusRects,\n} from '../../Utilities';\nimport { ISliderProps, ISlider, ISliderStyleProps, ISliderStyles } from './Slider.types';\nimport { classNamesFunction, getNativeProps, divProperties } from '../../Utilities';\nimport { Label } from '../../Label';\n\nexport interface ISliderState {\n  value?: number;\n  renderedValue?: number;\n}\n\nconst getClassNames = classNamesFunction<ISliderStyleProps, ISliderStyles>();\nconst COMPONENT_NAME = 'SliderBase';\nexport const ONKEYDOWN_TIMEOUT_DURATION = 1000;\n\nexport class SliderBase extends React.Component<ISliderProps, ISliderState> implements ISlider {\n  public static defaultProps: ISliderProps = {\n    step: 1,\n    min: 0,\n    max: 10,\n    showValue: true,\n    disabled: false,\n    vertical: false,\n    buttonProps: {},\n    originFromZero: false,\n  };\n\n  private _async: Async;\n  private _disposables: (() => void)[] = [];\n  private _sliderLine = React.createRef<HTMLDivElement>();\n  private _thumb = React.createRef<HTMLSpanElement>();\n  private _id: string;\n  private _onKeyDownTimer = -1;\n\n  constructor(props: ISliderProps) {\n    super(props);\n\n    this._async = new Async(this);\n    initializeComponentRef(this);\n\n    warnMutuallyExclusive(COMPONENT_NAME, this.props, {\n      value: 'defaultValue',\n    });\n\n    this._id = getId('Slider');\n\n    const value =\n      props.value !== undefined ? props.value : props.defaultValue !== undefined ? props.defaultValue : props.min;\n\n    this.state = {\n      value: value,\n      renderedValue: undefined,\n    };\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n    this._disposeListeners();\n  }\n\n  public render(): React.ReactElement<{}> {\n    const {\n      ariaLabel,\n      className,\n      disabled,\n      label,\n      max,\n      min,\n      showValue,\n      buttonProps,\n      vertical,\n      valueFormat,\n      styles,\n      theme,\n      originFromZero,\n    } = this.props;\n    const value = this.value;\n    const renderedValue = this.renderedValue;\n    const thumbOffsetPercent: number = min === max ? 0 : ((renderedValue! - min!) / (max! - min!)) * 100;\n    const zeroOffsetPercent: number = min! >= 0 ? 0 : (-min! / (max! - min!)) * 100;\n    const lengthString = vertical ? 'height' : 'width';\n    const onMouseDownProp: {} = disabled ? {} : { onMouseDown: this._onMouseDownOrTouchStart };\n    const onTouchStartProp: {} = disabled ? {} : { onTouchStart: this._onMouseDownOrTouchStart };\n    const onKeyDownProp: {} = disabled ? {} : { onKeyDown: this._onKeyDown };\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      vertical,\n      showTransitions: renderedValue === value,\n      showValue,\n      theme: theme!,\n    });\n    const divButtonProps = buttonProps\n      ? getNativeProps<React.HTMLAttributes<HTMLDivElement>>(buttonProps, divProperties)\n      : undefined;\n\n    return (\n      <div className={classNames.root}>\n        {label && (\n          <Label className={classNames.titleLabel} {...(ariaLabel ? {} : { htmlFor: this._id })} disabled={disabled}>\n            {label}\n          </Label>\n        )}\n        <div className={classNames.container}>\n          <div\n            id={this._id}\n            aria-valuenow={value}\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-valuetext={this._getAriaValueText(value)}\n            aria-label={ariaLabel || label}\n            aria-disabled={disabled}\n            {...onMouseDownProp}\n            {...onTouchStartProp}\n            {...onKeyDownProp}\n            {...divButtonProps}\n            className={css(classNames.slideBox, buttonProps!.className)}\n            role=\"slider\"\n            tabIndex={disabled ? undefined : 0}\n            data-is-focusable={!disabled}\n          >\n            <div ref={this._sliderLine} className={classNames.line}>\n              {originFromZero && (\n                <span\n                  className={css(classNames.zeroTick)}\n                  style={this._getStyleUsingOffsetPercent(vertical, zeroOffsetPercent)}\n                />\n              )}\n              <span\n                ref={this._thumb}\n                className={classNames.thumb}\n                style={this._getStyleUsingOffsetPercent(vertical, thumbOffsetPercent)}\n              />\n              {originFromZero ? (\n                <>\n                  <span\n                    className={css(classNames.lineContainer, classNames.inactiveSection)}\n                    style={{ [lengthString]: Math.min(thumbOffsetPercent, zeroOffsetPercent) + '%' }}\n                  />\n                  <span\n                    className={css(classNames.lineContainer, classNames.activeSection)}\n                    style={{ [lengthString]: Math.abs(zeroOffsetPercent - thumbOffsetPercent) + '%' }}\n                  />\n                  <span\n                    className={css(classNames.lineContainer, classNames.inactiveSection)}\n                    style={{ [lengthString]: Math.min(100 - thumbOffsetPercent, 100 - zeroOffsetPercent) + '%' }}\n                  />\n                </>\n              ) : (\n                <>\n                  <span\n                    className={css(classNames.lineContainer, classNames.activeSection)}\n                    style={{ [lengthString]: thumbOffsetPercent + '%' }}\n                  />\n                  <span\n                    className={css(classNames.lineContainer, classNames.inactiveSection)}\n                    style={{ [lengthString]: 100 - thumbOffsetPercent + '%' }}\n                  />\n                </>\n              )}\n            </div>\n          </div>\n          {showValue && (\n            <Label className={classNames.valueLabel} disabled={disabled}>\n              {valueFormat ? valueFormat(value!) : value}\n            </Label>\n          )}\n        </div>\n        <FocusRects />\n      </div>\n    ) as React.ReactElement<{}>;\n  }\n\n  public focus(): void {\n    if (this._thumb.current) {\n      this._thumb.current.focus();\n    }\n  }\n\n  public get value(): number | undefined {\n    const { value = this.state.value } = this.props;\n    if (this.props.min === undefined || this.props.max === undefined || value === undefined) {\n      return undefined;\n    } else {\n      return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n  }\n\n  private get renderedValue(): number | undefined {\n    // renderedValue is expected to be defined while user is interacting with control, otherwise `undefined`.\n    // Fall back to `value`.\n    const { renderedValue = this.value } = this.state;\n    return renderedValue;\n  }\n\n  private _getAriaValueText = (value: number | undefined): string | undefined => {\n    const { ariaValueText } = this.props;\n    if (value !== undefined) {\n      return ariaValueText ? ariaValueText(value) : value.toString();\n    }\n    return undefined;\n  };\n\n  private _getStyleUsingOffsetPercent(vertical: boolean | undefined, thumbOffsetPercent: number): any {\n    const direction: string = vertical ? 'bottom' : getRTL(this.props.theme) ? 'right' : 'left';\n    return {\n      [direction]: thumbOffsetPercent + '%',\n    };\n  }\n\n  private _onMouseDownOrTouchStart = (event: MouseEvent | TouchEvent): void => {\n    if (event.type === 'mousedown') {\n      this._disposables.push(\n        on(window, 'mousemove', this._onMouseMoveOrTouchMove, true),\n        on(window, 'mouseup', this._onMouseUpOrTouchEnd, true),\n      );\n    } else if (event.type === 'touchstart') {\n      this._disposables.push(\n        on(window, 'touchmove', this._onMouseMoveOrTouchMove, true),\n        on(window, 'touchend', this._onMouseUpOrTouchEnd, true),\n      );\n    }\n    this._onMouseMoveOrTouchMove(event, true);\n  };\n\n  private _onMouseMoveOrTouchMove = (event: MouseEvent | TouchEvent, suppressEventCancelation?: boolean): void => {\n    if (!this._sliderLine.current) {\n      return;\n    }\n\n    const { max, min, step } = this.props;\n    const steps: number = (max! - min!) / step!;\n    const sliderPositionRect: ClientRect = this._sliderLine.current.getBoundingClientRect();\n    const sliderLength: number = !this.props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n    const stepLength: number = sliderLength / steps;\n    let currentSteps: number | undefined;\n    let distance: number | undefined;\n\n    if (!this.props.vertical) {\n      const left: number | undefined = this._getPosition(event, this.props.vertical);\n      distance = getRTL(this.props.theme) ? sliderPositionRect.right - left! : left! - sliderPositionRect.left;\n      currentSteps = distance / stepLength;\n    } else {\n      const bottom: number | undefined = this._getPosition(event, this.props.vertical);\n      distance = sliderPositionRect.bottom - bottom!;\n      currentSteps = distance / stepLength;\n    }\n\n    let currentValue: number | undefined;\n    let renderedValue: number | undefined;\n\n    // The value shouldn't be bigger than max or be smaller than min.\n    if (currentSteps! > Math.floor(steps)) {\n      renderedValue = currentValue = max as number;\n    } else if (currentSteps! < 0) {\n      renderedValue = currentValue = min as number;\n    } else {\n      renderedValue = min! + step! * currentSteps!;\n      currentValue = min! + step! * Math.round(currentSteps!);\n    }\n\n    this._updateValue(currentValue, renderedValue);\n\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  private _getPosition(event: MouseEvent | TouchEvent, vertical: boolean | undefined): number | undefined {\n    let currentPosition: number | undefined;\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !vertical ? (event as MouseEvent).clientX : (event as MouseEvent).clientY;\n        break;\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !vertical\n          ? (event as TouchEvent).touches[0].clientX\n          : (event as TouchEvent).touches[0].clientY;\n        break;\n    }\n    return currentPosition;\n  }\n  private _updateValue(value: number, renderedValue: number): void {\n    const { step, snapToStep } = this.props;\n    let numDec = 0;\n    if (isFinite(step!)) {\n      while (Math.round(step! * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step!) {\n        numDec++;\n      }\n    }\n\n    // Make sure value has correct number of decimal places based on number of decimals in step\n    const roundedValue = parseFloat(value.toFixed(numDec));\n    const valueChanged = roundedValue !== this.state.value;\n\n    if (snapToStep) {\n      renderedValue = roundedValue;\n    }\n\n    this.setState(\n      {\n        value: roundedValue,\n        renderedValue,\n      },\n      () => {\n        if (valueChanged && this.props.onChange) {\n          this.props.onChange(this.state.value as number);\n        }\n      },\n    );\n  }\n\n  private _onMouseUpOrTouchEnd = (event: MouseEvent | TouchEvent): void => {\n    // Disable renderedValue override.\n    this.setState({\n      renderedValue: undefined,\n    });\n\n    if (this.props.onChanged) {\n      this.props.onChanged(event, this.state.value as number);\n    }\n\n    this._disposeListeners();\n  };\n\n  private _disposeListeners = (): void => {\n    this._disposables.forEach(dispose => dispose());\n    this._disposables = [];\n  };\n\n  private _onKeyDown = (event: KeyboardEvent): void => {\n    let { value = this.state.value } = this.props;\n    const { max, min, step } = this.props;\n\n    let diff: number | undefined = 0;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (event.which) {\n      case getRTLSafeKeyCode(KeyCodes.left, this.props.theme):\n      case KeyCodes.down:\n        diff = -(step as number);\n\n        this._clearOnKeyDownTimer();\n        this._setOnKeyDownTimer(event);\n\n        break;\n      case getRTLSafeKeyCode(KeyCodes.right, this.props.theme):\n      case KeyCodes.up:\n        diff = step;\n\n        this._clearOnKeyDownTimer();\n        this._setOnKeyDownTimer(event);\n\n        break;\n\n      case KeyCodes.home:\n        value = min;\n        break;\n\n      case KeyCodes.end:\n        value = max;\n        break;\n\n      default:\n        return;\n    }\n\n    const newValue: number = Math.min(max as number, Math.max(min as number, value! + diff!));\n    this._updateValue(newValue, newValue);\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Disable renderedValue override.\n    this.setState({\n      renderedValue: undefined,\n    });\n  };\n\n  private _clearOnKeyDownTimer = (): void => {\n    this._async.clearTimeout(this._onKeyDownTimer);\n  };\n\n  private _setOnKeyDownTimer = (event: KeyboardEvent): void => {\n    this._onKeyDownTimer = this._async.setTimeout(() => {\n      if (this.props.onChanged) {\n        this.props.onChanged(event, this.state.value as number);\n      }\n    }, ONKEYDOWN_TIMEOUT_DURATION);\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}