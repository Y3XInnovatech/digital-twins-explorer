{"ast":null,"code":"import { __assign, __decorate, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './ActionButton.styles';\n/**\n * {@docCategory Button}\n */\nvar ActionButton = /** @class */function (_super) {\n  __extends(ActionButton, _super);\n  function ActionButton() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ActionButton.prototype.render = function () {\n    var _a = this.props,\n      styles = _a.styles,\n      theme = _a.theme;\n    return React.createElement(BaseButton, __assign({}, this.props, {\n      variantClassName: \"ms-Button--action ms-Button--command\",\n      styles: getStyles(theme, styles),\n      onRenderDescription: nullRender\n    }));\n  };\n  ActionButton = __decorate([customizable('ActionButton', ['theme', 'styles'], true)], ActionButton);\n  return ActionButton;\n}(React.Component);\nexport { ActionButton };","map":{"version":3,"sources":["components/Button/ActionButton/ActionButton.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,UAAU,QAAQ,eAAe;AAC1C,SAAS,YAAY,EAAE,UAAU,QAAQ,oBAAoB;AAE7D,SAAS,SAAS,QAAQ,uBAAuB;AAEjD;;AAEG;AAEH,IAAA,YAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAkC,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;EAAlC,SAAA,YAAA,CAAA,EAAA;;EAaA;EAZS,YAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACQ,IAAA,EAAA,GAAA,IAAA,CAAA,KAA8B;MAA5B,MAAA,GAAA,EAAA,CAAA,MAAM;MAAE,KAAA,GAAA,EAAA,CAAA,KAAoB;IAEpC,OACE,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA,QAAA,CAAA,CAAA,CAAA,EACL,IAAI,CAAC,KAAK,EAAA;MACd,gBAAgB,EAAC,sCAAsC;MACvD,MAAM,EAAE,SAAS,CAAC,KAAM,EAAE,MAAM,CAAC;MACjC,mBAAmB,EAAE;IAAU,CAAA,CAAA,CAC/B;EAEN,CAAC;EAZU,YAAY,GAAA,UAAA,CAAA,CADxB,YAAY,CAAC,cAAc,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,C,EAC3C,YAAY,CAaxB;EAAD,OAAA,YAAC;CAAA,CAbiC,KAAK,CAAC,SAAS,CAAA;SAApC,YAAY","sourcesContent":["import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './ActionButton.styles';\n\n/**\n * {@docCategory Button}\n */\n@customizable('ActionButton', ['theme', 'styles'], true)\nexport class ActionButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName=\"ms-Button--action ms-Button--command\"\n        styles={getStyles(theme!, styles)}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}