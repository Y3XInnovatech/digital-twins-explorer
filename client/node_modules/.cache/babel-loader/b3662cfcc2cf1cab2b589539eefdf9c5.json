{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport { PersonaPresence as PersonaPresenceEnum } from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\nvar coinSizeFontScaleFactor = 6;\nvar coinSizePresenceScaleFactor = 3;\nvar presenceMaxSize = 40;\nvar presenceFontMaxSize = 20;\nvar getClassNames = classNamesFunction({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nvar PersonaPresenceBase = /** @class */function (_super) {\n  __extends(PersonaPresenceBase, _super);\n  function PersonaPresenceBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._onRenderIcon = function (className, style) {\n      return React.createElement(Icon, {\n        className: className,\n        iconName: determineIcon(_this.props.presence, _this.props.isOutOfOffice),\n        style: style\n      });\n    };\n    return _this;\n  }\n  PersonaPresenceBase.prototype.render = function () {\n    var _a = this.props,\n      coinSize = _a.coinSize,\n      isOutOfOffice = _a.isOutOfOffice,\n      styles = _a.styles,\n      // Use getStyles from props.\n      presence = _a.presence,\n      theme = _a.theme,\n      presenceTitle = _a.presenceTitle,\n      presenceColors = _a.presenceColors;\n    var size = sizeBoolean(this.props.size);\n    // Render Presence Icon if Persona is above size 32.\n    var renderIcon = !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) && (coinSize ? coinSize > 32 : true);\n    var presenceHeightWidth = coinSize ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize ? coinSize / coinSizePresenceScaleFactor + 'px' : presenceMaxSize + 'px' : '';\n    var presenceFontSize = coinSize ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize ? coinSize / coinSizeFontScaleFactor + 'px' : presenceFontMaxSize + 'px' : '';\n    var coinSizeWithPresenceIconStyle = coinSize ? {\n      fontSize: presenceFontSize,\n      lineHeight: presenceHeightWidth\n    } : undefined;\n    var coinSizeWithPresenceStyle = coinSize ? {\n      width: presenceHeightWidth,\n      height: presenceHeightWidth\n    } : undefined;\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      presence: presence,\n      size: this.props.size,\n      isOutOfOffice: isOutOfOffice,\n      presenceColors: presenceColors\n    });\n    if (presence === PersonaPresenceEnum.none) {\n      return null;\n    }\n    return React.createElement(\"div\", {\n      role: \"presentation\",\n      className: classNames.presence,\n      style: coinSizeWithPresenceStyle,\n      title: presenceTitle\n    }, renderIcon && this._onRenderIcon(classNames.presenceIcon, coinSizeWithPresenceIconStyle));\n  };\n  return PersonaPresenceBase;\n}(React.Component);\nexport { PersonaPresenceBase };\nfunction determineIcon(presence, isOutOfOffice) {\n  if (!presence) {\n    return undefined;\n  }\n  var oofIcon = 'SkypeArrow';\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n    case 'dnd':\n      return 'SkypeMinus';\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n  return '';\n}","map":{"version":3,"sources":["components/Persona/PersonaPresence/PersonaPresence.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,kBAAkB,QAAQ,oBAAoB;AACvD,SAAS,IAAI,QAAQ,eAAe;AACpC,SAIE,eAAe,IAAI,mBAAmB,QAEjC,kBAAkB;AACzB,SAAS,WAAW,QAAQ,kBAAkB;AAE9C,IAAM,uBAAuB,GAAG,CAAC;AACjC,IAAM,2BAA2B,GAAG,CAAC;AACrC,IAAM,eAAe,GAAG,EAAE;AAC1B,IAAM,mBAAmB,GAAG,EAAE;AAE9B,IAAM,aAAa,GAAG,kBAAkB,CAAqD;EAC3F;EACA;EACA,SAAS,EAAE;CACZ,CAAC;AAEF;;;AAGG;AACH,IAAA,mBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAyC,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;EACvC,SAAA,mBAAA,CAAY,KAA4B,EAAA;IAAxC,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IAAA,IAAA;IAyDN,KAAA,CAAA,aAAa,GAAG,UAAC,SAAkB,EAAE,KAA2B,EAAA;MAAkB,OACxF,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;QAAC,SAAS,EAAE,SAAS;QAAE,QAAQ,EAAE,aAAa,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QAAE,KAAK,EAAE;MAAK,CAAA,CAAI;IAD5B,CAEzF;;EA1DD;EAEO,mBAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACQ,IAAA,EAAA,GAAA,IAAA,CAAA,KAQQ;MAPZ,QAAA,GAAA,EAAA,CAAA,QAAQ;MACR,aAAA,GAAA,EAAA,CAAA,aAAa;MACb,MAAA,GAAA,EAAA,CAAA,MAAM;MAAE;MACR,QAAA,GAAA,EAAA,CAAA,QAAQ;MACR,KAAA,GAAA,EAAA,CAAA,KAAK;MACL,aAAA,GAAA,EAAA,CAAA,aAAa;MACb,cAAA,GAAA,EAAA,CAAA,cACY;IACd,IAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAmB,CAAC;IAExD;IACA,IAAM,UAAU,GACd,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KACnG,QAAQ,GAAG,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC;IAEnC,IAAM,mBAAmB,GAAW,QAAQ,GACxC,QAAQ,GAAG,2BAA2B,GAAG,eAAe,GACtD,QAAQ,GAAG,2BAA2B,GAAG,IAAI,GAC7C,eAAe,GAAG,IAAI,GACxB,EAAE;IACN,IAAM,gBAAgB,GAAW,QAAQ,GACrC,QAAQ,GAAG,uBAAuB,GAAG,mBAAmB,GACtD,QAAQ,GAAG,uBAAuB,GAAG,IAAI,GACzC,mBAAmB,GAAG,IAAI,GAC5B,EAAE;IACN,IAAM,6BAA6B,GAAG,QAAQ,GAC1C;MAAE,QAAQ,EAAE,gBAAgB;MAAE,UAAU,EAAE;IAAmB,CAAE,GAC/D,SAAS;IACb,IAAM,yBAAyB,GAAG,QAAQ,GACtC;MAAE,KAAK,EAAE,mBAAmB;MAAE,MAAM,EAAE;IAAmB,CAAE,GAC3D,SAAS;IAEb;IACA,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;MACvC,KAAK,EAAE,KAAM;MACb,QAAQ,EAAA,QAAA;MACR,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;MACrB,aAAa,EAAA,aAAA;MACb,cAAc,EAAA;KACf,CAAC;IAEF,IAAI,QAAQ,KAAK,mBAAmB,CAAC,IAAI,EAAE;MACzC,OAAO,IAAI;IACZ;IAED,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,IAAI,EAAC,cAAc;MAAC,SAAS,EAAE,UAAU,CAAC,QAAQ;MAAE,KAAK,EAAE,yBAAyB;MAAE,KAAK,EAAE;IAAa,CAAA,EAC5G,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,YAAY,EAAE,6BAA6B,CAAC,CACrF;EAEV,CAAC;EAKH,OAAA,mBAAC;AAAD,CAAC,CA9DwC,KAAK,CAAC,SAAS,CAAA;;AAgExD,SAAS,aAAa,CACpB,QAAyC,EACzC,aAAkC,EAAA;EAElC,IAAI,CAAC,QAAQ,EAAE;IACb,OAAO,SAAS;EACjB;EAED,IAAM,OAAO,GAAG,YAAY;EAE5B,QAAQ,mBAAmB,CAAC,QAAQ,CAAC;IACnC,KAAK,QAAQ;MACX,OAAO,YAAY;IACrB,KAAK,MAAM;MACT,OAAO,aAAa,GAAG,OAAO,GAAG,YAAY;IAC/C,KAAK,KAAK;MACR,OAAO,YAAY;IACrB,KAAK,SAAS;MACZ,OAAO,aAAa,GAAG,OAAO,GAAG,EAAE;EACtC;EAED,OAAO,EAAE;AACX","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport {\n  IPersonaPresenceProps,\n  IPersonaPresenceStyleProps,\n  IPersonaPresenceStyles,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\n\nconst coinSizeFontScaleFactor = 6;\nconst coinSizePresenceScaleFactor = 3;\nconst presenceMaxSize = 40;\nconst presenceFontMaxSize = 20;\n\nconst getClassNames = classNamesFunction<IPersonaPresenceStyleProps, IPersonaPresenceStyles>({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport class PersonaPresenceBase extends React.Component<IPersonaPresenceProps, {}> {\n  constructor(props: IPersonaPresenceProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      coinSize,\n      isOutOfOffice,\n      styles, // Use getStyles from props.\n      presence,\n      theme,\n      presenceTitle,\n      presenceColors,\n    } = this.props;\n    const size = sizeBoolean(this.props.size as PersonaSize);\n\n    // Render Presence Icon if Persona is above size 32.\n    const renderIcon =\n      !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) &&\n      (coinSize ? coinSize > 32 : true);\n\n    const presenceHeightWidth: string = coinSize\n      ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize\n        ? coinSize / coinSizePresenceScaleFactor + 'px'\n        : presenceMaxSize + 'px'\n      : '';\n    const presenceFontSize: string = coinSize\n      ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize\n        ? coinSize / coinSizeFontScaleFactor + 'px'\n        : presenceFontMaxSize + 'px'\n      : '';\n    const coinSizeWithPresenceIconStyle = coinSize\n      ? { fontSize: presenceFontSize, lineHeight: presenceHeightWidth }\n      : undefined;\n    const coinSizeWithPresenceStyle = coinSize\n      ? { width: presenceHeightWidth, height: presenceHeightWidth }\n      : undefined;\n\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      presence,\n      size: this.props.size,\n      isOutOfOffice,\n      presenceColors,\n    });\n\n    if (presence === PersonaPresenceEnum.none) {\n      return null;\n    }\n\n    return (\n      <div role=\"presentation\" className={classNames.presence} style={coinSizeWithPresenceStyle} title={presenceTitle}>\n        {renderIcon && this._onRenderIcon(classNames.presenceIcon, coinSizeWithPresenceIconStyle)}\n      </div>\n    );\n  }\n\n  private _onRenderIcon = (className?: string, style?: React.CSSProperties): JSX.Element => (\n    <Icon className={className} iconName={determineIcon(this.props.presence, this.props.isOutOfOffice)} style={style} />\n  );\n}\n\nfunction determineIcon(\n  presence: PersonaPresenceEnum | undefined,\n  isOutOfOffice: boolean | undefined,\n): string | undefined {\n  if (!presence) {\n    return undefined;\n  }\n\n  const oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n    case 'dnd':\n      return 'SkypeMinus';\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}