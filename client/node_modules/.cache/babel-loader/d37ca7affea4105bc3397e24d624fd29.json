{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef } from '../../../../Utilities';\nimport { ContextualMenu, DirectionalHint } from '../../../../ContextualMenu';\nvar SelectedItemWithContextMenu = /** @class */function (_super) {\n  __extends(SelectedItemWithContextMenu, _super);\n  function SelectedItemWithContextMenu(props) {\n    var _this = _super.call(this, props) || this;\n    _this.itemElement = React.createRef();\n    _this._onClick = function (ev) {\n      ev.preventDefault();\n      if (_this.props.beginEditing && !_this.props.item.isValid) {\n        _this.props.beginEditing(_this.props.item);\n      } else {\n        _this.setState({\n          contextualMenuVisible: true\n        });\n      }\n    };\n    _this._onCloseContextualMenu = function (ev) {\n      _this.setState({\n        contextualMenuVisible: false\n      });\n    };\n    initializeComponentRef(_this);\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n  SelectedItemWithContextMenu.prototype.render = function () {\n    return React.createElement(\"div\", {\n      ref: this.itemElement,\n      onContextMenu: this._onClick\n    }, this.props.renderedItem, this.state.contextualMenuVisible ? React.createElement(ContextualMenu, {\n      items: this.props.menuItems,\n      shouldFocusOnMount: true,\n      target: this.itemElement.current,\n      onDismiss: this._onCloseContextualMenu,\n      directionalHint: DirectionalHint.bottomLeftEdge\n    }) : null);\n  };\n  return SelectedItemWithContextMenu;\n}(React.Component);\nexport { SelectedItemWithContextMenu };","map":{"version":3,"sources":["components/SelectedItemsList/SelectedPeopleList/Items/SelectedItemWithContextMenu.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,sBAAsB,QAAoB,uBAAuB;AAE1E,SAAS,cAAc,EAAE,eAAe,QAA6B,4BAA4B;AAajG,IAAA,2BAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAiD,SAAA,CAAA,2BAAA,EAAA,MAAA,CAAA;EAM/C,SAAA,2BAAA,CAAY,KAAwC,EAAA;IAApD,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IAAA,IAAA;IAHJ,KAAA,CAAA,WAAW,GAAoC,KAAK,CAAC,SAAS,CAAA,CAAkB;IA0BlF,KAAA,CAAA,QAAQ,GAAG,UAAC,EAAiC,EAAA;MACnD,EAAE,CAAC,cAAc,CAAA,CAAE;MACnB,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE;QACvD,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC;OACzC,MAAM;QACL,KAAI,CAAC,QAAQ,CAAC;UAAE,qBAAqB,EAAE;QAAI,CAAE,CAAC;MAC/C;IACH,CAAC;IAEO,KAAA,CAAA,sBAAsB,GAAG,UAAC,EAA0C,EAAA;MAC1E,KAAI,CAAC,QAAQ,CAAC;QAAE,qBAAqB,EAAE;MAAK,CAAE,CAAC;IACjD,CAAC;IAhCC,sBAAsB,CAAC,KAAI,CAAC;IAC5B,KAAI,CAAC,KAAK,GAAG;MAAE,qBAAqB,EAAE;IAAK,CAAE;;EAC/C;EAEO,2BAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACE,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,GAAG,EAAE,IAAI,CAAC,WAAW;MAAE,aAAa,EAAE,IAAI,CAAC;IAAQ,CAAA,EACrD,IAAI,CAAC,KAAK,CAAC,YAAY,EACvB,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAC/B,KAAA,CAAA,aAAA,CAAC,cAAc,EAAA;MACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;MAC3B,kBAAkB,EAAE,IAAI;MACxB,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;MAChC,SAAS,EAAE,IAAI,CAAC,sBAAsB;MACtC,eAAe,EAAE,eAAe,CAAC;IAAc,CAAA,CAC/C,GACA,IAAI,CACJ;EAEV,CAAC;EAcH,OAAA,2BAAC;AAAD,CAAC,CA1CgD,KAAK,CAAC,SAAS,CAAA","sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, IBaseProps } from '../../../../Utilities';\nimport { IExtendedPersonaProps } from '../SelectedPeopleList';\nimport { ContextualMenu, DirectionalHint, IContextualMenuItem } from '../../../../ContextualMenu';\n\nexport interface IPeoplePickerItemState {\n  contextualMenuVisible: boolean;\n}\n\nexport interface ISelectedItemWithContextMenuProps extends IBaseProps {\n  renderedItem: JSX.Element;\n  beginEditing?: (item: IExtendedPersonaProps) => void;\n  menuItems: IContextualMenuItem[];\n  item: IExtendedPersonaProps;\n}\n\nexport class SelectedItemWithContextMenu extends React.Component<\n  ISelectedItemWithContextMenuProps,\n  IPeoplePickerItemState\n> {\n  protected itemElement: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();\n\n  constructor(props: ISelectedItemWithContextMenuProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div ref={this.itemElement} onContextMenu={this._onClick}>\n        {this.props.renderedItem}\n        {this.state.contextualMenuVisible ? (\n          <ContextualMenu\n            items={this.props.menuItems}\n            shouldFocusOnMount={true}\n            target={this.itemElement.current}\n            onDismiss={this._onCloseContextualMenu}\n            directionalHint={DirectionalHint.bottomLeftEdge}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    ev.preventDefault();\n    if (this.props.beginEditing && !this.props.item.isValid) {\n      this.props.beginEditing(this.props.item);\n    } else {\n      this.setState({ contextualMenuVisible: true });\n    }\n  };\n\n  private _onCloseContextualMenu = (ev: React.MouseEvent | React.KeyboardEvent): void => {\n    this.setState({ contextualMenuVisible: false });\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}