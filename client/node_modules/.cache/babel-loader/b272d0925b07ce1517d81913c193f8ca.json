{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { css, getId, initializeComponentRef } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { IconButton } from '../../../../Button';\nimport * as stylesImport from './ExtendedSelectedItem.scss';\nvar styles = stylesImport;\nvar ExtendedSelectedItem = /** @class */function (_super) {\n  __extends(ExtendedSelectedItem, _super);\n  function ExtendedSelectedItem(props) {\n    var _this = _super.call(this, props) || this;\n    _this.persona = React.createRef();\n    initializeComponentRef(_this);\n    // eslint-disable-next-line react/no-unused-state\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n  ExtendedSelectedItem.prototype.render = function () {\n    var _a, _b;\n    var _c = this.props,\n      item = _c.item,\n      onExpandItem = _c.onExpandItem,\n      onRemoveItem = _c.onRemoveItem,\n      removeButtonAriaLabel = _c.removeButtonAriaLabel,\n      index = _c.index,\n      selected = _c.selected;\n    var itemId = getId();\n    return React.createElement(\"div\", {\n      ref: this.persona,\n      className: css('ms-PickerPersona-container', styles.personaContainer, (_a = {}, _a['is-selected ' + styles.personaContainerIsSelected] = selected, _a), (_b = {}, _b['is-invalid ' + styles.validationError] = !item.isValid, _b)),\n      \"data-is-focusable\": true,\n      \"data-is-sub-focuszone\": true,\n      \"data-selection-index\": index,\n      role: 'listitem',\n      \"aria-labelledby\": 'selectedItemPersona-' + itemId\n    }, React.createElement(\"div\", {\n      hidden: !item.canExpand || onExpandItem === undefined\n    }, React.createElement(IconButton, {\n      onClick: this._onClickIconButton(onExpandItem),\n      iconProps: {\n        iconName: 'Add',\n        style: {\n          fontSize: '14px'\n        }\n      },\n      className: css('ms-PickerItem-removeButton', styles.expandButton, styles.actionButton),\n      ariaLabel: removeButtonAriaLabel\n    })), React.createElement(\"div\", {\n      className: css(styles.personaWrapper)\n    }, React.createElement(\"div\", {\n      className: css('ms-PickerItem-content', styles.itemContent),\n      id: 'selectedItemPersona-' + itemId\n    }, React.createElement(Persona, __assign({}, item, {\n      onRenderCoin: this.props.renderPersonaCoin,\n      onRenderPrimaryText: this.props.renderPrimaryText,\n      size: PersonaSize.size32\n    }))), React.createElement(IconButton, {\n      onClick: this._onClickIconButton(onRemoveItem),\n      iconProps: {\n        iconName: 'Cancel',\n        style: {\n          fontSize: '14px'\n        }\n      },\n      className: css('ms-PickerItem-removeButton', styles.removeButton, styles.actionButton),\n      ariaLabel: removeButtonAriaLabel\n    })));\n  };\n  ExtendedSelectedItem.prototype._onClickIconButton = function (action) {\n    return function (ev) {\n      ev.stopPropagation();\n      ev.preventDefault();\n      if (action) {\n        action();\n      }\n    };\n  };\n  return ExtendedSelectedItem;\n}(React.Component);\nexport { ExtendedSelectedItem };","map":{"version":3,"sources":["components/SelectedItemsList/SelectedPeopleList/Items/ExtendedSelectedItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css, getId, initializeComponentRef } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { ISelectedPeopleItemProps } from '../SelectedPeopleList';\nimport { IconButton } from '../../../../Button';\nimport * as stylesImport from './ExtendedSelectedItem.scss';\nconst styles: any = stylesImport;\n\nexport interface IPeoplePickerItemState {\n  contextualMenuVisible: boolean;\n}\n\nexport class ExtendedSelectedItem extends React.Component<ISelectedPeopleItemProps, IPeoplePickerItemState> {\n  protected persona = React.createRef<HTMLDivElement>();\n\n  constructor(props: ISelectedPeopleItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    // eslint-disable-next-line react/no-unused-state\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public render(): JSX.Element {\n    const { item, onExpandItem, onRemoveItem, removeButtonAriaLabel, index, selected } = this.props;\n    const itemId = getId();\n    return (\n      <div\n        ref={this.persona}\n        className={css(\n          'ms-PickerPersona-container',\n          styles.personaContainer,\n          { ['is-selected ' + styles.personaContainerIsSelected]: selected },\n          { ['is-invalid ' + styles.validationError]: !item.isValid },\n        )}\n        data-is-focusable={true}\n        data-is-sub-focuszone={true}\n        data-selection-index={index}\n        role={'listitem'}\n        aria-labelledby={'selectedItemPersona-' + itemId}\n      >\n        <div hidden={!item.canExpand || onExpandItem === undefined}>\n          <IconButton\n            onClick={this._onClickIconButton(onExpandItem)}\n            iconProps={{ iconName: 'Add', style: { fontSize: '14px' } }}\n            className={css('ms-PickerItem-removeButton', styles.expandButton, styles.actionButton)}\n            ariaLabel={removeButtonAriaLabel}\n          />\n        </div>\n        <div className={css(styles.personaWrapper)}>\n          <div className={css('ms-PickerItem-content', styles.itemContent)} id={'selectedItemPersona-' + itemId}>\n            <Persona\n              {...item}\n              onRenderCoin={this.props.renderPersonaCoin}\n              onRenderPrimaryText={this.props.renderPrimaryText}\n              size={PersonaSize.size32}\n            />\n          </div>\n          <IconButton\n            onClick={this._onClickIconButton(onRemoveItem)}\n            iconProps={{ iconName: 'Cancel', style: { fontSize: '14px' } }}\n            className={css('ms-PickerItem-removeButton', styles.removeButton, styles.actionButton)}\n            ariaLabel={removeButtonAriaLabel}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _onClickIconButton(\n    action: (() => void) | undefined,\n  ): (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => void {\n    return (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>): void => {\n      ev.stopPropagation();\n      ev.preventDefault();\n      if (action) {\n        action();\n      }\n    };\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}