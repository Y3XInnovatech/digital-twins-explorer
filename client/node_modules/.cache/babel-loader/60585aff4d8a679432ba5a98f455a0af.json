{"ast":null,"code":"import { AnimationClassNames, getGlobalClassNames } from '../../Styling';\nimport { getWindow } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait'\n};\nexport var getStyles = function (props) {\n  var className = props.className,\n    width = props.width,\n    height = props.height,\n    maximizeFrame = props.maximizeFrame,\n    isLoaded = props.isLoaded,\n    shouldFadeIn = props.shouldFadeIn,\n    shouldStartVisible = props.shouldStartVisible,\n    isLandscape = props.isLandscape,\n    isCenter = props.isCenter,\n    isContain = props.isContain,\n    isCover = props.isCover,\n    isCenterContain = props.isCenterContain,\n    isCenterCover = props.isCenterCover,\n    isNone = props.isNone,\n    isError = props.isError,\n    isNotImageFit = props.isNotImageFit,\n    theme = props.theme;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var ImageFitStyles = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)'\n  };\n  // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n  var window = getWindow();\n  var supportsObjectFit = window !== undefined && window.navigator.msMaxTouchPoints === undefined;\n  var fallbackObjectFitStyles = isContain && isLandscape || isCover && !isLandscape ? {\n    width: '100%',\n    height: 'auto'\n  } : {\n    width: 'auto',\n    height: '100%'\n  };\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      overflow: 'hidden'\n    }, maximizeFrame && [classNames.rootMaximizeFrame, {\n      height: '100%',\n      width: '100%'\n    }], isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400, (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n      position: 'relative'\n    }, className],\n    image: [classNames.image, {\n      display: 'block',\n      opacity: 0\n    }, isLoaded && ['is-loaded', {\n      opacity: 1\n    }], isCenter && [classNames.imageCenter, ImageFitStyles], isContain && [classNames.imageContain, supportsObjectFit && {\n      width: '100%',\n      height: '100%',\n      objectFit: 'contain'\n    }, !supportsObjectFit && fallbackObjectFitStyles, ImageFitStyles], isCover && [classNames.imageCover, supportsObjectFit && {\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover'\n    }, !supportsObjectFit && fallbackObjectFitStyles, ImageFitStyles], isCenterContain && [classNames.imageCenterContain, isLandscape && {\n      maxWidth: '100%'\n    }, !isLandscape && {\n      maxHeight: '100%'\n    }, ImageFitStyles], isCenterCover && [classNames.imageCenterCover, isLandscape && {\n      maxHeight: '100%'\n    }, !isLandscape && {\n      maxWidth: '100%'\n    }, ImageFitStyles], isNone && [classNames.imageNone, {\n      width: 'auto',\n      height: 'auto'\n    }], isNotImageFit && [!!width && !height && {\n      height: 'auto',\n      width: '100%'\n    }, !width && !!height && {\n      height: '100%',\n      width: 'auto'\n    }, !!width && !!height && {\n      height: '100%',\n      width: '100%'\n    }], isLandscape && classNames.imageLandscape, !isLandscape && classNames.imagePortrait, !isLoaded && 'is-notLoaded', shouldFadeIn && 'is-fadeIn', isError && 'is-error']\n  };\n};","map":{"version":3,"sources":["components/Image/Image.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { AnimationClassNames, getGlobalClassNames, IStyle } from '../../Styling';\nimport { IImageStyleProps, IImageStyles } from './Image.types';\nimport { getWindow } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait',\n};\n\nexport const getStyles = (props: IImageStyleProps): IImageStyles => {\n  const {\n    className,\n    width,\n    height,\n    maximizeFrame,\n    isLoaded,\n    shouldFadeIn,\n    shouldStartVisible,\n    isLandscape,\n    isCenter,\n    isContain,\n    isCover,\n    isCenterContain,\n    isCenterCover,\n    isNone,\n    isError,\n    isNotImageFit,\n    theme,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ImageFitStyles: IStyle = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)', // @todo test RTL renders transform: translate(50%,-50%);\n  };\n\n  // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n  const window: Window | undefined = getWindow();\n  const supportsObjectFit: boolean = window !== undefined && window.navigator.msMaxTouchPoints === undefined;\n  const fallbackObjectFitStyles =\n    (isContain && isLandscape) || (isCover && !isLandscape)\n      ? { width: '100%', height: 'auto' }\n      : { width: 'auto', height: '100%' };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        overflow: 'hidden',\n      },\n      maximizeFrame && [\n        classNames.rootMaximizeFrame,\n        {\n          height: '100%',\n          width: '100%',\n        },\n      ],\n      isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400,\n      (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n        position: 'relative',\n      },\n      className,\n    ],\n    image: [\n      classNames.image,\n      {\n        display: 'block',\n        opacity: 0,\n      },\n      isLoaded && [\n        'is-loaded',\n        {\n          opacity: 1,\n        },\n      ],\n      isCenter && [classNames.imageCenter, ImageFitStyles],\n      isContain && [\n        classNames.imageContain,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        ImageFitStyles,\n      ],\n      isCover && [\n        classNames.imageCover,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        ImageFitStyles,\n      ],\n      isCenterContain && [\n        classNames.imageCenterContain,\n        isLandscape && {\n          maxWidth: '100%',\n        },\n        !isLandscape && {\n          maxHeight: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isCenterCover && [\n        classNames.imageCenterCover,\n        isLandscape && {\n          maxHeight: '100%',\n        },\n        !isLandscape && {\n          maxWidth: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isNone && [\n        classNames.imageNone,\n        {\n          width: 'auto',\n          height: 'auto',\n        },\n      ],\n      isNotImageFit && [\n        !!width &&\n          !height && {\n            height: 'auto',\n            width: '100%',\n          },\n        !width &&\n          !!height && {\n            height: '100%',\n            width: 'auto',\n          },\n        !!width &&\n          !!height && {\n            height: '100%',\n            width: '100%',\n          },\n      ],\n      isLandscape && classNames.imageLandscape,\n      !isLandscape && classNames.imagePortrait,\n      !isLoaded && 'is-notLoaded',\n      shouldFadeIn && 'is-fadeIn',\n      isError && 'is-error',\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}