{"ast":null,"code":"import { hiddenContentStyle, HighContrastSelector, getFocusStyle, getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Facepile',\n  addButton: 'ms-Facepile-addButton ms-Facepile-itemButton',\n  descriptiveOverflowButton: 'ms-Facepile-descriptiveOverflowButton ms-Facepile-itemButton',\n  itemButton: 'ms-Facepile-itemButton ms-Facepile-person',\n  itemContainer: 'ms-Facepile-itemContainer',\n  members: 'ms-Facepile-members',\n  member: 'ms-Facepile-member',\n  overflowButton: 'ms-Facepile-overflowButton ms-Facepile-itemButton'\n};\nexport var styles = function (props) {\n  var _a;\n  var className = props.className,\n    theme = props.theme,\n    _b = props.spacingAroundItemButton,\n    spacingAroundItemButton = _b === void 0 ? 2 : _b;\n  var palette = theme.palette,\n    fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var ItemButtonStyles = {\n    textAlign: 'center',\n    padding: 0,\n    borderRadius: '50%',\n    verticalAlign: 'top',\n    display: 'inline',\n    backgroundColor: 'transparent',\n    border: 'none',\n    selectors: {\n      '&::-moz-focus-inner': {\n        padding: 0,\n        border: 0\n      }\n    }\n  };\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      width: 'auto'\n    }, className],\n    addButton: [classNames.addButton, getFocusStyle(theme, {\n      inset: -1\n    }), ItemButtonStyles, {\n      fontSize: fonts.medium.fontSize,\n      color: palette.white,\n      backgroundColor: palette.themePrimary,\n      marginRight: spacingAroundItemButton * 2 + 'px',\n      selectors: {\n        '&:hover': {\n          backgroundColor: palette.themeDark\n        },\n        '&:focus': {\n          backgroundColor: palette.themeDark\n        },\n        '&:active': {\n          backgroundColor: palette.themeDarker\n        },\n        '&:disabled': {\n          backgroundColor: palette.neutralTertiaryAlt\n        }\n      }\n    }],\n    descriptiveOverflowButton: [classNames.descriptiveOverflowButton, getFocusStyle(theme, {\n      inset: -1\n    }), ItemButtonStyles, {\n      fontSize: fonts.small.fontSize,\n      color: palette.neutralSecondary,\n      backgroundColor: palette.neutralLighter,\n      marginLeft: spacingAroundItemButton * 2 + \"px\"\n    }],\n    itemButton: [classNames.itemButton, ItemButtonStyles],\n    itemContainer: [classNames.itemContainer, {\n      display: 'flex'\n    }],\n    members: [classNames.members, {\n      display: 'flex',\n      overflow: 'hidden',\n      listStyleType: 'none',\n      padding: 0,\n      margin: \"-\" + spacingAroundItemButton + \"px\"\n    }],\n    member: [classNames.member, {\n      display: 'inline-flex',\n      flex: '0 0 auto',\n      margin: spacingAroundItemButton + \"px\"\n    }],\n    overflowButton: [classNames.overflowButton, getFocusStyle(theme, {\n      inset: -1\n    }), ItemButtonStyles, {\n      fontSize: fonts.medium.fontSize,\n      color: palette.neutralSecondary,\n      backgroundColor: palette.neutralLighter,\n      marginLeft: spacingAroundItemButton * 2 + \"px\"\n    }],\n    overflowInitialsIcon: [{\n      color: palette.neutralPrimary,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _a)\n    }],\n    screenReaderOnly: hiddenContentStyle\n  };\n};","map":{"version":3,"sources":["components/Facepile/Facepile.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IFacepileStyleProps, IFacepileStyles } from './Facepile.types';\n\nimport { IStyle, hiddenContentStyle, HighContrastSelector, getFocusStyle, getGlobalClassNames } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Facepile',\n  addButton: 'ms-Facepile-addButton ms-Facepile-itemButton',\n  descriptiveOverflowButton: 'ms-Facepile-descriptiveOverflowButton ms-Facepile-itemButton',\n  itemButton: 'ms-Facepile-itemButton ms-Facepile-person',\n  itemContainer: 'ms-Facepile-itemContainer',\n  members: 'ms-Facepile-members',\n  member: 'ms-Facepile-member',\n  overflowButton: 'ms-Facepile-overflowButton ms-Facepile-itemButton',\n};\n\nexport const styles = (props: IFacepileStyleProps): IFacepileStyles => {\n  const { className, theme, spacingAroundItemButton = 2 } = props;\n\n  const { palette, fonts } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ItemButtonStyles: IStyle = {\n    textAlign: 'center',\n    padding: 0,\n    borderRadius: '50%',\n    verticalAlign: 'top',\n    display: 'inline',\n    backgroundColor: 'transparent',\n    border: 'none',\n    selectors: {\n      '&::-moz-focus-inner': {\n        padding: 0,\n        border: 0,\n      },\n    },\n  };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        width: 'auto',\n      },\n      className,\n    ],\n\n    addButton: [\n      classNames.addButton,\n      getFocusStyle(theme, { inset: -1 }),\n      ItemButtonStyles,\n      {\n        fontSize: fonts.medium.fontSize,\n        color: palette.white,\n        backgroundColor: palette.themePrimary,\n        marginRight: spacingAroundItemButton * 2 + 'px',\n        selectors: {\n          '&:hover': {\n            backgroundColor: palette.themeDark,\n          },\n          '&:focus': {\n            backgroundColor: palette.themeDark,\n          },\n          '&:active': {\n            backgroundColor: palette.themeDarker,\n          },\n          '&:disabled': {\n            backgroundColor: palette.neutralTertiaryAlt,\n          },\n        },\n      },\n    ],\n\n    descriptiveOverflowButton: [\n      classNames.descriptiveOverflowButton,\n      getFocusStyle(theme, { inset: -1 }),\n      ItemButtonStyles,\n      {\n        fontSize: fonts.small.fontSize,\n        color: palette.neutralSecondary,\n        backgroundColor: palette.neutralLighter,\n        marginLeft: `${spacingAroundItemButton * 2}px`,\n      },\n    ],\n\n    itemButton: [classNames.itemButton, ItemButtonStyles],\n\n    itemContainer: [\n      classNames.itemContainer,\n      {\n        display: 'flex',\n      },\n    ],\n\n    members: [\n      classNames.members,\n      {\n        display: 'flex',\n        overflow: 'hidden',\n        listStyleType: 'none',\n        padding: 0,\n        margin: `-${spacingAroundItemButton}px`,\n      },\n    ],\n\n    member: [\n      classNames.member,\n      {\n        display: 'inline-flex',\n        flex: '0 0 auto',\n        margin: `${spacingAroundItemButton}px`,\n      },\n    ],\n\n    overflowButton: [\n      classNames.overflowButton,\n      getFocusStyle(theme, { inset: -1 }),\n      ItemButtonStyles,\n      {\n        fontSize: fonts.medium.fontSize,\n        color: palette.neutralSecondary,\n        backgroundColor: palette.neutralLighter,\n        marginLeft: `${spacingAroundItemButton * 2}px`,\n      },\n    ],\n\n    overflowInitialsIcon: [\n      {\n        color: palette.neutralPrimary,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n          },\n        },\n      },\n    ],\n\n    screenReaderOnly: hiddenContentStyle,\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}