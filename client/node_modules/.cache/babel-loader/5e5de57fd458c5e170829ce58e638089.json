{"ast":null,"code":"import { FontSizes, FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\n// Fallback fonts, if specified system or web fonts are unavailable.\nvar FontFamilyFallbacks = \"'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif\";\n// By default, we favor system fonts for the default.\n// All localized fonts use a web font and never use the system font.\nvar defaultFontFamily = \"'Segoe UI', '\" + LocalizedFontNames.WestEuropean + \"'\";\n// Mapping of language prefix to to font family.\nvar LanguageToFontMap = {\n  ar: LocalizedFontFamilies.Arabic,\n  bg: LocalizedFontFamilies.Cyrillic,\n  cs: LocalizedFontFamilies.EastEuropean,\n  el: LocalizedFontFamilies.Greek,\n  et: LocalizedFontFamilies.EastEuropean,\n  he: LocalizedFontFamilies.Hebrew,\n  hi: LocalizedFontFamilies.Hindi,\n  hr: LocalizedFontFamilies.EastEuropean,\n  hu: LocalizedFontFamilies.EastEuropean,\n  ja: LocalizedFontFamilies.Japanese,\n  kk: LocalizedFontFamilies.EastEuropean,\n  ko: LocalizedFontFamilies.Korean,\n  lt: LocalizedFontFamilies.EastEuropean,\n  lv: LocalizedFontFamilies.EastEuropean,\n  pl: LocalizedFontFamilies.EastEuropean,\n  ru: LocalizedFontFamilies.Cyrillic,\n  sk: LocalizedFontFamilies.EastEuropean,\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\n  th: LocalizedFontFamilies.Thai,\n  tr: LocalizedFontFamilies.EastEuropean,\n  uk: LocalizedFontFamilies.Cyrillic,\n  vi: LocalizedFontFamilies.Vietnamese,\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional,\n  hy: LocalizedFontFamilies.Armenian,\n  ka: LocalizedFontFamilies.Georgian\n};\nfunction _fontFamilyWithFallbacks(fontFamily) {\n  return fontFamily + \", \" + FontFamilyFallbacks;\n}\n/**\n * If there is a localized font for this language, return that.\n * Returns undefined if there is no localized font for that language.\n */\nfunction _getLocalizedFontFamily(language) {\n  for (var lang in LanguageToFontMap) {\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return LanguageToFontMap[lang];\n    }\n  }\n  return defaultFontFamily;\n}\nfunction _createFont(size, weight, fontFamily) {\n  return {\n    fontFamily: fontFamily,\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    fontSize: size,\n    fontWeight: weight\n  };\n}\nexport function createFontStyles(localeCode) {\n  var localizedFont = _getLocalizedFontFamily(localeCode);\n  var fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\n  var fontStyles = {\n    tiny: _createFont(FontSizes.mini, FontWeights.regular, fontFamilyWithFallback),\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\n    large: _createFont(FontSizes.large, FontWeights.regular, fontFamilyWithFallback),\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xLargePlus: _createFont(FontSizes.xLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xxLargePlus: _createFont(FontSizes.xxLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.semibold, fontFamilyWithFallback),\n    mega: _createFont(FontSizes.mega, FontWeights.semibold, fontFamilyWithFallback)\n  };\n  return fontStyles;\n}","map":{"version":3,"sources":["fonts/createFontStyles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IFontWeight, IRawStyle } from '@uifabric/merge-styles';\nimport { IFontStyles } from '../types/IFontStyles';\nimport { FontSizes, FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\n\n// Fallback fonts, if specified system or web fonts are unavailable.\nconst FontFamilyFallbacks = `'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif`;\n\n// By default, we favor system fonts for the default.\n// All localized fonts use a web font and never use the system font.\nconst defaultFontFamily = `'Segoe UI', '${LocalizedFontNames.WestEuropean}'`;\n\n// Mapping of language prefix to to font family.\nconst LanguageToFontMap = {\n  ar: LocalizedFontFamilies.Arabic,\n  bg: LocalizedFontFamilies.Cyrillic,\n  cs: LocalizedFontFamilies.EastEuropean,\n  el: LocalizedFontFamilies.Greek,\n  et: LocalizedFontFamilies.EastEuropean,\n  he: LocalizedFontFamilies.Hebrew,\n  hi: LocalizedFontFamilies.Hindi,\n  hr: LocalizedFontFamilies.EastEuropean,\n  hu: LocalizedFontFamilies.EastEuropean,\n  ja: LocalizedFontFamilies.Japanese,\n  kk: LocalizedFontFamilies.EastEuropean,\n  ko: LocalizedFontFamilies.Korean,\n  lt: LocalizedFontFamilies.EastEuropean,\n  lv: LocalizedFontFamilies.EastEuropean,\n  pl: LocalizedFontFamilies.EastEuropean,\n  ru: LocalizedFontFamilies.Cyrillic,\n  sk: LocalizedFontFamilies.EastEuropean,\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\n  th: LocalizedFontFamilies.Thai,\n  tr: LocalizedFontFamilies.EastEuropean,\n  uk: LocalizedFontFamilies.Cyrillic,\n  vi: LocalizedFontFamilies.Vietnamese,\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional,\n  hy: LocalizedFontFamilies.Armenian,\n  ka: LocalizedFontFamilies.Georgian,\n};\n\nfunction _fontFamilyWithFallbacks(fontFamily: string): string {\n  return `${fontFamily}, ${FontFamilyFallbacks}`;\n}\n\n/**\n * If there is a localized font for this language, return that.\n * Returns undefined if there is no localized font for that language.\n */\nfunction _getLocalizedFontFamily(language: string | null): string {\n  for (const lang in LanguageToFontMap) {\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return (LanguageToFontMap as any)[lang];\n    }\n  }\n\n  return defaultFontFamily;\n}\n\nfunction _createFont(size: string, weight: IFontWeight, fontFamily: string): IRawStyle {\n  return {\n    fontFamily: fontFamily,\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    fontSize: size,\n    fontWeight: weight,\n  };\n}\n\nexport function createFontStyles(localeCode: string | null): IFontStyles {\n  const localizedFont = _getLocalizedFontFamily(localeCode);\n  const fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\n\n  const fontStyles = {\n    tiny: _createFont(FontSizes.mini, FontWeights.regular, fontFamilyWithFallback),\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\n    large: _createFont(FontSizes.large, FontWeights.regular, fontFamilyWithFallback),\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xLargePlus: _createFont(FontSizes.xLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xxLargePlus: _createFont(FontSizes.xxLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.semibold, fontFamilyWithFallback),\n    mega: _createFont(FontSizes.mega, FontWeights.semibold, fontFamilyWithFallback),\n  };\n\n  return fontStyles;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}