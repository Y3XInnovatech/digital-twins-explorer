{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { buttonProperties, classNamesFunction, getId, getNativeProps, initializeComponentRef } from '../../Utilities';\nimport { OverflowButtonType } from './Facepile.types';\nimport { FacepileButton } from './FacepileButton';\nimport { Icon } from '../../Icon';\nimport { Persona } from '../../Persona';\nimport { PersonaCoin, PersonaSize, PersonaInitialsColor } from '../../PersonaCoin';\nvar getClassNames = classNamesFunction();\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Component-Styling)\n */\nvar FacepileBase = /** @class */function (_super) {\n  __extends(FacepileBase, _super);\n  function FacepileBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._classNames = getClassNames(_this.props.styles, {\n      theme: _this.props.theme,\n      className: _this.props.className\n    });\n    _this._getPersonaControl = function (persona) {\n      var _a = _this.props,\n        getPersonaProps = _a.getPersonaProps,\n        personaSize = _a.personaSize;\n      var personaStyles = {\n        details: {\n          flex: '1 0 auto'\n        }\n      };\n      return React.createElement(Persona, __assign({\n        imageInitials: persona.imageInitials,\n        imageUrl: persona.imageUrl,\n        initialsColor: persona.initialsColor,\n        allowPhoneInitials: persona.allowPhoneInitials,\n        text: persona.personaName,\n        size: personaSize\n      }, getPersonaProps ? getPersonaProps(persona) : null, {\n        styles: personaStyles\n      }));\n    };\n    _this._getPersonaCoinControl = function (persona) {\n      var _a = _this.props,\n        getPersonaProps = _a.getPersonaProps,\n        personaSize = _a.personaSize;\n      return React.createElement(PersonaCoin, __assign({\n        imageInitials: persona.imageInitials,\n        imageUrl: persona.imageUrl,\n        initialsColor: persona.initialsColor,\n        allowPhoneInitials: persona.allowPhoneInitials,\n        text: persona.personaName,\n        size: personaSize\n      }, getPersonaProps ? getPersonaProps(persona) : null));\n    };\n    initializeComponentRef(_this);\n    _this._ariaDescriptionId = getId();\n    return _this;\n  }\n  FacepileBase.prototype.render = function () {\n    var overflowButtonProps = this.props.overflowButtonProps;\n    var _a = this.props,\n      chevronButtonProps = _a.chevronButtonProps,\n      // eslint-disable-line deprecation/deprecation\n      maxDisplayablePersonas = _a.maxDisplayablePersonas,\n      personas = _a.personas,\n      overflowPersonas = _a.overflowPersonas,\n      showAddButton = _a.showAddButton,\n      ariaLabel = _a.ariaLabel;\n    var _classNames = this._classNames;\n    // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n    var numPersonasToShow = typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length;\n    // Added for deprecating chevronButtonProps.  Can remove after v1.0\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n    var hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    var personasPrimary = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    var personasOverflow = (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n    return React.createElement(\"div\", {\n      className: _classNames.root\n    }, this.onRenderAriaDescription(), React.createElement(\"div\", {\n      className: _classNames.itemContainer\n    }, showAddButton ? this._getAddNewElement() : null, React.createElement(\"ul\", {\n      className: _classNames.members,\n      \"aria-label\": ariaLabel\n    }, this._onRenderVisiblePersonas(personasPrimary, personasOverflow.length === 0 && personas.length === 1)), overflowButtonProps ? this._getOverflowElement(personasOverflow) : null));\n  };\n  FacepileBase.prototype.onRenderAriaDescription = function () {\n    var ariaDescription = this.props.ariaDescription;\n    var _classNames = this._classNames;\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return ariaDescription && React.createElement(\"span\", {\n      className: _classNames.screenReaderOnly,\n      id: this._ariaDescriptionId\n    }, ariaDescription);\n  };\n  FacepileBase.prototype._onRenderVisiblePersonas = function (personas, singlePersona) {\n    var _this = this;\n    var _a = this.props,\n      _b = _a.onRenderPersona,\n      onRenderPersona = _b === void 0 ? this._getPersonaControl : _b,\n      _c = _a.onRenderPersonaCoin,\n      onRenderPersonaCoin = _c === void 0 ? this._getPersonaCoinControl : _c;\n    return personas.map(function (persona, index) {\n      var personaControl = singlePersona ? onRenderPersona(persona, _this._getPersonaControl) : onRenderPersonaCoin(persona, _this._getPersonaCoinControl);\n      return React.createElement(\"li\", {\n        key: (singlePersona ? 'persona' : 'personaCoin') + \"-\" + index,\n        className: _this._classNames.member\n      }, persona.onClick ? _this._getElementWithOnClickEvent(personaControl, persona, index) : _this._getElementWithoutOnClickEvent(personaControl, persona, index));\n    });\n  };\n  FacepileBase.prototype._getElementWithOnClickEvent = function (personaControl, persona, index) {\n    var keytipProps = persona.keytipProps;\n    return React.createElement(FacepileButton, __assign({}, getNativeProps(persona, buttonProperties), this._getElementProps(persona, index), {\n      keytipProps: keytipProps,\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: this._onPersonaClick.bind(this, persona)\n    }), personaControl);\n  };\n  FacepileBase.prototype._getElementWithoutOnClickEvent = function (personaControl, persona, index) {\n    return React.createElement(\"div\", __assign({}, getNativeProps(persona, buttonProperties), this._getElementProps(persona, index)), personaControl);\n  };\n  FacepileBase.prototype._getElementProps = function (persona, index) {\n    var _classNames = this._classNames;\n    return {\n      key: (persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      className: _classNames.itemButton,\n      title: persona.personaName,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona)\n    };\n  };\n  FacepileBase.prototype._getOverflowElement = function (personasOverflow) {\n    switch (this.props.overflowButtonType) {\n      case OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n      case OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n      case OverflowButtonType.more:\n        return this._getIconElement('More');\n      default:\n        return null;\n    }\n  };\n  FacepileBase.prototype._getDescriptiveOverflowElement = function (personasOverflow) {\n    var personaSize = this.props.personaSize;\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n    var personaNames = personasOverflow.map(function (p) {\n      return p.personaName;\n    }).join(', ');\n    var overflowButtonProps = __assign({\n      title: personaNames\n    }, this.props.overflowButtonProps);\n    var numPersonasNotPictured = Math.max(personasOverflow.length, 0);\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, overflowButtonProps, {\n      ariaDescription: overflowButtonProps.title,\n      className: _classNames.descriptiveOverflowButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitialsNotPictured(numPersonasNotPictured),\n      initialsColor: PersonaInitialsColor.transparent\n    }));\n  };\n  FacepileBase.prototype._getIconElement = function (icon) {\n    var _a = this.props,\n      overflowButtonProps = _a.overflowButtonProps,\n      personaSize = _a.personaSize;\n    var overflowInitialsIcon = true;\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, overflowButtonProps, {\n      className: _classNames.overflowButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitials(icon, overflowInitialsIcon),\n      initialsColor: PersonaInitialsColor.transparent\n    }));\n  };\n  FacepileBase.prototype._getAddNewElement = function () {\n    var _a = this.props,\n      addButtonProps = _a.addButtonProps,\n      personaSize = _a.personaSize;\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, addButtonProps, {\n      className: _classNames.addButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitials('AddFriend')\n    }));\n  };\n  FacepileBase.prototype._onPersonaClick = function (persona, ev) {\n    persona.onClick(ev, persona);\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n  FacepileBase.prototype._onPersonaMouseMove = function (persona, ev) {\n    if (persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  };\n  FacepileBase.prototype._onPersonaMouseOut = function (persona, ev) {\n    if (persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  };\n  FacepileBase.prototype._renderInitials = function (iconName, overflowButton) {\n    var _classNames = this._classNames;\n    return function () {\n      return React.createElement(Icon, {\n        iconName: iconName,\n        className: overflowButton ? _classNames.overflowInitialsIcon : ''\n      });\n    };\n  };\n  FacepileBase.prototype._renderInitialsNotPictured = function (numPersonasNotPictured) {\n    var _classNames = this._classNames;\n    return function () {\n      return React.createElement(\"span\", {\n        className: _classNames.overflowInitialsIcon\n      }, numPersonasNotPictured < 100 ? '+' + numPersonasNotPictured : '99+');\n    };\n  };\n  FacepileBase.defaultProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaSize.size32\n  };\n  return FacepileBase;\n}(React.Component);\nexport { FacepileBase };","map":{"version":3,"sources":["components/Facepile/Facepile.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { buttonProperties, classNamesFunction, getId, getNativeProps, initializeComponentRef } from '../../Utilities';\nimport {\n  IFacepileProps,\n  IFacepilePersona,\n  IFacepileStyleProps,\n  IFacepileStyles,\n  OverflowButtonType,\n} from './Facepile.types';\nimport { FacepileButton } from './FacepileButton';\nimport { Icon } from '../../Icon';\nimport { Persona, IPersonaStyles } from '../../Persona';\nimport { PersonaCoin, PersonaSize, PersonaInitialsColor } from '../../PersonaCoin';\nimport { IButtonProps } from '../Button/Button.types';\n\nconst getClassNames = classNamesFunction<IFacepileStyleProps, IFacepileStyles>();\n\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Component-Styling)\n */\nexport class FacepileBase extends React.Component<IFacepileProps, {}> {\n  public static defaultProps: IFacepileProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaSize.size32,\n  };\n\n  private _ariaDescriptionId: string;\n\n  private _classNames = getClassNames(this.props.styles, {\n    theme: this.props.theme!,\n    className: this.props.className,\n  });\n\n  constructor(props: IFacepileProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._ariaDescriptionId = getId();\n  }\n\n  public render(): JSX.Element {\n    let { overflowButtonProps } = this.props;\n    const {\n      chevronButtonProps, // eslint-disable-line deprecation/deprecation\n      maxDisplayablePersonas,\n      personas,\n      overflowPersonas,\n      showAddButton,\n      ariaLabel,\n    } = this.props;\n\n    const { _classNames } = this;\n\n    // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n    const numPersonasToShow: number =\n      typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length;\n\n    // Added for deprecating chevronButtonProps.  Can remove after v1.0\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n\n    const hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    const personasPrimary: IFacepilePersona[] = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    const personasOverflow: IFacepilePersona[] =\n      (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n\n    return (\n      <div className={_classNames.root}>\n        {this.onRenderAriaDescription()}\n        <div className={_classNames.itemContainer}>\n          {showAddButton ? this._getAddNewElement() : null}\n          <ul className={_classNames.members} aria-label={ariaLabel}>\n            {this._onRenderVisiblePersonas(personasPrimary, personasOverflow.length === 0 && personas.length === 1)}\n          </ul>\n          {overflowButtonProps ? this._getOverflowElement(personasOverflow) : null}\n        </div>\n      </div>\n    );\n  }\n\n  protected onRenderAriaDescription() {\n    const { ariaDescription } = this.props;\n\n    const { _classNames } = this;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return (\n      ariaDescription && (\n        <span className={_classNames.screenReaderOnly} id={this._ariaDescriptionId}>\n          {ariaDescription}\n        </span>\n      )\n    );\n  }\n\n  private _onRenderVisiblePersonas(personas: IFacepilePersona[], singlePersona: boolean): JSX.Element[] {\n    const { onRenderPersona = this._getPersonaControl, onRenderPersonaCoin = this._getPersonaCoinControl } = this.props;\n    return personas.map((persona: IFacepilePersona, index: number) => {\n      const personaControl: JSX.Element | null = singlePersona\n        ? onRenderPersona(persona, this._getPersonaControl)\n        : onRenderPersonaCoin(persona, this._getPersonaCoinControl);\n      return (\n        <li key={`${singlePersona ? 'persona' : 'personaCoin'}-${index}`} className={this._classNames.member}>\n          {persona.onClick\n            ? this._getElementWithOnClickEvent(personaControl, persona, index)\n            : this._getElementWithoutOnClickEvent(personaControl, persona, index)}\n        </li>\n      );\n    });\n  }\n\n  private _getPersonaControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    const personaStyles: Partial<IPersonaStyles> = {\n      details: {\n        flex: '1 0 auto',\n      },\n    };\n\n    return (\n      <Persona\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n        styles={personaStyles}\n      />\n    );\n  };\n\n  private _getPersonaCoinControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    return (\n      <PersonaCoin\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n      />\n    );\n  };\n\n  private _getElementWithOnClickEvent(\n    personaControl: JSX.Element | null,\n    persona: IFacepilePersona,\n    index: number,\n  ): JSX.Element {\n    const { keytipProps } = persona;\n    return (\n      <FacepileButton\n        {...getNativeProps(persona, buttonProperties)}\n        {...this._getElementProps(persona, index)}\n        keytipProps={keytipProps}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={this._onPersonaClick.bind(this, persona)}\n      >\n        {personaControl}\n      </FacepileButton>\n    );\n  }\n\n  private _getElementWithoutOnClickEvent(\n    personaControl: JSX.Element | null,\n    persona: IFacepilePersona,\n    index: number,\n  ): JSX.Element {\n    return (\n      <div {...getNativeProps(persona, buttonProperties)} {...this._getElementProps(persona, index)}>\n        {personaControl}\n      </div>\n    );\n  }\n\n  private _getElementProps(\n    persona: IFacepilePersona,\n    index: number,\n  ): { key: React.Key; ['data-is-focusable']: boolean } & React.HTMLAttributes<HTMLDivElement> {\n    const { _classNames } = this;\n\n    return {\n      key: (persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      className: _classNames.itemButton,\n      title: persona.personaName,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona),\n    };\n  }\n\n  private _getOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    switch (this.props.overflowButtonType) {\n      case OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n      case OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n      case OverflowButtonType.more:\n        return this._getIconElement('More');\n      default:\n        return null;\n    }\n  }\n\n  private _getDescriptiveOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    const { personaSize } = this.props;\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n\n    const personaNames: string = personasOverflow.map((p: IFacepilePersona) => p.personaName).join(', ');\n    const overflowButtonProps: IButtonProps = { ...{ title: personaNames }, ...this.props.overflowButtonProps };\n    const numPersonasNotPictured: number = Math.max(personasOverflow.length, 0);\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton\n        {...overflowButtonProps}\n        ariaDescription={overflowButtonProps.title}\n        className={_classNames.descriptiveOverflowButton}\n      >\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitialsNotPictured(numPersonasNotPictured)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n\n  private _getIconElement(icon: string): JSX.Element {\n    const { overflowButtonProps, personaSize } = this.props;\n    const overflowInitialsIcon = true;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...overflowButtonProps} className={_classNames.overflowButton}>\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitials(icon, overflowInitialsIcon)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n  private _getAddNewElement(): JSX.Element {\n    const { addButtonProps, personaSize } = this.props;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...addButtonProps} className={_classNames.addButton}>\n        <PersonaCoin size={personaSize} onRenderInitials={this._renderInitials('AddFriend')} />\n      </FacepileButton>\n    );\n  }\n\n  private _onPersonaClick(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    persona.onClick!(ev, persona);\n    ev!.preventDefault();\n    ev!.stopPropagation();\n  }\n\n  private _onPersonaMouseMove(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  }\n\n  private _onPersonaMouseOut(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  }\n\n  private _renderInitials(iconName: string, overflowButton?: boolean): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return <Icon iconName={iconName} className={overflowButton ? _classNames.overflowInitialsIcon : ''} />;\n    };\n  }\n\n  private _renderInitialsNotPictured(numPersonasNotPictured: number): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return (\n        <span className={_classNames.overflowInitialsIcon}>\n          {numPersonasNotPictured < 100 ? '+' + numPersonasNotPictured : '99+'}\n        </span>\n      );\n    };\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}