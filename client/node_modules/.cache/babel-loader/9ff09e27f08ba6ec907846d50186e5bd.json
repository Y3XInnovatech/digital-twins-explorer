{"ast":null,"code":"import { __assign } from \"tslib\";\n/** Generates all the semantic slot colors based on the theme so far\n * We'll use these as fallbacks for semantic slots that the passed in theme did not define.\n * The caller must still mix in the customized semantic slots at the end.\n */\nexport function makeSemanticColors(p, e, s, isInverted, depComments) {\n  if (depComments === void 0) {\n    depComments = false;\n  }\n  var semanticColors = __assign({\n    primaryButtonBorder: 'transparent',\n    errorText: !isInverted ? '#a4262c' : '#F1707B',\n    messageText: !isInverted ? '#323130' : '#F3F2F1',\n    messageLink: !isInverted ? '#005A9E' : '#6CB8F6',\n    messageLinkHovered: !isInverted ? '#004578' : '#82C7FF',\n    infoIcon: !isInverted ? '#605e5c' : '#C8C6C4',\n    errorIcon: !isInverted ? '#A80000' : '#F1707B',\n    blockingIcon: !isInverted ? '#FDE7E9' : '#442726',\n    warningIcon: !isInverted ? '#797775' : '#C8C6C4',\n    severeWarningIcon: !isInverted ? '#D83B01' : '#FCE100',\n    successIcon: !isInverted ? '#107C10' : '#92C353',\n    infoBackground: !isInverted ? '#f3f2f1' : '#323130',\n    errorBackground: !isInverted ? '#FDE7E9' : '#442726',\n    blockingBackground: !isInverted ? '#FDE7E9' : '#442726',\n    warningBackground: !isInverted ? '#FFF4CE' : '#433519',\n    severeWarningBackground: !isInverted ? '#FED9CC' : '#4F2A0F',\n    successBackground: !isInverted ? '#DFF6DD' : '#393D1B',\n    // deprecated\n    warningHighlight: !isInverted ? '#ffb900' : '#fff100',\n    successText: !isInverted ? '#107C10' : '#92c353'\n  }, s);\n  var fullSemanticColors = getSemanticColors(p, e, semanticColors, isInverted);\n  return _fixDeprecatedSlots(fullSemanticColors, depComments);\n}\n/**\n * Map partial platte and effects to partial semantic colors.\n */\nexport function getSemanticColors(p, e, s, isInverted, depComments) {\n  if (depComments === void 0) {\n    depComments = false;\n  }\n  var _a, _b, _c;\n  var result = {};\n  // map palette\n  var _d = p || {},\n    white = _d.white,\n    black = _d.black,\n    themePrimary = _d.themePrimary,\n    themeDark = _d.themeDark,\n    themeDarker = _d.themeDarker,\n    themeDarkAlt = _d.themeDarkAlt,\n    themeLighter = _d.themeLighter,\n    neutralLight = _d.neutralLight,\n    neutralLighter = _d.neutralLighter,\n    neutralDark = _d.neutralDark,\n    neutralQuaternary = _d.neutralQuaternary,\n    neutralQuaternaryAlt = _d.neutralQuaternaryAlt,\n    neutralPrimary = _d.neutralPrimary,\n    neutralSecondary = _d.neutralSecondary,\n    neutralSecondaryAlt = _d.neutralSecondaryAlt,\n    neutralTertiary = _d.neutralTertiary,\n    neutralTertiaryAlt = _d.neutralTertiaryAlt,\n    neutralLighterAlt = _d.neutralLighterAlt,\n    accent = _d.accent;\n  if (white) {\n    result.bodyBackground = white;\n    result.bodyFrameBackground = white;\n    result.accentButtonText = white;\n    result.buttonBackground = white;\n    result.primaryButtonText = white;\n    result.primaryButtonTextHovered = white;\n    result.primaryButtonTextPressed = white;\n    result.inputBackground = white;\n    result.inputForegroundChecked = white;\n    result.listBackground = white;\n    result.menuBackground = white;\n    result.cardStandoutBackground = white;\n  }\n  if (black) {\n    result.bodyTextChecked = black;\n    result.buttonTextCheckedHovered = black;\n  }\n  if (themePrimary) {\n    result.link = themePrimary;\n    result.primaryButtonBackground = themePrimary;\n    result.inputBackgroundChecked = themePrimary;\n    result.inputIcon = themePrimary;\n    result.inputFocusBorderAlt = themePrimary;\n    result.menuIcon = themePrimary;\n    result.menuHeader = themePrimary;\n    result.accentButtonBackground = themePrimary;\n  }\n  if (themeDark) {\n    result.primaryButtonBackgroundPressed = themeDark;\n    result.inputBackgroundCheckedHovered = themeDark;\n    result.inputIconHovered = themeDark;\n  }\n  if (themeDarker) {\n    result.linkHovered = themeDarker;\n  }\n  if (themeDarkAlt) {\n    result.primaryButtonBackgroundHovered = themeDarkAlt;\n  }\n  if (themeLighter) {\n    result.inputPlaceholderBackgroundChecked = themeLighter;\n  }\n  if (neutralLight) {\n    result.bodyBackgroundChecked = neutralLight;\n    result.bodyFrameDivider = neutralLight;\n    result.bodyDivider = neutralLight;\n    result.variantBorder = neutralLight;\n    result.buttonBackgroundCheckedHovered = neutralLight;\n    result.buttonBackgroundPressed = neutralLight;\n    result.listItemBackgroundChecked = neutralLight;\n    result.listHeaderBackgroundPressed = neutralLight;\n    result.menuItemBackgroundPressed = neutralLight;\n    // eslint-disable-next-line deprecation/deprecation\n    result.menuItemBackgroundChecked = neutralLight;\n  }\n  if (neutralLighter) {\n    result.bodyBackgroundHovered = neutralLighter;\n    result.buttonBackgroundHovered = neutralLighter;\n    result.buttonBackgroundDisabled = neutralLighter;\n    result.buttonBorderDisabled = neutralLighter;\n    result.primaryButtonBackgroundDisabled = neutralLighter;\n    result.disabledBackground = neutralLighter;\n    result.listItemBackgroundHovered = neutralLighter;\n    result.listHeaderBackgroundHovered = neutralLighter;\n    result.menuItemBackgroundHovered = neutralLighter;\n  }\n  if (neutralQuaternary) {\n    result.primaryButtonTextDisabled = neutralQuaternary;\n    result.disabledSubtext = neutralQuaternary;\n  }\n  if (neutralQuaternaryAlt) {\n    result.listItemBackgroundCheckedHovered = neutralQuaternaryAlt;\n  }\n  if (neutralTertiary) {\n    result.disabledBodyText = neutralTertiary;\n    result.variantBorderHovered = ((_a = s) === null || _a === void 0 ? void 0 : _a.variantBorderHovered) || neutralTertiary;\n    result.buttonTextDisabled = neutralTertiary;\n    result.inputIconDisabled = neutralTertiary;\n    result.disabledText = neutralTertiary;\n  }\n  if (neutralPrimary) {\n    result.bodyText = neutralPrimary;\n    result.actionLink = neutralPrimary;\n    result.buttonText = neutralPrimary;\n    result.inputBorderHovered = neutralPrimary;\n    result.inputText = neutralPrimary;\n    result.listText = neutralPrimary;\n    result.menuItemText = neutralPrimary;\n  }\n  if (neutralLighterAlt) {\n    result.bodyStandoutBackground = neutralLighterAlt;\n    result.defaultStateBackground = neutralLighterAlt;\n  }\n  if (neutralDark) {\n    result.actionLinkHovered = neutralDark;\n    result.buttonTextHovered = neutralDark;\n    result.buttonTextChecked = neutralDark;\n    result.buttonTextPressed = neutralDark;\n    result.inputTextHovered = neutralDark;\n    result.menuItemTextHovered = neutralDark;\n  }\n  if (neutralSecondary) {\n    result.bodySubtext = neutralSecondary;\n    result.focusBorder = neutralSecondary;\n    result.inputBorder = neutralSecondary;\n    result.smallInputBorder = neutralSecondary;\n    result.inputPlaceholderText = neutralSecondary;\n  }\n  if (neutralSecondaryAlt) {\n    result.buttonBorder = neutralSecondaryAlt;\n  }\n  if (neutralTertiaryAlt) {\n    result.disabledBodySubtext = neutralTertiaryAlt;\n    result.disabledBorder = neutralTertiaryAlt;\n    result.buttonBackgroundChecked = neutralTertiaryAlt;\n    result.menuDivider = neutralTertiaryAlt;\n  }\n  if (accent) {\n    result.accentButtonBackground = accent;\n  }\n  // map effects\n  if ((_b = e) === null || _b === void 0 ? void 0 : _b.elevation4) {\n    result.cardShadow = e.elevation4;\n  }\n  if (!isInverted && ((_c = e) === null || _c === void 0 ? void 0 : _c.elevation8)) {\n    result.cardShadowHovered = e.elevation8;\n  } else if (result.variantBorderHovered) {\n    result.cardShadowHovered = '0 0 1px ' + result.variantBorderHovered;\n  }\n  result = __assign(__assign({}, result), s);\n  return result;\n}\nfunction _fixDeprecatedSlots(s, depComments) {\n  // Add @deprecated tag as comment if enabled\n  var dep = '';\n  if (depComments === true) {\n    dep = ' /* @deprecated */';\n  }\n  /* eslint-disable deprecation/deprecation */\n  s.listTextColor = s.listText + dep;\n  s.menuItemBackgroundChecked += dep;\n  s.warningHighlight += dep;\n  s.warningText = s.messageText + dep;\n  s.successText += dep;\n  /* eslint-enable deprecation/deprecation */\n  return s;\n}","map":{"version":3,"sources":["utilities/makeSemanticColors.ts"],"names":[],"mappings":"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","sourcesContent":["import { IEffects, IPalette, ISemanticColors } from '../types/index';\n\n/** Generates all the semantic slot colors based on the theme so far\n * We'll use these as fallbacks for semantic slots that the passed in theme did not define.\n * The caller must still mix in the customized semantic slots at the end.\n */\nexport function makeSemanticColors(\n  p: IPalette,\n  e: IEffects,\n  s: Partial<ISemanticColors> | undefined,\n  isInverted: boolean,\n  depComments: boolean = false,\n): ISemanticColors {\n  const semanticColors: Partial<ISemanticColors> = {\n    primaryButtonBorder: 'transparent',\n\n    errorText: !isInverted ? '#a4262c' : '#F1707B',\n\n    messageText: !isInverted ? '#323130' : '#F3F2F1',\n    messageLink: !isInverted ? '#005A9E' : '#6CB8F6',\n    messageLinkHovered: !isInverted ? '#004578' : '#82C7FF',\n\n    infoIcon: !isInverted ? '#605e5c' : '#C8C6C4',\n    errorIcon: !isInverted ? '#A80000' : '#F1707B',\n    blockingIcon: !isInverted ? '#FDE7E9' : '#442726',\n    warningIcon: !isInverted ? '#797775' : '#C8C6C4',\n    severeWarningIcon: !isInverted ? '#D83B01' : '#FCE100',\n    successIcon: !isInverted ? '#107C10' : '#92C353',\n\n    infoBackground: !isInverted ? '#f3f2f1' : '#323130',\n    errorBackground: !isInverted ? '#FDE7E9' : '#442726',\n    blockingBackground: !isInverted ? '#FDE7E9' : '#442726',\n    warningBackground: !isInverted ? '#FFF4CE' : '#433519',\n    severeWarningBackground: !isInverted ? '#FED9CC' : '#4F2A0F',\n    successBackground: !isInverted ? '#DFF6DD' : '#393D1B',\n\n    // deprecated\n    warningHighlight: !isInverted ? '#ffb900' : '#fff100',\n    successText: !isInverted ? '#107C10' : '#92c353',\n\n    ...s,\n  };\n\n  const fullSemanticColors = getSemanticColors<ISemanticColors>(p, e, semanticColors, isInverted);\n  return _fixDeprecatedSlots(fullSemanticColors, depComments);\n}\n\n/**\n * Map partial platte and effects to partial semantic colors.\n */\nexport function getSemanticColors<TResult = Partial<ISemanticColors>>(\n  p: Partial<IPalette> | undefined,\n  e: Partial<IEffects> | undefined,\n  s: Partial<ISemanticColors> | undefined,\n  isInverted: boolean,\n  depComments: boolean = false,\n): TResult {\n  let result: Partial<ISemanticColors> = {};\n\n  // map palette\n  const {\n    white,\n    black,\n    themePrimary,\n    themeDark,\n    themeDarker,\n    themeDarkAlt,\n    themeLighter,\n    neutralLight,\n    neutralLighter,\n    neutralDark,\n    neutralQuaternary,\n    neutralQuaternaryAlt,\n    neutralPrimary,\n    neutralSecondary,\n    neutralSecondaryAlt,\n    neutralTertiary,\n    neutralTertiaryAlt,\n    neutralLighterAlt,\n    accent,\n  } = p || {};\n\n  if (white) {\n    result.bodyBackground = white;\n    result.bodyFrameBackground = white;\n    result.accentButtonText = white;\n    result.buttonBackground = white;\n    result.primaryButtonText = white;\n    result.primaryButtonTextHovered = white;\n    result.primaryButtonTextPressed = white;\n    result.inputBackground = white;\n    result.inputForegroundChecked = white;\n    result.listBackground = white;\n    result.menuBackground = white;\n    result.cardStandoutBackground = white;\n  }\n  if (black) {\n    result.bodyTextChecked = black;\n    result.buttonTextCheckedHovered = black;\n  }\n  if (themePrimary) {\n    result.link = themePrimary;\n    result.primaryButtonBackground = themePrimary;\n    result.inputBackgroundChecked = themePrimary;\n    result.inputIcon = themePrimary;\n    result.inputFocusBorderAlt = themePrimary;\n    result.menuIcon = themePrimary;\n    result.menuHeader = themePrimary;\n    result.accentButtonBackground = themePrimary;\n  }\n  if (themeDark) {\n    result.primaryButtonBackgroundPressed = themeDark;\n    result.inputBackgroundCheckedHovered = themeDark;\n    result.inputIconHovered = themeDark;\n  }\n  if (themeDarker) {\n    result.linkHovered = themeDarker;\n  }\n  if (themeDarkAlt) {\n    result.primaryButtonBackgroundHovered = themeDarkAlt;\n  }\n  if (themeLighter) {\n    result.inputPlaceholderBackgroundChecked = themeLighter;\n  }\n  if (neutralLight) {\n    result.bodyBackgroundChecked = neutralLight;\n    result.bodyFrameDivider = neutralLight;\n    result.bodyDivider = neutralLight;\n    result.variantBorder = neutralLight;\n    result.buttonBackgroundCheckedHovered = neutralLight;\n    result.buttonBackgroundPressed = neutralLight;\n    result.listItemBackgroundChecked = neutralLight;\n    result.listHeaderBackgroundPressed = neutralLight;\n    result.menuItemBackgroundPressed = neutralLight;\n    // eslint-disable-next-line deprecation/deprecation\n    result.menuItemBackgroundChecked = neutralLight;\n  }\n  if (neutralLighter) {\n    result.bodyBackgroundHovered = neutralLighter;\n    result.buttonBackgroundHovered = neutralLighter;\n    result.buttonBackgroundDisabled = neutralLighter;\n    result.buttonBorderDisabled = neutralLighter;\n    result.primaryButtonBackgroundDisabled = neutralLighter;\n    result.disabledBackground = neutralLighter;\n    result.listItemBackgroundHovered = neutralLighter;\n    result.listHeaderBackgroundHovered = neutralLighter;\n    result.menuItemBackgroundHovered = neutralLighter;\n  }\n  if (neutralQuaternary) {\n    result.primaryButtonTextDisabled = neutralQuaternary;\n    result.disabledSubtext = neutralQuaternary;\n  }\n  if (neutralQuaternaryAlt) {\n    result.listItemBackgroundCheckedHovered = neutralQuaternaryAlt;\n  }\n  if (neutralTertiary) {\n    result.disabledBodyText = neutralTertiary;\n    result.variantBorderHovered = s?.variantBorderHovered || neutralTertiary;\n    result.buttonTextDisabled = neutralTertiary;\n    result.inputIconDisabled = neutralTertiary;\n    result.disabledText = neutralTertiary;\n  }\n  if (neutralPrimary) {\n    result.bodyText = neutralPrimary;\n    result.actionLink = neutralPrimary;\n    result.buttonText = neutralPrimary;\n    result.inputBorderHovered = neutralPrimary;\n    result.inputText = neutralPrimary;\n    result.listText = neutralPrimary;\n    result.menuItemText = neutralPrimary;\n  }\n  if (neutralLighterAlt) {\n    result.bodyStandoutBackground = neutralLighterAlt;\n    result.defaultStateBackground = neutralLighterAlt;\n  }\n  if (neutralDark) {\n    result.actionLinkHovered = neutralDark;\n    result.buttonTextHovered = neutralDark;\n    result.buttonTextChecked = neutralDark;\n    result.buttonTextPressed = neutralDark;\n    result.inputTextHovered = neutralDark;\n    result.menuItemTextHovered = neutralDark;\n  }\n  if (neutralSecondary) {\n    result.bodySubtext = neutralSecondary;\n    result.focusBorder = neutralSecondary;\n    result.inputBorder = neutralSecondary;\n    result.smallInputBorder = neutralSecondary;\n    result.inputPlaceholderText = neutralSecondary;\n  }\n  if (neutralSecondaryAlt) {\n    result.buttonBorder = neutralSecondaryAlt;\n  }\n  if (neutralTertiaryAlt) {\n    result.disabledBodySubtext = neutralTertiaryAlt;\n    result.disabledBorder = neutralTertiaryAlt;\n    result.buttonBackgroundChecked = neutralTertiaryAlt;\n    result.menuDivider = neutralTertiaryAlt;\n  }\n  if (accent) {\n    result.accentButtonBackground = accent;\n  }\n\n  // map effects\n  if (e?.elevation4) {\n    result.cardShadow = e.elevation4;\n  }\n  if (!isInverted && e?.elevation8) {\n    result.cardShadowHovered = e.elevation8;\n  } else if (result.variantBorderHovered) {\n    result.cardShadowHovered = '0 0 1px ' + result.variantBorderHovered;\n  }\n\n  result = {\n    ...result,\n    // mix in customized semantic slots\n    ...s,\n  };\n\n  return result as TResult;\n}\n\nfunction _fixDeprecatedSlots(s: ISemanticColors, depComments: boolean): ISemanticColors {\n  // Add @deprecated tag as comment if enabled\n  let dep = '';\n  if (depComments === true) {\n    dep = ' /* @deprecated */';\n  }\n\n  /* eslint-disable deprecation/deprecation */\n  s.listTextColor = s.listText + dep;\n  s.menuItemBackgroundChecked += dep;\n  s.warningHighlight += dep;\n  s.warningText = s.messageText + dep;\n  s.successText += dep;\n  /* eslint-enable deprecation/deprecation */\n  return s;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}