{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { getRTL, getInitials, styled } from '../../../Utilities';\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\nimport { ValidationState } from '../BasePicker.types';\nimport { PeoplePickerItem } from './PeoplePickerItems/PeoplePickerItem';\nimport { PeoplePickerItemSuggestion } from './PeoplePickerItems/PeoplePickerItemSuggestion';\nimport { getStyles } from '../BasePicker.styles';\n/**\n * {@docCategory PeoplePicker}\n */\nvar BasePeoplePicker = /** @class */function (_super) {\n  __extends(BasePeoplePicker, _super);\n  function BasePeoplePicker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return BasePeoplePicker;\n}(BasePicker);\nexport { BasePeoplePicker };\n/**\n * {@docCategory PeoplePicker}\n */\nvar MemberListPeoplePicker = /** @class */function (_super) {\n  __extends(MemberListPeoplePicker, _super);\n  function MemberListPeoplePicker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return MemberListPeoplePicker;\n}(BasePickerListBelow);\nexport { MemberListPeoplePicker };\n/**\n * Standard People Picker.\n * {@docCategory PeoplePicker}\n */\nvar NormalPeoplePickerBase = /** @class */function (_super) {\n  __extends(NormalPeoplePickerBase, _super);\n  function NormalPeoplePickerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** Default props for NormalPeoplePicker. */\n  NormalPeoplePickerBase.defaultProps = {\n    onRenderItem: function (props) {\n      return React.createElement(PeoplePickerItem, __assign({}, props));\n    },\n    onRenderSuggestionsItem: function (personaProps, suggestionsProps) {\n      return React.createElement(PeoplePickerItemSuggestion, {\n        personaProps: personaProps,\n        suggestionsProps: suggestionsProps\n      });\n    },\n    createGenericItem: createGenericItem\n  };\n  return NormalPeoplePickerBase;\n}(BasePeoplePicker);\nexport { NormalPeoplePickerBase };\n/**\n * Compact layout. It uses personas without secondary text when displaying search results.\n * {@docCategory PeoplePicker}\n */\nvar CompactPeoplePickerBase = /** @class */function (_super) {\n  __extends(CompactPeoplePickerBase, _super);\n  function CompactPeoplePickerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** Default props for CompactPeoplePicker. */\n  CompactPeoplePickerBase.defaultProps = {\n    onRenderItem: function (props) {\n      return React.createElement(PeoplePickerItem, __assign({}, props));\n    },\n    onRenderSuggestionsItem: function (personaProps, suggestionsProps) {\n      return React.createElement(PeoplePickerItemSuggestion, {\n        personaProps: personaProps,\n        suggestionsProps: suggestionsProps,\n        compact: true\n      });\n    },\n    createGenericItem: createGenericItem\n  };\n  return CompactPeoplePickerBase;\n}(BasePeoplePicker);\nexport { CompactPeoplePickerBase };\n/**\n * MemberList layout. The selected people show up below the search box.\n * {@docCategory PeoplePicker}\n */\nvar ListPeoplePickerBase = /** @class */function (_super) {\n  __extends(ListPeoplePickerBase, _super);\n  function ListPeoplePickerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** Default props for ListPeoplePicker. */\n  ListPeoplePickerBase.defaultProps = {\n    onRenderItem: function (props) {\n      return React.createElement(PeoplePickerItem, __assign({}, props));\n    },\n    onRenderSuggestionsItem: function (personaProps, suggestionsProps) {\n      return React.createElement(PeoplePickerItemSuggestion, {\n        personaProps: personaProps,\n        suggestionsProps: suggestionsProps\n      });\n    },\n    createGenericItem: createGenericItem\n  };\n  return ListPeoplePickerBase;\n}(MemberListPeoplePicker);\nexport { ListPeoplePickerBase };\n/**\n * {@docCategory PeoplePicker}\n */\nexport function createGenericItem(name, currentValidationState) {\n  var personaToConvert = {\n    key: name,\n    primaryText: name,\n    imageInitials: '!',\n    ValidationState: currentValidationState\n  };\n  if (currentValidationState !== ValidationState.warning) {\n    personaToConvert.imageInitials = getInitials(name, getRTL());\n  }\n  return personaToConvert;\n}\nexport var NormalPeoplePicker = styled(NormalPeoplePickerBase, getStyles, undefined, {\n  scope: 'NormalPeoplePicker'\n});\nexport var CompactPeoplePicker = styled(CompactPeoplePickerBase, getStyles, undefined, {\n  scope: 'CompactPeoplePicker'\n});\nexport var ListPeoplePicker = styled(ListPeoplePickerBase, getStyles, undefined, {\n  scope: 'ListPeoplePickerBase'\n});","map":{"version":3,"sources":["components/pickers/PeoplePicker/PeoplePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { getRTL, getInitials, styled } from '../../../Utilities';\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\nimport {\n  IBasePickerProps,\n  IBasePickerSuggestionsProps,\n  ValidationState,\n  IBasePickerStyleProps,\n  IBasePickerStyles,\n} from '../BasePicker.types';\nimport { PeoplePickerItem } from './PeoplePickerItems/PeoplePickerItem';\nimport { IPersonaProps } from '../../../Persona';\nimport { PeoplePickerItemSuggestion } from './PeoplePickerItems/PeoplePickerItemSuggestion';\nimport { IPeoplePickerItemSelectedProps } from './PeoplePickerItems/PeoplePickerItem.types';\nimport { getStyles } from '../BasePicker.styles';\n\n/**\n * PeoplePicker props interface which renders Personas as items.\n * {@docCategory PeoplePicker}\n * */\nexport interface IPeoplePickerProps extends IBasePickerProps<IPersonaProps> {}\n\n/**\n * {@docCategory PeoplePicker}\n */\nexport class BasePeoplePicker extends BasePicker<IPersonaProps, IPeoplePickerProps> {}\n\n/**\n * {@docCategory PeoplePicker}\n */\nexport class MemberListPeoplePicker extends BasePickerListBelow<IPersonaProps, IPeoplePickerProps> {}\n\n/**\n * Standard People Picker.\n * {@docCategory PeoplePicker}\n */\nexport class NormalPeoplePickerBase extends BasePeoplePicker {\n  /** Default props for NormalPeoplePicker. */\n  public static defaultProps = {\n    onRenderItem: (props: IPeoplePickerItemSelectedProps) => <PeoplePickerItem {...props} />,\n    onRenderSuggestionsItem: (personaProps: IPersonaProps, suggestionsProps?: IBasePickerSuggestionsProps) => (\n      <PeoplePickerItemSuggestion personaProps={personaProps} suggestionsProps={suggestionsProps} />\n    ),\n    createGenericItem: createGenericItem,\n  };\n}\n\n/**\n * Compact layout. It uses personas without secondary text when displaying search results.\n * {@docCategory PeoplePicker}\n */\nexport class CompactPeoplePickerBase extends BasePeoplePicker {\n  /** Default props for CompactPeoplePicker. */\n  public static defaultProps = {\n    onRenderItem: (props: IPeoplePickerItemSelectedProps) => <PeoplePickerItem {...props} />,\n    onRenderSuggestionsItem: (personaProps: IPersonaProps, suggestionsProps?: IBasePickerSuggestionsProps) => (\n      <PeoplePickerItemSuggestion personaProps={personaProps} suggestionsProps={suggestionsProps} compact={true} />\n    ),\n    createGenericItem: createGenericItem,\n  };\n}\n\n/**\n * MemberList layout. The selected people show up below the search box.\n * {@docCategory PeoplePicker}\n */\nexport class ListPeoplePickerBase extends MemberListPeoplePicker {\n  /** Default props for ListPeoplePicker. */\n  public static defaultProps = {\n    onRenderItem: (props: IPeoplePickerItemSelectedProps) => <PeoplePickerItem {...props} />,\n    onRenderSuggestionsItem: (personaProps: IPersonaProps, suggestionsProps?: IBasePickerSuggestionsProps) => (\n      <PeoplePickerItemSuggestion personaProps={personaProps} suggestionsProps={suggestionsProps} />\n    ),\n    createGenericItem: createGenericItem,\n  };\n}\n\n/**\n * {@docCategory PeoplePicker}\n */\nexport interface IGenericItem {\n  primaryText: string;\n  imageInitials: string;\n  ValidationState: ValidationState;\n}\n\n/**\n * {@docCategory PeoplePicker}\n */\nexport function createGenericItem(\n  name: string,\n  currentValidationState: ValidationState,\n): IGenericItem & { key: React.Key } {\n  const personaToConvert = {\n    key: name,\n    primaryText: name,\n    imageInitials: '!',\n    ValidationState: currentValidationState,\n  };\n\n  if (currentValidationState !== ValidationState.warning) {\n    personaToConvert.imageInitials = getInitials(name, getRTL());\n  }\n\n  return personaToConvert;\n}\n\nexport const NormalPeoplePicker = styled<IPeoplePickerProps, IBasePickerStyleProps, IBasePickerStyles>(\n  NormalPeoplePickerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'NormalPeoplePicker',\n  },\n);\n\nexport const CompactPeoplePicker = styled<IPeoplePickerProps, IBasePickerStyleProps, IBasePickerStyles>(\n  CompactPeoplePickerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'CompactPeoplePicker',\n  },\n);\n\nexport const ListPeoplePicker = styled<IPeoplePickerProps, IBasePickerStyleProps, IBasePickerStyles>(\n  ListPeoplePickerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'ListPeoplePickerBase',\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}