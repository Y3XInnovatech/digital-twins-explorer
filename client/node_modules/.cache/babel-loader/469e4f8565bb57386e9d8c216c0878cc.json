{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport * as stylesImport from './BaseFloatingPicker.scss';\nimport { Async, initializeComponentRef, css, KeyCodes } from '../../Utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\nvar styles = stylesImport;\nvar BaseFloatingPicker = /** @class */function (_super) {\n  __extends(BaseFloatingPicker, _super);\n  function BaseFloatingPicker(basePickerProps) {\n    var _this = _super.call(this, basePickerProps) || this;\n    _this.root = React.createRef();\n    _this.suggestionsControl = React.createRef();\n    _this.SuggestionsControlOfProperType = SuggestionsControl;\n    _this.isComponentMounted = false;\n    _this.onQueryStringChanged = function (queryString) {\n      if (queryString !== _this.state.queryString) {\n        _this.setState({\n          queryString: queryString\n        });\n        if (_this.props.onInputChanged) {\n          _this.props.onInputChanged(queryString);\n        }\n        _this.updateValue(queryString);\n      }\n    };\n    _this.hidePicker = function () {\n      var wasShownBeforeUpdate = _this.isSuggestionsShown;\n      _this.setState({\n        suggestionsVisible: false\n      });\n      if (_this.props.onSuggestionsHidden && wasShownBeforeUpdate) {\n        _this.props.onSuggestionsHidden();\n      }\n    };\n    _this.showPicker = function (updateValue) {\n      if (updateValue === void 0) {\n        updateValue = false;\n      }\n      var wasShownBeforeUpdate = _this.isSuggestionsShown;\n      _this.setState({\n        suggestionsVisible: true\n      });\n      // Update the suggestions if updateValue == true\n      var value = _this.props.inputElement ? _this.props.inputElement.value : '';\n      if (updateValue) {\n        _this.updateValue(value);\n      }\n      if (_this.props.onSuggestionsShown && !wasShownBeforeUpdate) {\n        _this.props.onSuggestionsShown();\n      }\n    };\n    _this.completeSuggestion = function () {\n      if (_this.suggestionsControl.current && _this.suggestionsControl.current.hasSuggestionSelected()) {\n        _this.onChange(_this.suggestionsControl.current.currentSuggestion.item);\n      }\n    };\n    _this.onSuggestionClick = function (ev, item, index) {\n      _this.onChange(item);\n      _this._updateSuggestionsVisible(false /*shouldShow*/);\n    };\n    _this.onSuggestionRemove = function (ev, item, index) {\n      if (_this.props.onRemoveSuggestion) {\n        _this.props.onRemoveSuggestion(item);\n      }\n      if (_this.suggestionsControl.current) {\n        _this.suggestionsControl.current.removeSuggestion(index);\n      }\n    };\n    _this.onKeyDown = function (ev) {\n      if (!_this.state.suggestionsVisible || _this.props.inputElement && !_this.props.inputElement.contains(ev.target)) {\n        return;\n      }\n      // eslint-disable-next-line deprecation/deprecation\n      var keyCode = ev.which;\n      switch (keyCode) {\n        case KeyCodes.escape:\n          _this.hidePicker();\n          ev.preventDefault();\n          ev.stopPropagation();\n          break;\n        case KeyCodes.tab:\n        case KeyCodes.enter:\n          if (!ev.shiftKey && !ev.ctrlKey && _this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n          } else {\n            _this._onValidateInput();\n          }\n          break;\n        case KeyCodes.del:\n          if (_this.props.onRemoveSuggestion && _this.suggestionsControl.current && _this.suggestionsControl.current.hasSuggestionSelected && _this.suggestionsControl.current.currentSuggestion && ev.shiftKey) {\n            _this.props.onRemoveSuggestion(_this.suggestionsControl.current.currentSuggestion.item);\n            _this.suggestionsControl.current.removeSuggestion();\n            _this.forceUpdate();\n            ev.stopPropagation();\n          }\n          break;\n        case KeyCodes.up:\n          if (_this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            _this._updateActiveDescendant();\n          }\n          break;\n        case KeyCodes.down:\n          if (_this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            _this._updateActiveDescendant();\n          }\n          break;\n      }\n    };\n    _this._onValidateInput = function () {\n      if (_this.state.queryString && _this.props.onValidateInput && _this.props.createGenericItem) {\n        var itemToConvert = _this.props.createGenericItem(_this.state.queryString, _this.props.onValidateInput(_this.state.queryString));\n        var convertedItems = _this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\n        _this.onChange(convertedItems[0].item);\n      }\n    };\n    _this._async = new Async(_this);\n    initializeComponentRef(_this);\n    _this.suggestionStore = basePickerProps.suggestionsStore;\n    _this.state = {\n      queryString: '',\n      didBind: false\n    };\n    return _this;\n  }\n  Object.defineProperty(BaseFloatingPicker.prototype, \"inputText\", {\n    get: function () {\n      return this.state.queryString;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseFloatingPicker.prototype, \"suggestions\", {\n    get: function () {\n      return this.suggestionStore.suggestions;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  BaseFloatingPicker.prototype.forceResolveSuggestion = function () {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.completeSuggestion();\n    } else {\n      this._onValidateInput();\n    }\n  };\n  Object.defineProperty(BaseFloatingPicker.prototype, \"currentSelectedSuggestionIndex\", {\n    get: function () {\n      return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseFloatingPicker.prototype, \"isSuggestionsShown\", {\n    get: function () {\n      return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  BaseFloatingPicker.prototype.componentDidMount = function () {\n    this._bindToInputElement();\n    this.isComponentMounted = true;\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  };\n  BaseFloatingPicker.prototype.componentDidUpdate = function () {\n    this._bindToInputElement();\n  };\n  BaseFloatingPicker.prototype.componentWillUnmount = function () {\n    this._unbindFromInputElement();\n    this.isComponentMounted = false;\n  };\n  BaseFloatingPicker.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    if (newProps.suggestionItems) {\n      this.updateSuggestions(newProps.suggestionItems);\n    }\n  };\n  BaseFloatingPicker.prototype.updateSuggestions = function (suggestions, forceUpdate) {\n    if (forceUpdate === void 0) {\n      forceUpdate = false;\n    }\n    this.suggestionStore.updateSuggestions(suggestions);\n    if (forceUpdate) {\n      this.forceUpdate();\n    }\n  };\n  BaseFloatingPicker.prototype.render = function () {\n    var className = this.props.className;\n    return React.createElement(\"div\", {\n      ref: this.root,\n      className: css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')\n    }, this.renderSuggestions());\n  };\n  BaseFloatingPicker.prototype.renderSuggestions = function () {\n    var TypedSuggestionsControl = this.SuggestionsControlOfProperType;\n    return this.state.suggestionsVisible ? React.createElement(Callout, __assign({\n      className: styles.callout,\n      isBeakVisible: false,\n      gapSpace: 5,\n      target: this.props.inputElement,\n      onDismiss: this.hidePicker,\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      directionalHintForRTL: DirectionalHint.bottomRightEdge,\n      calloutWidth: this.props.calloutWidth ? this.props.calloutWidth : 0\n    }, this.props.pickerCalloutProps), React.createElement(TypedSuggestionsControl, __assign({\n      onRenderSuggestion: this.props.onRenderSuggestionsItem,\n      onSuggestionClick: this.onSuggestionClick,\n      onSuggestionRemove: this.onSuggestionRemove,\n      suggestions: this.suggestionStore.getSuggestions(),\n      componentRef: this.suggestionsControl,\n      completeSuggestion: this.completeSuggestion,\n      shouldLoopSelection: false\n    }, this.props.pickerSuggestionsProps))) : null;\n  };\n  BaseFloatingPicker.prototype.onSelectionChange = function () {\n    this.forceUpdate();\n  };\n  BaseFloatingPicker.prototype.updateValue = function (updatedValue) {\n    if (updatedValue === '') {\n      this.updateSuggestionWithZeroState();\n    } else {\n      this._onResolveSuggestions(updatedValue);\n    }\n  };\n  BaseFloatingPicker.prototype.updateSuggestionWithZeroState = function () {\n    if (this.props.onZeroQuerySuggestion) {\n      var onEmptyInputFocus = this.props.onZeroQuerySuggestion;\n      var suggestions = onEmptyInputFocus(this.props.selectedItems);\n      this.updateSuggestionsList(suggestions);\n    } else {\n      this.hidePicker();\n    }\n  };\n  BaseFloatingPicker.prototype.updateSuggestionsList = function (suggestions) {\n    var _this = this;\n    var suggestionsArray = suggestions;\n    var suggestionsPromiseLike = suggestions;\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n    // If it is then resolve it asynchronously.\n    if (Array.isArray(suggestionsArray)) {\n      this.updateSuggestions(suggestionsArray, true /*forceUpdate*/);\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      var promise_1 = this.currentPromise = suggestionsPromiseLike;\n      promise_1.then(function (newSuggestions) {\n        // Only update if the next promise has not yet resolved and\n        // the floating picker is still mounted.\n        if (promise_1 === _this.currentPromise && _this.isComponentMounted) {\n          _this.updateSuggestions(newSuggestions, true /*forceUpdate*/);\n        }\n      });\n    }\n  };\n  BaseFloatingPicker.prototype.onChange = function (item) {\n    if (this.props.onChange) {\n      this.props.onChange(item);\n    }\n  };\n  BaseFloatingPicker.prototype._updateActiveDescendant = function () {\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\n      var selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\n      if (selectedElId) {\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId);\n      }\n    }\n  };\n  BaseFloatingPicker.prototype._onResolveSuggestions = function (updatedValue) {\n    var suggestions = this.props.onResolveSuggestions(updatedValue, this.props.selectedItems);\n    this._updateSuggestionsVisible(true /*shouldShow*/);\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions);\n    }\n  };\n  BaseFloatingPicker.prototype._updateSuggestionsVisible = function (shouldShow) {\n    if (shouldShow) {\n      this.showPicker();\n    } else {\n      this.hidePicker();\n    }\n  };\n  BaseFloatingPicker.prototype._bindToInputElement = function () {\n    if (this.props.inputElement && !this.state.didBind) {\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\n      this.setState({\n        didBind: true\n      });\n    }\n  };\n  BaseFloatingPicker.prototype._unbindFromInputElement = function () {\n    if (this.props.inputElement && this.state.didBind) {\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\n      this.setState({\n        didBind: false\n      });\n    }\n  };\n  return BaseFloatingPicker;\n}(React.Component);\nexport { BaseFloatingPicker };","map":{"version":3,"sources":["components/FloatingPicker/BaseFloatingPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as stylesImport from './BaseFloatingPicker.scss';\nimport { Async, initializeComponentRef, css, KeyCodes } from '../../Utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { IBaseFloatingPicker, IBaseFloatingPickerProps } from './BaseFloatingPicker.types';\nimport { ISuggestionModel } from '../../Pickers';\nimport { ISuggestionsControlProps } from './Suggestions/Suggestions.types';\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\nimport { SuggestionsStore } from './Suggestions/SuggestionsStore';\nconst styles: any = stylesImport;\n\nexport interface IBaseFloatingPickerState {\n  queryString: string;\n  suggestionsVisible?: boolean;\n  didBind: boolean;\n}\n\nexport class BaseFloatingPicker<T, P extends IBaseFloatingPickerProps<T>>\n  extends React.Component<P, IBaseFloatingPickerState>\n  implements IBaseFloatingPicker {\n  protected selection: Selection;\n\n  protected root = React.createRef<HTMLDivElement>();\n  protected suggestionStore: SuggestionsStore<T>;\n  protected suggestionsControl: React.RefObject<SuggestionsControl<T>> = React.createRef();\n  protected SuggestionsControlOfProperType: new (props: ISuggestionsControlProps<T>) => SuggestionsControl<\n    T\n  > = SuggestionsControl as new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T>;\n  protected currentPromise: PromiseLike<T[]>;\n  protected isComponentMounted: boolean = false;\n\n  private _async: Async;\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    this._async = new Async(this);\n    initializeComponentRef(this);\n\n    this.suggestionStore = basePickerProps.suggestionsStore;\n    this.state = {\n      queryString: '',\n      didBind: false,\n    };\n  }\n\n  public get inputText(): string {\n    return this.state.queryString;\n  }\n\n  public get suggestions(): any[] {\n    return this.suggestionStore.suggestions;\n  }\n\n  public forceResolveSuggestion(): void {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.completeSuggestion();\n    } else {\n      this._onValidateInput();\n    }\n  }\n\n  public get currentSelectedSuggestionIndex(): number {\n    return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\n  }\n\n  public get isSuggestionsShown(): boolean {\n    return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\n  }\n\n  public onQueryStringChanged = (queryString: string): void => {\n    if (queryString !== this.state.queryString) {\n      this.setState({\n        queryString: queryString,\n      });\n\n      if (this.props.onInputChanged) {\n        (this.props.onInputChanged as (filter: string) => void)(queryString);\n      }\n\n      this.updateValue(queryString);\n    }\n  };\n\n  public hidePicker = (): void => {\n    const wasShownBeforeUpdate = this.isSuggestionsShown;\n\n    this.setState({\n      suggestionsVisible: false,\n    });\n\n    if (this.props.onSuggestionsHidden && wasShownBeforeUpdate) {\n      this.props.onSuggestionsHidden();\n    }\n  };\n\n  public showPicker = (updateValue: boolean = false): void => {\n    const wasShownBeforeUpdate = this.isSuggestionsShown;\n    this.setState({\n      suggestionsVisible: true,\n    });\n\n    // Update the suggestions if updateValue == true\n    const value = this.props.inputElement ? this.props.inputElement.value : '';\n    if (updateValue) {\n      this.updateValue(value);\n    }\n\n    if (this.props.onSuggestionsShown && !wasShownBeforeUpdate) {\n      this.props.onSuggestionsShown();\n    }\n  };\n\n  public componentDidMount(): void {\n    this._bindToInputElement();\n    this.isComponentMounted = true;\n\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  }\n\n  public componentDidUpdate(): void {\n    this._bindToInputElement();\n  }\n\n  public componentWillUnmount(): void {\n    this._unbindFromInputElement();\n    this.isComponentMounted = false;\n  }\n\n  public UNSAFE_componentWillReceiveProps(newProps: IBaseFloatingPickerProps<T>): void {\n    if (newProps.suggestionItems) {\n      this.updateSuggestions(newProps.suggestionItems);\n    }\n  }\n\n  public completeSuggestion = (): void => {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.onChange(this.suggestionsControl.current.currentSuggestion!.item);\n    }\n  };\n\n  public updateSuggestions(suggestions: T[], forceUpdate: boolean = false): void {\n    this.suggestionStore.updateSuggestions(suggestions);\n\n    if (forceUpdate) {\n      this.forceUpdate();\n    }\n  }\n\n  public render(): JSX.Element {\n    const { className } = this.props;\n    return (\n      <div ref={this.root} className={css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')}>\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n\n  protected renderSuggestions(): JSX.Element | null {\n    const TypedSuggestionsControl = this.SuggestionsControlOfProperType;\n    return this.state.suggestionsVisible ? (\n      <Callout\n        className={styles.callout}\n        isBeakVisible={false}\n        gapSpace={5}\n        target={this.props.inputElement}\n        onDismiss={this.hidePicker}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        directionalHintForRTL={DirectionalHint.bottomRightEdge}\n        calloutWidth={this.props.calloutWidth ? this.props.calloutWidth : 0}\n        {...this.props.pickerCalloutProps}\n      >\n        <TypedSuggestionsControl\n          onRenderSuggestion={this.props.onRenderSuggestionsItem}\n          onSuggestionClick={this.onSuggestionClick}\n          onSuggestionRemove={this.onSuggestionRemove}\n          suggestions={this.suggestionStore.getSuggestions()}\n          componentRef={this.suggestionsControl}\n          completeSuggestion={this.completeSuggestion}\n          shouldLoopSelection={false}\n          {...this.props.pickerSuggestionsProps}\n        />\n      </Callout>\n    ) : null;\n  }\n\n  protected onSelectionChange(): void {\n    this.forceUpdate();\n  }\n\n  protected updateValue(updatedValue: string): void {\n    if (updatedValue === '') {\n      this.updateSuggestionWithZeroState();\n    } else {\n      this._onResolveSuggestions(updatedValue);\n    }\n  }\n\n  protected updateSuggestionWithZeroState(): void {\n    if (this.props.onZeroQuerySuggestion) {\n      const onEmptyInputFocus = this.props.onZeroQuerySuggestion as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\n      const suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.props.selectedItems);\n      this.updateSuggestionsList(suggestions);\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>): void {\n    const suggestionsArray: T[] = suggestions as T[];\n    const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\n\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n    // If it is then resolve it asynchronously.\n    if (Array.isArray(suggestionsArray)) {\n      this.updateSuggestions(suggestionsArray, true /*forceUpdate*/);\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      const promise: PromiseLike<T[]> = (this.currentPromise = suggestionsPromiseLike);\n      promise.then((newSuggestions: T[]) => {\n        // Only update if the next promise has not yet resolved and\n        // the floating picker is still mounted.\n        if (promise === this.currentPromise && this.isComponentMounted) {\n          this.updateSuggestions(newSuggestions, true /*forceUpdate*/);\n        }\n      });\n    }\n  }\n\n  protected onChange(item: T): void {\n    if (this.props.onChange) {\n      (this.props.onChange as (items: T) => void)(item);\n    }\n  }\n\n  protected onSuggestionClick = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\n    this.onChange(item);\n    this._updateSuggestionsVisible(false /*shouldShow*/);\n  };\n\n  protected onSuggestionRemove = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\n    if (this.props.onRemoveSuggestion) {\n      (this.props.onRemoveSuggestion as (item: T) => void)(item);\n    }\n\n    if (this.suggestionsControl.current) {\n      this.suggestionsControl.current.removeSuggestion(index);\n    }\n  };\n\n  protected onKeyDown = (ev: MouseEvent): void => {\n    if (\n      !this.state.suggestionsVisible ||\n      (this.props.inputElement && !(this.props.inputElement as HTMLElement).contains(ev.target as HTMLElement))\n    ) {\n      return;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    const keyCode = ev.which;\n    switch (keyCode) {\n      case KeyCodes.escape:\n        this.hidePicker();\n        ev.preventDefault();\n        ev.stopPropagation();\n        break;\n\n      case KeyCodes.tab:\n      case KeyCodes.enter:\n        if (\n          !ev.shiftKey &&\n          !ev.ctrlKey &&\n          this.suggestionsControl.current &&\n          this.suggestionsControl.current.handleKeyDown(keyCode)\n        ) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        } else {\n          this._onValidateInput();\n        }\n        break;\n\n      case KeyCodes.del:\n        if (\n          this.props.onRemoveSuggestion &&\n          this.suggestionsControl.current &&\n          this.suggestionsControl.current.hasSuggestionSelected &&\n          this.suggestionsControl.current.currentSuggestion &&\n          ev.shiftKey\n        ) {\n          (this.props.onRemoveSuggestion as (item: T) => void)(this.suggestionsControl.current.currentSuggestion!.item);\n\n          this.suggestionsControl.current.removeSuggestion();\n          this.forceUpdate();\n          ev.stopPropagation();\n        }\n        break;\n\n      case KeyCodes.up:\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._updateActiveDescendant();\n        }\n        break;\n\n      case KeyCodes.down:\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._updateActiveDescendant();\n        }\n        break;\n    }\n  };\n\n  private _updateActiveDescendant(): void {\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\n      const selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\n      if (selectedElId) {\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId as string);\n      }\n    }\n  }\n\n  private _onResolveSuggestions(updatedValue: string): void {\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(\n      updatedValue,\n      this.props.selectedItems,\n    );\n\n    this._updateSuggestionsVisible(true /*shouldShow*/);\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions);\n    }\n  }\n\n  private _onValidateInput = (): void => {\n    if (this.state.queryString && this.props.onValidateInput && this.props.createGenericItem) {\n      const itemToConvert: ISuggestionModel<T> = (this.props.createGenericItem as (\n        input: string,\n        isValid: boolean,\n      ) => ISuggestionModel<T>)(\n        this.state.queryString,\n        (this.props.onValidateInput as (input: string) => boolean)(this.state.queryString),\n      );\n      const convertedItems = this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\n      this.onChange(convertedItems[0].item);\n    }\n  };\n\n  private _updateSuggestionsVisible(shouldShow: boolean): void {\n    if (shouldShow) {\n      this.showPicker();\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  private _bindToInputElement(): void {\n    if (this.props.inputElement && !this.state.didBind) {\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\n      this.setState({ didBind: true });\n    }\n  }\n\n  private _unbindFromInputElement(): void {\n    if (this.props.inputElement && this.state.didBind) {\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\n      this.setState({ didBind: false });\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}