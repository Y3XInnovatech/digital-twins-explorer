{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warn } from '../../Utilities';\nimport { ButtonType } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\nvar Button = /** @class */function (_super) {\n  __extends(Button, _super);\n  function Button(props) {\n    var _this = _super.call(this, props) || this;\n    warn(\"The Button component has been deprecated. Use specific variants instead. \" + \"(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)\");\n    return _this;\n  }\n  Button.prototype.render = function () {\n    var props = this.props;\n    // eslint-disable-next-line deprecation/deprecation\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return React.createElement(ActionButton, __assign({}, props));\n      case ButtonType.compound:\n        return React.createElement(CompoundButton, __assign({}, props));\n      case ButtonType.icon:\n        return React.createElement(IconButton, __assign({}, props));\n      case ButtonType.primary:\n        return React.createElement(PrimaryButton, __assign({}, props));\n      default:\n        return React.createElement(DefaultButton, __assign({}, props));\n    }\n  };\n  return Button;\n}(React.Component);\nexport { Button };","map":{"version":3,"sources":["components/Button/Button.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAE9B,SAAS,IAAI,QAAQ,iBAAiB;AACtC,SAAS,UAAU,QAAsB,gBAAgB;AACzD,SAAS,aAAa,QAAQ,+BAA+B;AAC7D,SAAS,YAAY,QAAQ,6BAA6B;AAC1D,SAAS,cAAc,QAAQ,iCAAiC;AAChE,SAAS,UAAU,QAAQ,yBAAyB;AACpD,SAAS,aAAa,QAAQ,+BAA+B;AAE7D;;;;AAIG;AACH,IAAA,MAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA4B,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;EAC1B,SAAA,MAAA,CAAY,KAAmB,EAAA;IAA/B,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IAAA,IAAA;IAEZ,IAAI,CACF,2EAA2E,GACzE,gEAAgE,CACnE;;EACH;EAEO,MAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK;IAExB;IACA,QAAQ,KAAK,CAAC,UAAU;MACtB,KAAK,UAAU,CAAC,OAAO;QACrB,OAAO,KAAA,CAAA,aAAA,CAAC,YAAY,EAAA,QAAA,CAAA,CAAA,CAAA,EAAK,KAAK,CAAA,CAAI;MAEpC,KAAK,UAAU,CAAC,QAAQ;QACtB,OAAO,KAAA,CAAA,aAAA,CAAC,cAAc,EAAA,QAAA,CAAA,CAAA,CAAA,EAAK,KAAK,CAAA,CAAI;MAEtC,KAAK,UAAU,CAAC,IAAI;QAClB,OAAO,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA,QAAA,CAAA,CAAA,CAAA,EAAK,KAAK,CAAA,CAAI;MAElC,KAAK,UAAU,CAAC,OAAO;QACrB,OAAO,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,QAAA,CAAA,CAAA,CAAA,EAAK,KAAK,CAAA,CAAI;MAErC;QACE,OAAO,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,QAAA,CAAA,CAAA,CAAA,EAAK,KAAK,CAAA,CAAI;IACtC;EACH,CAAC;EACH,OAAA,MAAC;AAAD,CAAC,CA/B2B,KAAK,CAAC,SAAS,CAAA","sourcesContent":["import * as React from 'react';\n\nimport { warn } from '../../Utilities';\nimport { ButtonType, IButtonProps } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\n\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\nexport class Button extends React.Component<IButtonProps, {}> {\n  constructor(props: IButtonProps) {\n    super(props);\n\n    warn(\n      `The Button component has been deprecated. Use specific variants instead. ` +\n        `(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)`,\n    );\n  }\n\n  public render(): JSX.Element {\n    const props = this.props;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return <ActionButton {...props} />;\n\n      case ButtonType.compound:\n        return <CompoundButton {...props} />;\n\n      case ButtonType.icon:\n        return <IconButton {...props} />;\n\n      case ButtonType.primary:\n        return <PrimaryButton {...props} />;\n\n      default:\n        return <DefaultButton {...props} />;\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}