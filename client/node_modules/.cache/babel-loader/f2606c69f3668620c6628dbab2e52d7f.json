{"ast":null,"code":"import { bz as __extends, bg as __assign, aa as LOCAL_STORAGE_KEYS, bl as getDebugLogger } from './Interfaces-f1972c79.js';\n\n/** The property names for custom properties in the payload */\nvar CUSTOM_PROPERTY_NAMES = {\n  /** hashed value for the adt instance */\n  AdtInstanceHash: 'AdtInstanceHash',\n  /** region of the app (builder/viewer/etc.) */\n  AppRegion: 'AppRegion',\n  /** name of the emitting component */\n  ComponentName: 'ComponentName',\n  /** hashed id of the parent scene */\n  ParentSceneHash: 'ParentSceneHash',\n  /** hashed id of the scene */\n  SceneHash: 'SceneHash',\n  /** hashed value for the adt instance */\n  StorageContainerHash: 'StorageContainerHash',\n  /** type of action (user, system, etc.) */\n  TriggerType: 'TriggerType'\n};\n/** Highest level sections of the app */\nvar AppRegion;\n(function (AppRegion) {\n  AppRegion[\"Builder\"] = \"Builder\";\n  AppRegion[\"SceneLobby\"] = \"SceneLobby\";\n  AppRegion[\"Viewer\"] = \"Viewer\";\n  AppRegion[\"DataHistoryExplorer\"] = \"DataHistoryExplorer\";\n})(AppRegion || (AppRegion = {}));\n/** The type of gesture the user used, (click, hover, etc.) */\nvar Gesture;\n(function (Gesture) {\n  Gesture[\"Click\"] = \"Click\";\n  Gesture[\"Hover\"] = \"Hover\";\n})(Gesture || (Gesture = {}));\n/** the source of the event, was it from a user or an automated event based off of some condition */\nvar TelemetryTrigger;\n(function (TelemetryTrigger) {\n  /** user initiated action */\n  TelemetryTrigger[\"UserAction\"] = \"UserAction\";\n  /** user initiated view */\n  TelemetryTrigger[\"UserView\"] = \"UserView\";\n  /** System initiated action */\n  TelemetryTrigger[\"SystemAction\"] = \"SystemAction\";\n})(TelemetryTrigger || (TelemetryTrigger = {}));\n/**\r\n * The high level component emitting the event\r\n * Keep it at the general level, no need to get overly specific.\r\n * Ex: SceneList, ElementForm, etc\r\n */\nvar ComponentName;\n(function (ComponentName) {\n  ComponentName[\"BehaviorForm\"] = \"BehaviorForm\";\n  ComponentName[\"BehaviorList\"] = \"BehaviorList\";\n  ComponentName[\"ElementForm\"] = \"ElementForm\";\n  ComponentName[\"ElementList\"] = \"ElementList\";\n  ComponentName[\"SceneList\"] = \"SceneList\";\n  ComponentName[\"DataHistoryExplorerModal\"] = \"DataHistoryExplorerModal\";\n})(ComponentName || (ComponentName = {}));\n/**\r\n * The events the app can emit\r\n * Structure is like this:\r\n *  - App region (Builder/Viewer)\r\n *    - High level component (SceneList, ElementForm, etc)\r\n *      - User action/System action\r\n *        - Event/action\r\n *           - variant (ex: initiate, confirm, cancel)\r\n *           - eventName: the name of the beacon to emit\r\n *           - properties: names of the custom properties that the event will have attached to it\r\n */\nvar TelemetryEvents = {\n  Adapter: {\n    /** scene load */\n    SceneLoad: {\n      SystemAction: {\n        ParseConfiguration: {\n          eventName: 'ParseConfig.ConfigKpis',\n          properties: {\n            countBehaviors: 'countBehaviors',\n            countScenes: 'countScenes',\n            countLayers: 'countLayers'\n          }\n        },\n        ParseScene: {\n          eventName: 'ParseConfig.SceneKpis',\n          properties: {\n            countBehaviors: 'countBehaviors',\n            countElements: 'countElements',\n            countAssets: 'countAssets',\n            hasCoordinates: 'hasCoordinates',\n            hasDescription: 'hasDescription',\n            pollingDelay: 'pollingDelay',\n            sceneHash: CUSTOM_PROPERTY_NAMES.SceneHash\n          }\n        },\n        ParseElement: {\n          eventName: 'ParseConfig.ElementKpis',\n          properties: {\n            elementType: 'elementType',\n            countMeshes: 'countMeshes',\n            countAliases: 'countAliases',\n            parentSceneHash: CUSTOM_PROPERTY_NAMES.ParentSceneHash\n          }\n        },\n        ParseBehavior: {\n          eventName: 'ParseConfig.BehaviorKpis',\n          properties: {\n            countAliases: 'countAliases',\n            countElements: 'countElements',\n            countDataSources: 'countDataSources',\n            countWidgets: 'countWidgets',\n            countWidgetGaugeType: 'countWidgetGaugeType',\n            countWidgetLinkType: 'countWidgetLinkType',\n            countWidgetPropertyType: 'countWidgetPropertyType',\n            countWidgetDataHistoryType: 'countWidgetDataHistoryType',\n            countVisuals: 'countVisuals',\n            countVisualBadgeType: 'countVisualBadgeType',\n            countVisualColorType: 'countVisualColorType',\n            parentSceneHash: CUSTOM_PROPERTY_NAMES.ParentSceneHash\n          }\n        }\n      }\n    }\n  },\n  /** builder section of the app */\n  Builder: {\n    /** scene list page */\n    SceneList: {\n      UserAction: {\n        /** creating a new scene */\n        CreateScene: {\n          Cancel: {\n            eventName: 'SceneList.CreateScene.Cancel'\n          },\n          Confirm: {\n            eventName: 'SceneList.CreateScene.Confirm',\n            properties: {\n              hasCoordinates: 'hasCoordinates',\n              hasDescription: 'hasDescription'\n            }\n          },\n          Initiate: {\n            eventName: 'SceneList.CreateScene.Initiate'\n          }\n        },\n        /** delete an existing scene */\n        DeleteScene: {\n          Cancel: {\n            eventName: 'SceneList.DeleteScene.Cancel'\n          },\n          Confirm: {\n            eventName: 'SceneList.DeleteScene.Confirm'\n          },\n          Initiate: {\n            eventName: 'SceneList.DeleteScene.Initiate',\n            properties: {\n              itemIndex: 'itemIndex'\n            }\n          }\n        },\n        /** modify an existing scene */\n        EditScene: {\n          Cancel: {\n            eventName: 'SceneList.EditScene.Confirm'\n          },\n          Confirm: {\n            eventName: 'SceneList.EditScene.Confirm'\n          },\n          Initiate: {\n            eventName: 'SceneList.EditScene.Initiate',\n            properties: {\n              itemIndex: 'itemIndex'\n            }\n          }\n        },\n        /** Select a scene from the list */\n        SelectScene: {\n          eventName: 'SceneList.SelectScene'\n        }\n      }\n    }\n  },\n  /** viewer section of the app */\n  Viewer: {},\n  /** tools provided by the library */\n  Tools: {\n    /** data history explorer component */\n    DataHistoryExplorer: {\n      SystemAction: {\n        ParseDataHistory: {\n          eventName: 'ParseConfig.DataHistoryExplorerKpis',\n          properties: {\n            countSeries: 'countSeries'\n          }\n        }\n      },\n      UserAction: {\n        /** opening modal to explore data history */\n        OpenModal: {\n          eventName: 'DataHistoryExplorer.AddSeries'\n        },\n        /** adding a new series using the time series builder on the left */\n        AddSeries: {\n          eventName: 'DataHistoryExplorer.AddSeries',\n          properties: {\n            hasCustomLabel: 'hasCustomLabel'\n          }\n        },\n        /** editing series using the time series builder on the left */\n        EditSeries: {\n          eventName: 'DataHistoryExplorer.EditSeries',\n          properties: {\n            seriesId: 'seriesId',\n            hasCustomLabel: 'hasCustomLabel'\n          }\n        },\n        /** removing a new series using the ellipsis menu of the list item in the builder on the left */\n        RemoveSeries: {\n          eventName: 'DataHistoryExplorer.RemoveSeries',\n          properties: {\n            seriesId: 'seriesId'\n          }\n        },\n        /** toggle the option to cast a property type to numeric */\n        ToggleNumericCasting: {\n          eventName: 'DataHistoryExplorer.ToggleNumericCasting',\n          properties: {\n            toggleValue: 'toggleValue'\n          }\n        },\n        /** changing view mode either to Chart or Table on the viewer component */\n        ChangeView: {\n          eventName: 'DataHistoryExplorer.ChangeView',\n          properties: {\n            view: 'view'\n          }\n        },\n        /** changing any chart options on the viewer under Chart tab like Y-axis type, Aggregation type or Quick Time */\n        ChangeChartOption: {\n          eventName: 'DataHistoryExplorer.ChangeChartOption',\n          properties: {\n            chartOptions: 'chartOptions'\n          }\n        },\n        /** clicking on Open in ADX action to view the chart data in Azure Data Explorer Web UI */\n        OpenSeriesInAdx: {\n          eventName: 'DataHistoryExplorer.OpenInADX'\n        },\n        /** dowloading data in the Table tab in the viewer on right hand side */\n        DownloadTable: {\n          eventName: 'DataHistoryExplorer.DownloadTable',\n          properties: {\n            numberOfRows: 'numberOfRows'\n          }\n        },\n        /** triggering to force refresh data fetching */\n        ForceRefresh: {\n          eventName: 'DataHistoryExplorer.ForceRefresh'\n        }\n      }\n    }\n  }\n};\n\n/** Loosely based on the Application insights telemetry data model\r\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model\r\n */\nvar TelemetryType;\n(function (TelemetryType) {\n  TelemetryType[\"event\"] = \"event\";\n  TelemetryType[\"exception\"] = \"exception\";\n  TelemetryType[\"metric\"] = \"metric\";\n  TelemetryType[\"request\"] = \"request\";\n  TelemetryType[\"trace\"] = \"trace\";\n})(TelemetryType || (TelemetryType = {}));\nvar TelemetryService_types = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get TelemetryType() {\n    return TelemetryType;\n  }\n});\nvar Telemetry = /** @class */function () {\n  function Telemetry(name, customProperties) {\n    this.name = name;\n    this.customProperties = customProperties || {};\n    this.timestamp = new Date().toUTCString();\n  }\n  return Telemetry;\n}();\n/** Telemetry for network requests\r\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model-request-telemetry\r\n */\nvar TelemetryRequest = /** @class */function (_super) {\n  __extends(TelemetryRequest, _super);\n  function TelemetryRequest(_a) {\n    var name = _a.name,\n      url = _a.url,\n      requestMethod = _a.requestMethod,\n      responseCode = _a.responseCode,\n      responseMessage = _a.responseMessage,\n      success = _a.success,\n      customProperties = _a.customProperties;\n    var _this = _super.call(this, name, customProperties) || this;\n    _this.type = TelemetryType.request;\n    _this.url = url;\n    _this.success = success;\n    _this.responseCode = responseCode;\n    _this.responseMessage = responseMessage;\n    _this.requestMethod = requestMethod;\n    _this.customProperties = customProperties;\n    return _this;\n  }\n  return TelemetryRequest;\n}(Telemetry);\n/** Telemetry for exceptions\r\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model-exception-telemetry\r\n */\nvar TelemetryException = /** @class */function (_super) {\n  __extends(TelemetryException, _super);\n  function TelemetryException(_a) {\n    var name = _a.name,\n      message = _a.message,\n      exceptionId = _a.exceptionId,\n      stack = _a.stack,\n      customProperties = _a.customProperties,\n      severityLevel = _a.severityLevel;\n    var _this = _super.call(this, name, customProperties) || this;\n    _this.type = TelemetryType.exception;\n    _this.exceptionId = exceptionId;\n    _this.severityLevel = severityLevel;\n    _this.message = message;\n    _this.stack = stack;\n    return _this;\n  }\n  return TelemetryException;\n}(Telemetry);\n/** Telemetry for trace statements (similar to log entries)\r\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model-trace-telemetry\r\n */\nvar TelemetryTrace = /** @class */function (_super) {\n  __extends(TelemetryTrace, _super);\n  function TelemetryTrace(_a) {\n    var name = _a.name,\n      message = _a.message,\n      severityLevel = _a.severityLevel,\n      customProperties = _a.customProperties;\n    var _this = _super.call(this, name, customProperties) || this;\n    _this.type = TelemetryType.trace;\n    _this.message = message;\n    _this.severityLevel = severityLevel;\n    return _this;\n  }\n  return TelemetryTrace;\n}(Telemetry);\n/** Telemetry for application events (Typically it is a user interaction such as button click)\r\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model-event-telemetry\r\n */\nvar TelemetryEvent = /** @class */function (_super) {\n  __extends(TelemetryEvent, _super);\n  function TelemetryEvent(_a) {\n    var _b;\n    var appRegion = _a.appRegion,\n      componentName = _a.componentName,\n      customProperties = _a.customProperties,\n      name = _a.name,\n      triggerType = _a.triggerType;\n    var _this = _super.call(this, name, customProperties) || this;\n    _this.type = TelemetryType.event;\n    _this.customProperties = __assign(__assign({}, _this.customProperties), (_b = {}, _b[CUSTOM_PROPERTY_NAMES.AppRegion] = appRegion || 'Unset', _b[CUSTOM_PROPERTY_NAMES.ComponentName] = componentName || 'Unset', _b[CUSTOM_PROPERTY_NAMES.TriggerType] = triggerType || 'Unset', _b));\n    return _this;\n  }\n  return TelemetryEvent;\n}(Telemetry);\n/** Telemetry for application measurements (Typically it is a state of the app like queue length, or duration something took to complete)\r\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model-metric-telemetry\r\n */\nvar TelemetryMetric = /** @class */function (_super) {\n  __extends(TelemetryMetric, _super);\n  function TelemetryMetric(_a) {\n    var name = _a.name,\n      average = _a.average,\n      min = _a.min,\n      max = _a.max,\n      sampleSize = _a.sampleSize,\n      customProperties = _a.customProperties;\n    var _this = _super.call(this, name, customProperties) || this;\n    _this.type = TelemetryType.metric;\n    _this.average = average;\n    _this.min = min;\n    _this.max = max;\n    _this.sampleSize = sampleSize || 1;\n    return _this;\n  }\n  return TelemetryMetric;\n}(Telemetry);\nvar Telemetry$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Telemetry: Telemetry,\n  TelemetryRequest: TelemetryRequest,\n  TelemetryException: TelemetryException,\n  TelemetryTrace: TelemetryTrace,\n  TelemetryEvent: TelemetryEvent,\n  TelemetryMetric: TelemetryMetric\n});\n\n/*\n\nTypeScript Md5\n==============\n\nBased on work by\n* Joseph Myers: http://www.myersdaily.org/joseph/javascript/md5-text.html\n* André Cruz: https://github.com/satazor/SparkMD5\n* Raymond Hill: https://github.com/gorhill/yamd5.js\n\nEffectively a TypeScrypt re-write of Raymond Hill JS Library\n\nThe MIT License (MIT)\n\nCopyright (C) 2014 Raymond Hill\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n            DO WHAT YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2015 André Cruz <amdfcruz@gmail.com>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT YOU WANT TO.\n\n\n*/\nclass Md5 {\n  constructor() {\n    this._dataLength = 0;\n    this._bufferLength = 0;\n    this._state = new Int32Array(4);\n    this._buffer = new ArrayBuffer(68);\n    this._buffer8 = new Uint8Array(this._buffer, 0, 68);\n    this._buffer32 = new Uint32Array(this._buffer, 0, 17);\n    this.start();\n  }\n  static hashStr(str, raw = false) {\n    return this.onePassHasher.start().appendStr(str).end(raw);\n  }\n  static hashAsciiStr(str, raw = false) {\n    return this.onePassHasher.start().appendAsciiStr(str).end(raw);\n  }\n  static _hex(x) {\n    const hc = Md5.hexChars;\n    const ho = Md5.hexOut;\n    let n;\n    let offset;\n    let j;\n    let i;\n    for (i = 0; i < 4; i += 1) {\n      offset = i * 8;\n      n = x[i];\n      for (j = 0; j < 8; j += 2) {\n        ho[offset + 1 + j] = hc.charAt(n & 0x0F);\n        n >>>= 4;\n        ho[offset + 0 + j] = hc.charAt(n & 0x0F);\n        n >>>= 4;\n      }\n    }\n    return ho.join('');\n  }\n  static _md5cycle(x, k) {\n    let a = x[0];\n    let b = x[1];\n    let c = x[2];\n    let d = x[3];\n    // ff()\n    a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n    a = (a << 7 | a >>> 25) + b | 0;\n    d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n    d = (d << 12 | d >>> 20) + a | 0;\n    c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n    c = (c << 17 | c >>> 15) + d | 0;\n    b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n    b = (b << 22 | b >>> 10) + c | 0;\n    a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n    a = (a << 7 | a >>> 25) + b | 0;\n    d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n    d = (d << 12 | d >>> 20) + a | 0;\n    c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n    c = (c << 17 | c >>> 15) + d | 0;\n    b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n    b = (b << 22 | b >>> 10) + c | 0;\n    a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n    a = (a << 7 | a >>> 25) + b | 0;\n    d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n    d = (d << 12 | d >>> 20) + a | 0;\n    c += (d & a | ~d & b) + k[10] - 42063 | 0;\n    c = (c << 17 | c >>> 15) + d | 0;\n    b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n    b = (b << 22 | b >>> 10) + c | 0;\n    a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n    a = (a << 7 | a >>> 25) + b | 0;\n    d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n    d = (d << 12 | d >>> 20) + a | 0;\n    c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n    c = (c << 17 | c >>> 15) + d | 0;\n    b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n    b = (b << 22 | b >>> 10) + c | 0;\n    // gg()\n    a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n    a = (a << 5 | a >>> 27) + b | 0;\n    d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n    d = (d << 9 | d >>> 23) + a | 0;\n    c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n    c = (c << 14 | c >>> 18) + d | 0;\n    b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n    b = (b << 20 | b >>> 12) + c | 0;\n    a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n    a = (a << 5 | a >>> 27) + b | 0;\n    d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n    d = (d << 9 | d >>> 23) + a | 0;\n    c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n    c = (c << 14 | c >>> 18) + d | 0;\n    b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n    b = (b << 20 | b >>> 12) + c | 0;\n    a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n    a = (a << 5 | a >>> 27) + b | 0;\n    d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n    d = (d << 9 | d >>> 23) + a | 0;\n    c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n    c = (c << 14 | c >>> 18) + d | 0;\n    b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n    b = (b << 20 | b >>> 12) + c | 0;\n    a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n    a = (a << 5 | a >>> 27) + b | 0;\n    d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n    d = (d << 9 | d >>> 23) + a | 0;\n    c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n    c = (c << 14 | c >>> 18) + d | 0;\n    b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n    b = (b << 20 | b >>> 12) + c | 0;\n    // hh()\n    a += (b ^ c ^ d) + k[5] - 378558 | 0;\n    a = (a << 4 | a >>> 28) + b | 0;\n    d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n    d = (d << 11 | d >>> 21) + a | 0;\n    c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n    c = (c << 16 | c >>> 16) + d | 0;\n    b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n    b = (b << 23 | b >>> 9) + c | 0;\n    a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n    a = (a << 4 | a >>> 28) + b | 0;\n    d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n    d = (d << 11 | d >>> 21) + a | 0;\n    c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n    c = (c << 16 | c >>> 16) + d | 0;\n    b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n    b = (b << 23 | b >>> 9) + c | 0;\n    a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n    a = (a << 4 | a >>> 28) + b | 0;\n    d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n    d = (d << 11 | d >>> 21) + a | 0;\n    c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n    c = (c << 16 | c >>> 16) + d | 0;\n    b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n    b = (b << 23 | b >>> 9) + c | 0;\n    a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n    a = (a << 4 | a >>> 28) + b | 0;\n    d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n    d = (d << 11 | d >>> 21) + a | 0;\n    c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n    c = (c << 16 | c >>> 16) + d | 0;\n    b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n    b = (b << 23 | b >>> 9) + c | 0;\n    // ii()\n    a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n    a = (a << 6 | a >>> 26) + b | 0;\n    d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n    d = (d << 10 | d >>> 22) + a | 0;\n    c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n    c = (c << 15 | c >>> 17) + d | 0;\n    b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n    b = (b << 21 | b >>> 11) + c | 0;\n    a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n    a = (a << 6 | a >>> 26) + b | 0;\n    d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n    d = (d << 10 | d >>> 22) + a | 0;\n    c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n    c = (c << 15 | c >>> 17) + d | 0;\n    b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n    b = (b << 21 | b >>> 11) + c | 0;\n    a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n    a = (a << 6 | a >>> 26) + b | 0;\n    d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n    d = (d << 10 | d >>> 22) + a | 0;\n    c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n    c = (c << 15 | c >>> 17) + d | 0;\n    b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n    b = (b << 21 | b >>> 11) + c | 0;\n    a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n    a = (a << 6 | a >>> 26) + b | 0;\n    d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n    d = (d << 10 | d >>> 22) + a | 0;\n    c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n    c = (c << 15 | c >>> 17) + d | 0;\n    b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n    b = (b << 21 | b >>> 11) + c | 0;\n    x[0] = a + x[0] | 0;\n    x[1] = b + x[1] | 0;\n    x[2] = c + x[2] | 0;\n    x[3] = d + x[3] | 0;\n  }\n  /**\n   * Initialise buffer to be hashed\n   */\n  start() {\n    this._dataLength = 0;\n    this._bufferLength = 0;\n    this._state.set(Md5.stateIdentity);\n    return this;\n  }\n  // Char to code point to to array conversion:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n  // #Example.3A_Fixing_charCodeAt_to_handle_non-Basic-Multilingual-Plane_characters_if_their_presence_earlier_in_the_string_is_unknown\n  /**\n   * Append a UTF-8 string to the hash buffer\n   * @param str String to append\n   */\n  appendStr(str) {\n    const buf8 = this._buffer8;\n    const buf32 = this._buffer32;\n    let bufLen = this._bufferLength;\n    let code;\n    let i;\n    for (i = 0; i < str.length; i += 1) {\n      code = str.charCodeAt(i);\n      if (code < 128) {\n        buf8[bufLen++] = code;\n      } else if (code < 0x800) {\n        buf8[bufLen++] = (code >>> 6) + 0xC0;\n        buf8[bufLen++] = code & 0x3F | 0x80;\n      } else if (code < 0xD800 || code > 0xDBFF) {\n        buf8[bufLen++] = (code >>> 12) + 0xE0;\n        buf8[bufLen++] = code >>> 6 & 0x3F | 0x80;\n        buf8[bufLen++] = code & 0x3F | 0x80;\n      } else {\n        code = (code - 0xD800) * 0x400 + (str.charCodeAt(++i) - 0xDC00) + 0x10000;\n        if (code > 0x10FFFF) {\n          throw new Error('Unicode standard supports code points up to U+10FFFF');\n        }\n        buf8[bufLen++] = (code >>> 18) + 0xF0;\n        buf8[bufLen++] = code >>> 12 & 0x3F | 0x80;\n        buf8[bufLen++] = code >>> 6 & 0x3F | 0x80;\n        buf8[bufLen++] = code & 0x3F | 0x80;\n      }\n      if (bufLen >= 64) {\n        this._dataLength += 64;\n        Md5._md5cycle(this._state, buf32);\n        bufLen -= 64;\n        buf32[0] = buf32[16];\n      }\n    }\n    this._bufferLength = bufLen;\n    return this;\n  }\n  /**\n   * Append an ASCII string to the hash buffer\n   * @param str String to append\n   */\n  appendAsciiStr(str) {\n    const buf8 = this._buffer8;\n    const buf32 = this._buffer32;\n    let bufLen = this._bufferLength;\n    let i;\n    let j = 0;\n    for (;;) {\n      i = Math.min(str.length - j, 64 - bufLen);\n      while (i--) {\n        buf8[bufLen++] = str.charCodeAt(j++);\n      }\n      if (bufLen < 64) {\n        break;\n      }\n      this._dataLength += 64;\n      Md5._md5cycle(this._state, buf32);\n      bufLen = 0;\n    }\n    this._bufferLength = bufLen;\n    return this;\n  }\n  /**\n   * Append a byte array to the hash buffer\n   * @param input array to append\n   */\n  appendByteArray(input) {\n    const buf8 = this._buffer8;\n    const buf32 = this._buffer32;\n    let bufLen = this._bufferLength;\n    let i;\n    let j = 0;\n    for (;;) {\n      i = Math.min(input.length - j, 64 - bufLen);\n      while (i--) {\n        buf8[bufLen++] = input[j++];\n      }\n      if (bufLen < 64) {\n        break;\n      }\n      this._dataLength += 64;\n      Md5._md5cycle(this._state, buf32);\n      bufLen = 0;\n    }\n    this._bufferLength = bufLen;\n    return this;\n  }\n  /**\n   * Get the state of the hash buffer\n   */\n  getState() {\n    const s = this._state;\n    return {\n      buffer: String.fromCharCode.apply(null, Array.from(this._buffer8)),\n      buflen: this._bufferLength,\n      length: this._dataLength,\n      state: [s[0], s[1], s[2], s[3]]\n    };\n  }\n  /**\n   * Override the current state of the hash buffer\n   * @param state New hash buffer state\n   */\n  setState(state) {\n    const buf = state.buffer;\n    const x = state.state;\n    const s = this._state;\n    let i;\n    this._dataLength = state.length;\n    this._bufferLength = state.buflen;\n    s[0] = x[0];\n    s[1] = x[1];\n    s[2] = x[2];\n    s[3] = x[3];\n    for (i = 0; i < buf.length; i += 1) {\n      this._buffer8[i] = buf.charCodeAt(i);\n    }\n  }\n  /**\n   * Hash the current state of the hash buffer and return the result\n   * @param raw Whether to return the value as an `Int32Array`\n   */\n  end(raw = false) {\n    const bufLen = this._bufferLength;\n    const buf8 = this._buffer8;\n    const buf32 = this._buffer32;\n    const i = (bufLen >> 2) + 1;\n    this._dataLength += bufLen;\n    const dataBitsLen = this._dataLength * 8;\n    buf8[bufLen] = 0x80;\n    buf8[bufLen + 1] = buf8[bufLen + 2] = buf8[bufLen + 3] = 0;\n    buf32.set(Md5.buffer32Identity.subarray(i), i);\n    if (bufLen > 55) {\n      Md5._md5cycle(this._state, buf32);\n      buf32.set(Md5.buffer32Identity);\n    }\n    // Do the final computation based on the tail and length\n    // Beware that the final length may not fit in 32 bits so we take care of that\n    if (dataBitsLen <= 0xFFFFFFFF) {\n      buf32[14] = dataBitsLen;\n    } else {\n      const matches = dataBitsLen.toString(16).match(/(.*?)(.{0,8})$/);\n      if (matches === null) {\n        return;\n      }\n      const lo = parseInt(matches[2], 16);\n      const hi = parseInt(matches[1], 16) || 0;\n      buf32[14] = lo;\n      buf32[15] = hi;\n    }\n    Md5._md5cycle(this._state, buf32);\n    return raw ? this._state : Md5._hex(this._state);\n  }\n}\n// Private Static Variables\nMd5.stateIdentity = new Int32Array([1732584193, -271733879, -1732584194, 271733878]);\nMd5.buffer32Identity = new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nMd5.hexChars = '0123456789abcdef';\nMd5.hexOut = [];\n// Permanent instance is to use for one-call hashing\nMd5.onePassHasher = new Md5();\nif (Md5.hashStr('hello') !== '5d41402abc4b2a76b9719d911017c592') {\n  throw new Error('Md5 self test failed.');\n}\nvar debugLogging = localStorage.getItem(LOCAL_STORAGE_KEYS.FeatureFlags.Telemetry.debugLogging) === 'true' || false;\nvar logDebugConsole = getDebugLogger('TelemetryService', debugLogging);\nvar TelemetryService = /** @class */function () {\n  function TelemetryService() {}\n  // Attach telemetry processing callback from consuming application\n  TelemetryService.registerTelemetryCallback = function (telemetryCallback) {\n    TelemetryService.telemetryCallback = telemetryCallback;\n  };\n  // #region public telemetry emitters\n  TelemetryService.sendEvent = function (telemetry) {\n    this.sendTelemetry(telemetry);\n  };\n  TelemetryService.sendException = function (telemetry) {\n    this.sendTelemetry(telemetry);\n  };\n  TelemetryService.sendMetric = function (telemetry) {\n    this.sendTelemetry(telemetry);\n  };\n  TelemetryService.sendRequest = function (telemetry) {\n    this.sendTelemetry(telemetry);\n  };\n  TelemetryService.sendTrace = function (telemetry) {\n    this.sendTelemetry(telemetry);\n  };\n  // #endregion\n  // #region public setters\n  /**\r\n   * store the current adt instance\r\n   * @param adtInstanceUrl\r\n   */\n  TelemetryService.setAdtInstance = function (adtInstanceUrl) {\n    this.adtInstanceHash = Md5.hashStr(adtInstanceUrl);\n    logDebugConsole('debug', \"Updating adt instance hash to \" + this.adtInstanceHash + \". {adtInstance}\", adtInstanceUrl);\n  };\n  /**\r\n   * store the current blob storage container url\r\n   * @param blobStorageContainerUrl the url for the storage container\r\n   */\n  TelemetryService.setStorageContainerUrl = function (blobStorageContainerUrl) {\n    this.storageContainerHash = Md5.hashStr(blobStorageContainerUrl);\n    logDebugConsole('debug', \"Updating storage URL to \" + this.storageContainerHash + \". {storageUrl}\", blobStorageContainerUrl);\n  };\n  /** store the scene id for the current scene */\n  TelemetryService.setSceneId = function (sceneId) {\n    this.sceneHash = Md5.hashStr(sceneId);\n    logDebugConsole('debug', \"Updating scene hash to \" + this.sceneHash + \". {sceneId}\", sceneId);\n  };\n  // #endregion\n  // #region private methods\n  // Report telemetry to telemetry processing callback (if present)\n  TelemetryService.sendTelemetry = function (telemetry) {\n    // add the common properties for all events\n    TelemetryService._addCommonTelemetryProperties(telemetry);\n    logDebugConsole('debug', \"[Telemetry] [\" + telemetry.type + \"] \" + telemetry.name, telemetry);\n    if (TelemetryService.telemetryCallback) TelemetryService.telemetryCallback(telemetry);\n  };\n  TelemetryService._addCommonTelemetryProperties = function (telemetry) {\n    if (!telemetry.customProperties) {\n      telemetry.customProperties = {};\n    }\n    // add the scene hash\n    if (this.sceneHash) {\n      telemetry.customProperties[CUSTOM_PROPERTY_NAMES.SceneHash] = this.sceneHash;\n    }\n    // add the adt instance hash\n    if (this.adtInstanceHash) {\n      telemetry.customProperties[CUSTOM_PROPERTY_NAMES.AdtInstanceHash] = this.adtInstanceHash;\n    }\n    // add the storage container hash\n    if (this.storageContainerHash) {\n      telemetry.customProperties[CUSTOM_PROPERTY_NAMES.StorageContainerHash] = this.storageContainerHash;\n    }\n  };\n  return TelemetryService;\n}();\nexport { AppRegion as A, ComponentName as C, TelemetryService as T, Telemetry$1 as a, TelemetryService_types as b, TelemetryEvent as c, TelemetryTrigger as d, TelemetryEvents as e, TelemetryRequest as f, TelemetryException as g, TelemetryTrace as h, TelemetryMetric as i };","map":{"version":3,"sources":["../../src/Models/Constants/TelemetryConstants.ts","../../src/Models/Services/TelemetryService/TelemetryService.types.ts","../../src/Models/Services/TelemetryService/Telemetry.ts","../../node_modules/ts-md5/dist/esm/md5.js","../../src/Models/Services/TelemetryService/TelemetryService.ts"],"names":[],"mappings":";;AAAA;AACO,IAAM,qBAAqB,GAAG;;EAEjC,eAAe,EAAE,iBAAiB;;EAElC,SAAS,EAAE,WAAW;;EAEtB,aAAa,EAAE,eAAe;;EAE9B,eAAe,EAAE,iBAAiB;;EAElC,SAAS,EAAE,WAAW;;EAEtB,oBAAoB,EAAE,sBAAsB;;EAE5C,WAAW,EAAE;CAChB;AAED;IACY,SAAA;AAAZ,CAAA,UAAY,SAAS,EAAA;EACjB,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB;EACnB,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB;EACzB,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;EACjB,SAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C;AAC/C,CAAC,EALW,SAAS,KAAT,SAAS,GAKpB,CAAA,CAAA,CAAA,CAAA;AAED;AACA,IAAY,OAGX;AAHD,CAAA,UAAY,OAAO,EAAA;EACf,OAAA,CAAA,OAAA,CAAA,GAAA,OAAe;EACf,OAAA,CAAA,OAAA,CAAA,GAAA,OAAe;AACnB,CAAC,EAHW,OAAO,KAAP,OAAO,GAGlB,CAAA,CAAA,CAAA,CAAA;AAED;IACY,gBAAA;AAAZ,CAAA,UAAY,gBAAgB,EAAA;;EAExB,gBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB;;EAEzB,gBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB;;EAErB,gBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B;AACjC,CAAC,EAPW,gBAAgB,KAAhB,gBAAgB,GAO3B,CAAA,CAAA,CAAA,CAAA;AAED;;;;AAIG;IACS,aAAA;AAAZ,CAAA,UAAY,aAAa,EAAA;EACrB,aAAA,CAAA,cAAA,CAAA,GAAA,cAA6B;EAC7B,aAAA,CAAA,cAAA,CAAA,GAAA,cAA6B;EAC7B,aAAA,CAAA,aAAA,CAAA,GAAA,aAA2B;EAC3B,aAAA,CAAA,aAAA,CAAA,GAAA,aAA2B;EAC3B,aAAA,CAAA,WAAA,CAAA,GAAA,WAAuB;EACvB,aAAA,CAAA,0BAAA,CAAA,GAAA,0BAAqD;AACzD,CAAC,EAPW,aAAa,KAAb,aAAa,GAOxB,CAAA,CAAA,CAAA,CAAA;AAED;;;;;;;;;;AAUG;AACU,IAAA,eAAe,GAAG;EAC3B,OAAO,EAAE;;IAEL,SAAS,EAAE;MACP,YAAY,EAAE;QACV,kBAAkB,EAAE;UAChB,SAAS,EAAE,wBAAwB;UACnC,UAAU,EAAE;YACR,cAAc,EAAE,gBAAgB;YAChC,WAAW,EAAE,aAAa;YAC1B,WAAW,EAAE;UAChB;QACJ,CAAA;QACD,UAAU,EAAE;UACR,SAAS,EAAE,uBAAuB;UAClC,UAAU,EAAE;YACR,cAAc,EAAE,gBAAgB;YAChC,aAAa,EAAE,eAAe;YAC9B,WAAW,EAAE,aAAa;YAC1B,cAAc,EAAE,gBAAgB;YAChC,cAAc,EAAE,gBAAgB;YAChC,YAAY,EAAE,cAAc;YAC5B,SAAS,EAAE,qBAAqB,CAAC;UACpC;QACJ,CAAA;QACD,YAAY,EAAE;UACV,SAAS,EAAE,yBAAyB;UACpC,UAAU,EAAE;YACR,WAAW,EAAE,aAAa;YAC1B,WAAW,EAAE,aAAa;YAC1B,YAAY,EAAE,cAAc;YAC5B,eAAe,EAAE,qBAAqB,CAAC;UAC1C;QACJ,CAAA;QACD,aAAa,EAAE;UACX,SAAS,EAAE,0BAA0B;UACrC,UAAU,EAAE;YACR,YAAY,EAAE,cAAc;YAC5B,aAAa,EAAE,eAAe;YAC9B,gBAAgB,EAAE,kBAAkB;YACpC,YAAY,EAAE,cAAc;YAC5B,oBAAoB,EAAE,sBAAsB;YAC5C,mBAAmB,EAAE,qBAAqB;YAC1C,uBAAuB,EAAE,yBAAyB;YAClD,0BAA0B,EACtB,4BAA4B;YAChC,YAAY,EAAE,cAAc;YAC5B,oBAAoB,EAAE,sBAAsB;YAC5C,oBAAoB,EAAE,sBAAsB;YAC5C,eAAe,EAAE,qBAAqB,CAAC;UAC1C;QACJ;MACJ;IACJ;EACJ,CAAA;;EAED,OAAO,EAAE;;IAEL,SAAS,EAAE;MACP,UAAU,EAAE;;QAER,WAAW,EAAE;UACT,MAAM,EAAE;YACJ,SAAS,EAAE;UACd,CAAA;UACD,OAAO,EAAE;YACL,SAAS,EAAE,+BAA+B;YAC1C,UAAU,EAAE;cACR,cAAc,EAAE,gBAAgB;cAChC,cAAc,EAAE;YACnB;UACJ,CAAA;UACD,QAAQ,EAAE;YACN,SAAS,EAAE;UACd;QACJ,CAAA;;QAED,WAAW,EAAE;UACT,MAAM,EAAE;YACJ,SAAS,EAAE;UACd,CAAA;UACD,OAAO,EAAE;YACL,SAAS,EAAE;UACd,CAAA;UACD,QAAQ,EAAE;YACN,SAAS,EAAE,gCAAgC;YAC3C,UAAU,EAAE;cACR,SAAS,EAAE;YACd;UACJ;QACJ,CAAA;;QAED,SAAS,EAAE;UACP,MAAM,EAAE;YACJ,SAAS,EAAE;UACd,CAAA;UACD,OAAO,EAAE;YACL,SAAS,EAAE;UACd,CAAA;UACD,QAAQ,EAAE;YACN,SAAS,EAAE,8BAA8B;YACzC,UAAU,EAAE;cACR,SAAS,EAAE;YACd;UACJ;QACJ,CAAA;;QAED,WAAW,EAAE;UACT,SAAS,EAAE;QACd;MACJ;IACJ;EACJ,CAAA;;EAED,MAAM,EAAE,CAAA,CAAE;;EAEV,KAAK,EAAE;;IAEH,mBAAmB,EAAE;MACjB,YAAY,EAAE;QACV,gBAAgB,EAAE;UACd,SAAS,EAAE,qCAAqC;UAChD,UAAU,EAAE;YACR,WAAW,EAAE;UAChB;QACJ;MACJ,CAAA;MACD,UAAU,EAAE;;QAER,SAAS,EAAE;UACP,SAAS,EAAE;QACd,CAAA;;QAED,SAAS,EAAE;UACP,SAAS,EAAE,+BAA+B;UAC1C,UAAU,EAAE;YACR,cAAc,EAAE;UACnB;QACJ,CAAA;;QAED,UAAU,EAAE;UACR,SAAS,EAAE,gCAAgC;UAC3C,UAAU,EAAE;YACR,QAAQ,EAAE,UAAU;YACpB,cAAc,EAAE;UACnB;QACJ,CAAA;;QAED,YAAY,EAAE;UACV,SAAS,EAAE,kCAAkC;UAC7C,UAAU,EAAE;YACR,QAAQ,EAAE;UACb;QACJ,CAAA;;QAED,oBAAoB,EAAE;UAClB,SAAS,EAAE,0CAA0C;UACrD,UAAU,EAAE;YACR,WAAW,EAAE;UAChB;QACJ,CAAA;;QAED,UAAU,EAAE;UACR,SAAS,EAAE,gCAAgC;UAC3C,UAAU,EAAE;YACR,IAAI,EAAE;UACT;QACJ,CAAA;;QAED,iBAAiB,EAAE;UACf,SAAS,EAAE,uCAAuC;UAClD,UAAU,EAAE;YACR,YAAY,EAAE;UACjB;QACJ,CAAA;;QAED,eAAe,EAAE;UACb,SAAS,EAAE;QACd,CAAA;;QAED,aAAa,EAAE;UACX,SAAS,EAAE,mCAAmC;UAC9C,UAAU,EAAE;YACR,YAAY,EAAE;UACjB;QACJ,CAAA;;QAED,YAAY,EAAE;UACV,SAAS,EAAE;QACd;MACJ;IACJ;EACJ;;;AC7PL;;AAEG;AACH,IAAY,aAMX;AAND,CAAA,UAAY,aAAa,EAAA;EACrB,aAAA,CAAA,OAAA,CAAA,GAAA,OAAe;EACf,aAAA,CAAA,WAAA,CAAA,GAAA,WAAuB;EACvB,aAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;EACjB,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB;EACnB,aAAA,CAAA,OAAA,CAAA,GAAA,OAAe;AACnB,CAAC,EANW,aAAa,KAAb,aAAa,GAMxB,CAAA,CAAA,CAAA,CAAA;;;;;;;ACID,IAAA,SAAA,GAAA,aAAA,YAAA;EAKI,SAAY,SAAA,CAAA,IAAY,EAAE,gBAAkC,EAAA;IACxD,IAAI,CAAC,IAAI,GAAG,IAAI;IAChB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,IAAI,CAAA,CAAE;IAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAA,CAAE,CAAC,WAAW,CAAA,CAAE;EAC5C;EACL,OAAC,SAAA;AAAD,CAAC,CAAA,CAAA;AAED;;AAEG;AACH,IAAA,gBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAsC,SAAS,CAAA,gBAAA,EAAA,MAAA,CAAA;EAS3C,SAAA,gBAAA,CAAY,EAQc,EAAA;IAPtB,IAAA,IAAI,GAAA,EAAA,CAAA,IAAA;MACJ,GAAG,GAAA,EAAA,CAAA,GAAA;MACH,aAAa,GAAA,EAAA,CAAA,aAAA;MACb,YAAY,GAAA,EAAA,CAAA,YAAA;MACZ,eAAe,GAAA,EAAA,CAAA,eAAA;MACf,OAAO,GAAA,EAAA,CAAA,OAAA;MACP,gBAAgB,GAAA,EAAA,CAAA,gBAAA;IAPpB,IAAA,KAAA,GASI,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,IAAI,EAAE,gBAAgB,CAAC,IAQhC,IAAA;IAPG,KAAI,CAAC,IAAI,GAAG,aAAa,CAAC,OAAO;IACjC,KAAI,CAAC,GAAG,GAAG,GAAG;IACd,KAAI,CAAC,OAAO,GAAG,OAAO;IACtB,KAAI,CAAC,YAAY,GAAG,YAAY;IAChC,KAAI,CAAC,eAAe,GAAG,eAAe;IACtC,KAAI,CAAC,aAAa,GAAG,aAAa;IAClC,KAAI,CAAC,gBAAgB,GAAG,gBAAgB;;EAC3C;EACL,OAAC,gBAAA;AAAD,CA3BA,CAAsC,SAAS,CA2B9C;AAED;;AAEG;AACH,IAAA,kBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAwC,SAAS,CAAA,kBAAA,EAAA,MAAA,CAAA;EAO7C,SAAA,kBAAA,CAAY,EAOgB,EAAA;IANxB,IAAA,IAAI,GAAA,EAAA,CAAA,IAAA;MACJ,OAAO,GAAA,EAAA,CAAA,OAAA;MACP,WAAW,GAAA,EAAA,CAAA,WAAA;MACX,KAAK,GAAA,EAAA,CAAA,KAAA;MACL,gBAAgB,GAAA,EAAA,CAAA,gBAAA;MAChB,aAAa,GAAA,EAAA,CAAA,aAAA;IANjB,IAAA,KAAA,GAQI,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,IAAI,EAAE,gBAAgB,CAAC,IAMhC,IAAA;IALG,KAAI,CAAC,IAAI,GAAG,aAAa,CAAC,SAAS;IACnC,KAAI,CAAC,WAAW,GAAG,WAAW;IAC9B,KAAI,CAAC,aAAa,GAAG,aAAa;IAClC,KAAI,CAAC,OAAO,GAAG,OAAO;IACtB,KAAI,CAAC,KAAK,GAAG,KAAK;;EACrB;EACL,OAAC,kBAAA;AAAD,CAtBA,CAAwC,SAAS,CAsBhD;AAED;;AAEG;AACH,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAoC,SAAS,CAAA,cAAA,EAAA,MAAA,CAAA;EAKzC,SAAA,cAAA,CAAY,EAKY,EAAA;QAJpB,IAAI,GAAA,EAAA,CAAA,IAAA;MACJ,OAAO,GAAA,EAAA,CAAA,OAAA;MACP,aAAa,GAAA,EAAA,CAAA,aAAA;MACb,gBAAgB,GAAA,EAAA,CAAA,gBAAA;IAJpB,IAAA,KAAA,GAMI,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,IAAI,EAAE,gBAAgB,CAAC,IAIhC,IAAA;IAHG,KAAI,CAAC,IAAI,GAAG,aAAa,CAAC,KAAK;IAC/B,KAAI,CAAC,OAAO,GAAG,OAAO;IACtB,KAAI,CAAC,aAAa,GAAG,aAAa;;EACrC;EACL,OAAC,cAAA;AAAD,CAhBA,CAAoC,SAAS,CAgB5C;AAED;;AAEG;AACH,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAoC,SAAS,CAAA,cAAA,EAAA,MAAA,CAAA;EAEzC,SAAA,cAAA,CAAY,EAMY,EAAA;;IALpB,IAAA,SAAS,GAAA,EAAA,CAAA,SAAA;MACT,aAAa,GAAA,EAAA,CAAA,aAAA;MACb,gBAAgB,GAAA,EAAA,CAAA,gBAAA;MAChB,IAAI,GAAA,EAAA,CAAA,IAAA;MACJ,WAAW,GAAA,EAAA,CAAA,WAAA;IALf,IAAA,KAAA,GAOI,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,IAAI,EAAE,gBAAgB,CAAC,IAQhC,IAAA;IAPG,KAAI,CAAC,IAAI,GAAG,aAAa,CAAC,KAAK;IAC/B,KAAI,CAAC,gBAAgB,GACd,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,KAAI,CAAC,gBAAgB,CACvB,GAAA,EAAA,GAAA,CAAA,CAAA,EAAA,EAAA,CAAA,qBAAqB,CAAC,SAAS,CAAG,GAAA,SAAS,IAAI,OAAO,EAAA,EAAA,CACtD,qBAAqB,CAAC,aAAa,CAAA,GAAG,aAAa,IAAI,OAAO,EAC9D,EAAA,CAAA,qBAAqB,CAAC,WAAW,CAAG,GAAA,WAAW,IAAI,OAAO,EAAA,EAAA,CAAA,CAC9D;;EACJ;EACL,OAAC,cAAA;AAAD,CAlBA,CAAoC,SAAS,CAkB5C;AAED;;AAEG;AACH,IAAA,eAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAqC,SAAS,CAAA,eAAA,EAAA,MAAA,CAAA;EAM1C,SAAA,eAAA,CAAY,EAOa,EAAA;IANrB,IAAA,IAAI,GAAA,EAAA,CAAA,IAAA;MACJ,OAAO,GAAA,EAAA,CAAA,OAAA;MACP,GAAG,GAAA,EAAA,CAAA,GAAA;MACH,GAAG,GAAA,EAAA,CAAA,GAAA;MACH,UAAU,GAAA,EAAA,CAAA,UAAA;MACV,gBAAgB,GAAA,EAAA,CAAA,gBAAA;IANpB,IAAA,KAAA,GAQI,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,IAAI,EAAE,gBAAgB,CAAC,IAMhC,IAAA;IALG,KAAI,CAAC,IAAI,GAAG,aAAa,CAAC,MAAM;IAChC,KAAI,CAAC,OAAO,GAAG,OAAO;IACtB,KAAI,CAAC,GAAG,GAAG,GAAG;IACd,KAAI,CAAC,GAAG,GAAG,GAAG;IACd,KAAI,CAAC,UAAU,GAAG,UAAU,IAAI,CAAC;;EACpC;EACL,OAAC,eAAA;AAAD,CArBA,CAAqC,SAAS,CAqB7C;;;;;;;;;;;AC9JD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,MAAM,GAAG,CAAC;EACb,WAAW,CAAA,EAAG;IACV,IAAI,CAAC,WAAW,GAAG,CAAC;IACpB,IAAI,CAAC,aAAa,GAAG,CAAC;IACtB,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC;IAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC;IAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC;IACnD,IAAI,CAAC,SAAS,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC;IACrD,IAAI,CAAC,KAAK,CAAA,CAAE;EACpB;EACI,OAAO,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,KAAK,EAAE;IAC7B,OAAO,IAAI,CAAC,aAAa,CACpB,KAAK,CAAA,CAAE,CACP,SAAS,CAAC,GAAG,CAAC,CACd,GAAG,CAAC,GAAG,CAAC;EACrB;EACI,OAAO,YAAY,CAAC,GAAG,EAAE,GAAG,GAAG,KAAK,EAAE;IAClC,OAAO,IAAI,CAAC,aAAa,CACpB,KAAK,CAAA,CAAE,CACP,cAAc,CAAC,GAAG,CAAC,CACnB,GAAG,CAAC,GAAG,CAAC;EACrB;EACI,OAAO,IAAI,CAAC,CAAC,EAAE;IACX,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ;IACvB,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM;IACrB,IAAI,CAAC;IACL,IAAI,MAAM;IACV,IAAI,CAAC;IACL,IAAI,CAAC;IACL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;MACvB,MAAM,GAAG,CAAC,GAAG,CAAC;MACd,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACR,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;QACvB,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;QACxC,CAAC,MAAM,CAAC;QACR,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;QACxC,CAAC,MAAM,CAAC;MACxB;IACA;IACQ,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;EAC1B;EACI,OAAO,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IACnB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACZ,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACZ,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACZ,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB;IACQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC;IAC3C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC;IACzC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC9C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC9C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC9C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC9C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IACxC;IACQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC9C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC9C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC;IAC3C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC9C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IACxC;IACQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC;IACpC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IACxC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IACzC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,GAAG,CAAC;IACvC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IACxC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IACxC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IACvC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IACzC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,CAAC;IACxC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IACvC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IACvC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC;IACtC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IACvC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,CAAC;IACxC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,CAAC;IACxC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IACvC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;IACvC;IACQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC1C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC3C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC;IACzC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC3C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,GAAG,CAAC;IACzC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC3C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC3C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,GAAG,CAAC;IAC1C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;IAC3C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC1C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC;IAC5C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC1C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC;IAC1C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC3B;EACA;AACA;AACA;EACI,KAAK,CAAA,EAAG;IACJ,IAAI,CAAC,WAAW,GAAG,CAAC;IACpB,IAAI,CAAC,aAAa,GAAG,CAAC;IACtB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC;IAClC,OAAO,IAAI;EACnB;EACA;EACA;EACA;EACA;AACA;AACA;AACA;EACI,SAAS,CAAC,GAAG,EAAE;IACX,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ;IAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS;IAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa;IAC/B,IAAI,IAAI;IACR,IAAI,CAAC;IACL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MAChC,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;MACxB,IAAI,IAAI,GAAG,GAAG,EAAE;QACZ,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;MACrC,CAAa,MACI,IAAI,IAAI,GAAG,KAAK,EAAE;QACnB,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI;QACpC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;MACnD,CAAa,MACI,IAAI,IAAI,GAAG,MAAM,IAAI,IAAI,GAAG,MAAM,EAAE;QACrC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI;QACrC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAI,IAAI,KAAK,CAAC,GAAG,IAAI,GAAI,IAAI;QAC3C,IAAI,CAAC,MAAM,EAAE,CAAC,GAAI,IAAI,GAAG,IAAI,GAAI,IAAI;MACrD,CAAa,MACI;QACD,IAAI,GAAI,CAAC,IAAI,GAAG,MAAM,IAAI,KAAK,IAAK,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,OAAO;QAC3E,IAAI,IAAI,GAAG,QAAQ,EAAE;UACjB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC;QAC3F;QACgB,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI;QACrC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAI,IAAI,KAAK,EAAE,GAAG,IAAI,GAAI,IAAI;QAC5C,IAAI,CAAC,MAAM,EAAE,CAAC,GAAI,IAAI,KAAK,CAAC,GAAG,IAAI,GAAI,IAAI;QAC3C,IAAI,CAAC,MAAM,EAAE,CAAC,GAAI,IAAI,GAAG,IAAI,GAAI,IAAI;MACrD;MACY,IAAI,MAAM,IAAI,EAAE,EAAE;QACd,IAAI,CAAC,WAAW,IAAI,EAAE;QACtB,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;QACjC,MAAM,IAAI,EAAE;QACZ,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC;MACpC;IACA;IACQ,IAAI,CAAC,aAAa,GAAG,MAAM;IAC3B,OAAO,IAAI;EACnB;EACA;AACA;AACA;AACA;EACI,cAAc,CAAC,GAAG,EAAE;IAChB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ;IAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS;IAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa;IAC/B,IAAI,CAAC;IACL,IAAI,CAAC,GAAG,CAAC;IACT,SAAS;MACL,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC;MACzC,OAAO,CAAC,EAAE,EAAE;QACR,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC;MACpD;MACY,IAAI,MAAM,GAAG,EAAE,EAAE;QACb;MAChB;MACY,IAAI,CAAC,WAAW,IAAI,EAAE;MACtB,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;MACjC,MAAM,GAAG,CAAC;IACtB;IACQ,IAAI,CAAC,aAAa,GAAG,MAAM;IAC3B,OAAO,IAAI;EACnB;EACA;AACA;AACA;AACA;EACI,eAAe,CAAC,KAAK,EAAE;IACnB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ;IAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS;IAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa;IAC/B,IAAI,CAAC;IACL,IAAI,CAAC,GAAG,CAAC;IACT,SAAS;MACL,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC;MAC3C,OAAO,CAAC,EAAE,EAAE;QACR,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC;MAC3C;MACY,IAAI,MAAM,GAAG,EAAE,EAAE;QACb;MAChB;MACY,IAAI,CAAC,WAAW,IAAI,EAAE;MACtB,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;MACjC,MAAM,GAAG,CAAC;IACtB;IACQ,IAAI,CAAC,aAAa,GAAG,MAAM;IAC3B,OAAO,IAAI;EACnB;EACA;AACA;AACA;EACI,QAAQ,CAAA,EAAG;IACP,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM;IACrB,OAAO;MACH,MAAM,EAAE,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MAClE,MAAM,EAAE,IAAI,CAAC,aAAa;MAC1B,MAAM,EAAE,IAAI,CAAC,WAAW;MACxB,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAS;EACT;EACA;AACA;AACA;AACA;EACI,QAAQ,CAAC,KAAK,EAAE;IACZ,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM;IACxB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK;IACrB,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM;IACrB,IAAI,CAAC;IACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM;IAC/B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM;IACjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MAChC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAChD;EACA;EACA;AACA;AACA;AACA;EACI,GAAG,CAAC,GAAG,GAAG,KAAK,EAAE;IACb,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa;IACjC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ;IAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS;IAC5B,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC;IAC3B,IAAI,CAAC,WAAW,IAAI,MAAM;IAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC;IACxC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI;IACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1D,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9C,IAAI,MAAM,GAAG,EAAE,EAAE;MACb,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;MACjC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC;IAC3C;IACA;IACA;IACQ,IAAI,WAAW,IAAI,UAAU,EAAE;MAC3B,KAAK,CAAC,EAAE,CAAC,GAAG,WAAW;IACnC,CAAS,MACI;MACD,MAAM,OAAO,GAAG,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC;MAChE,IAAI,OAAO,KAAK,IAAI,EAAE;QAClB;MAChB;MACY,MAAM,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MACnC,MAAM,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC;MACxC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE;MACd,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE;IAC1B;IACQ,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;IACjC,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;EACxD;AACA;AACA;AACA,GAAG,CAAC,aAAa,GAAG,IAAI,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;AACpF,GAAG,CAAC,gBAAgB,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,GAAG,CAAC,QAAQ,GAAG,kBAAkB;AACjC,GAAG,CAAC,MAAM,GAAG,EAAE;AACf;AACA,GAAG,CAAC,aAAa,GAAG,IAAI,GAAG,CAAA,CAAE;AAC7B,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,kCAAkC,EAAE;EAC7D,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;AAC5C;ACtZA,IAAM,YAAY,GACd,YAAY,CAAC,OAAO,CAChB,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,YAAY,CACzD,KAAK,MAAM,IAAI,KAAK;AACzB,IAAM,eAAe,GAAG,cAAc,CAAC,kBAAkB,EAAE,YAAY,CAAC;AAExE,IAAA,gBAAA,GAAA,aAAA,YAAA;EAAA,SAAA,gBAAA,CAAA,EAAA,CAsHC;;EA/GU,gBAAyB,CAAA,yBAAA,GAAhC,UACI,iBAA8D,EAAA;IAE9D,gBAAgB,CAAC,iBAAiB,GAAG,iBAAiB;GACzD;;EAIM,gBAAS,CAAA,SAAA,GAAhB,UAAiB,SAAyB,EAAA;IACtC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;GAChC;EAEM,gBAAa,CAAA,aAAA,GAApB,UAAqB,SAA6B,EAAA;IAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;GAChC;EAEM,gBAAU,CAAA,UAAA,GAAjB,UAAkB,SAA0B,EAAA;IACxC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;GAChC;EAEM,gBAAW,CAAA,WAAA,GAAlB,UAAmB,SAA2B,EAAA;IAC1C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;GAChC;EAEM,gBAAS,CAAA,SAAA,GAAhB,UAAiB,SAAyB,EAAA;IACtC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;GAChC;;;EAMD;;;AAGG;EACI,gBAAc,CAAA,cAAA,GAArB,UAAsB,cAAsB,EAAA;IACxC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC;IAClD,eAAe,CACX,OAAO,EACP,gCAAiC,GAAA,IAAI,CAAC,eAAe,GAAiB,iBAAA,EACtE,cAAc,CACjB;GACJ;EAED;;;AAGG;EACI,gBAAsB,CAAA,sBAAA,GAA7B,UAA8B,uBAA+B,EAAA;IACzD,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,OAAO,CAAC,uBAAuB,CAAC;IAChE,eAAe,CACX,OAAO,EACP,0BAA2B,GAAA,IAAI,CAAC,oBAAoB,GAAgB,gBAAA,EACpE,uBAAuB,CAC1B;GACJ;;EAGM,gBAAU,CAAA,UAAA,GAAjB,UAAkB,OAAe,EAAA;IAC7B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC;IACrC,eAAe,CACX,OAAO,EACP,yBAA0B,GAAA,IAAI,CAAC,SAAS,GAAa,aAAA,EACrD,OAAO,CACV;GACJ;;;;EAOc,gBAAa,CAAA,aAAA,GAA5B,UAA6B,SAAwB,EAAA;;IAEjD,gBAAgB,CAAC,6BAA6B,CAAC,SAAS,CAAC;IAEzD,eAAe,CACX,OAAO,EACP,eAAA,GAAgB,SAAS,CAAC,IAAI,GAAK,IAAA,GAAA,SAAS,CAAC,IAAM,EACnD,SAAS,CACZ;IACD,IAAI,gBAAgB,CAAC,iBAAiB,EAClC,gBAAgB,CAAC,iBAAiB,CAAC,SAAS,CAAC;GACpD;EAEc,gBAA6B,CAAA,6BAAA,GAA5C,UAA6C,SAAwB,EAAA;IACjE,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE;MAC7B,SAAS,CAAC,gBAAgB,GAAG,CAAA,CAAE;IAClC;;IAED,IAAI,IAAI,CAAC,SAAS,EAAE;MAChB,SAAS,CAAC,gBAAgB,CACtB,qBAAqB,CAAC,SAAS,CAClC,GAAG,IAAI,CAAC,SAAS;IACrB;;IAED,IAAI,IAAI,CAAC,eAAe,EAAE;MACtB,SAAS,CAAC,gBAAgB,CACtB,qBAAqB,CAAC,eAAe,CACxC,GAAG,IAAI,CAAC,eAAe;IAC3B;;IAED,IAAI,IAAI,CAAC,oBAAoB,EAAE;MAC3B,SAAS,CAAC,gBAAgB,CACtB,qBAAqB,CAAC,oBAAoB,CAC7C,GAAG,IAAI,CAAC,oBAAoB;IAChC;GACJ;EAGL,OAAC,gBAAA;AAAD,CAAC,CAAA,CAAA","sourcesContent":["/** The property names for custom properties in the payload */\nexport const CUSTOM_PROPERTY_NAMES = {\n    /** hashed value for the adt instance */\n    AdtInstanceHash: 'AdtInstanceHash',\n    /** region of the app (builder/viewer/etc.) */\n    AppRegion: 'AppRegion',\n    /** name of the emitting component */\n    ComponentName: 'ComponentName',\n    /** hashed id of the parent scene */\n    ParentSceneHash: 'ParentSceneHash',\n    /** hashed id of the scene */\n    SceneHash: 'SceneHash',\n    /** hashed value for the adt instance */\n    StorageContainerHash: 'StorageContainerHash',\n    /** type of action (user, system, etc.) */\n    TriggerType: 'TriggerType'\n};\n\n/** Highest level sections of the app */\nexport enum AppRegion {\n    Builder = 'Builder',\n    SceneLobby = 'SceneLobby',\n    Viewer = 'Viewer',\n    DataHistoryExplorer = 'DataHistoryExplorer'\n}\n\n/** The type of gesture the user used, (click, hover, etc.) */\nexport enum Gesture {\n    Click = 'Click',\n    Hover = 'Hover'\n}\n\n/** the source of the event, was it from a user or an automated event based off of some condition */\nexport enum TelemetryTrigger {\n    /** user initiated action */\n    UserAction = 'UserAction',\n    /** user initiated view */\n    UserView = 'UserView',\n    /** System initiated action */\n    SystemAction = 'SystemAction'\n}\n\n/**\n * The high level component emitting the event\n * Keep it at the general level, no need to get overly specific.\n * Ex: SceneList, ElementForm, etc\n */\nexport enum ComponentName {\n    BehaviorForm = 'BehaviorForm',\n    BehaviorList = 'BehaviorList',\n    ElementForm = 'ElementForm',\n    ElementList = 'ElementList',\n    SceneList = 'SceneList',\n    DataHistoryExplorerModal = 'DataHistoryExplorerModal'\n}\n\n/**\n * The events the app can emit\n * Structure is like this:\n *  - App region (Builder/Viewer)\n *    - High level component (SceneList, ElementForm, etc)\n *      - User action/System action\n *        - Event/action\n *           - variant (ex: initiate, confirm, cancel)\n *           - eventName: the name of the beacon to emit\n *           - properties: names of the custom properties that the event will have attached to it\n */\nexport const TelemetryEvents = {\n    Adapter: {\n        /** scene load */\n        SceneLoad: {\n            SystemAction: {\n                ParseConfiguration: {\n                    eventName: 'ParseConfig.ConfigKpis',\n                    properties: {\n                        countBehaviors: 'countBehaviors',\n                        countScenes: 'countScenes',\n                        countLayers: 'countLayers'\n                    }\n                },\n                ParseScene: {\n                    eventName: 'ParseConfig.SceneKpis',\n                    properties: {\n                        countBehaviors: 'countBehaviors',\n                        countElements: 'countElements',\n                        countAssets: 'countAssets',\n                        hasCoordinates: 'hasCoordinates',\n                        hasDescription: 'hasDescription',\n                        pollingDelay: 'pollingDelay',\n                        sceneHash: CUSTOM_PROPERTY_NAMES.SceneHash\n                    }\n                },\n                ParseElement: {\n                    eventName: 'ParseConfig.ElementKpis',\n                    properties: {\n                        elementType: 'elementType',\n                        countMeshes: 'countMeshes',\n                        countAliases: 'countAliases',\n                        parentSceneHash: CUSTOM_PROPERTY_NAMES.ParentSceneHash\n                    }\n                },\n                ParseBehavior: {\n                    eventName: 'ParseConfig.BehaviorKpis',\n                    properties: {\n                        countAliases: 'countAliases',\n                        countElements: 'countElements',\n                        countDataSources: 'countDataSources',\n                        countWidgets: 'countWidgets',\n                        countWidgetGaugeType: 'countWidgetGaugeType',\n                        countWidgetLinkType: 'countWidgetLinkType',\n                        countWidgetPropertyType: 'countWidgetPropertyType',\n                        countWidgetDataHistoryType:\n                            'countWidgetDataHistoryType',\n                        countVisuals: 'countVisuals',\n                        countVisualBadgeType: 'countVisualBadgeType',\n                        countVisualColorType: 'countVisualColorType',\n                        parentSceneHash: CUSTOM_PROPERTY_NAMES.ParentSceneHash\n                    }\n                }\n            }\n        }\n    },\n    /** builder section of the app */\n    Builder: {\n        /** scene list page */\n        SceneList: {\n            UserAction: {\n                /** creating a new scene */\n                CreateScene: {\n                    Cancel: {\n                        eventName: 'SceneList.CreateScene.Cancel'\n                    },\n                    Confirm: {\n                        eventName: 'SceneList.CreateScene.Confirm',\n                        properties: {\n                            hasCoordinates: 'hasCoordinates',\n                            hasDescription: 'hasDescription'\n                        }\n                    },\n                    Initiate: {\n                        eventName: 'SceneList.CreateScene.Initiate'\n                    }\n                },\n                /** delete an existing scene */\n                DeleteScene: {\n                    Cancel: {\n                        eventName: 'SceneList.DeleteScene.Cancel'\n                    },\n                    Confirm: {\n                        eventName: 'SceneList.DeleteScene.Confirm'\n                    },\n                    Initiate: {\n                        eventName: 'SceneList.DeleteScene.Initiate',\n                        properties: {\n                            itemIndex: 'itemIndex'\n                        }\n                    }\n                },\n                /** modify an existing scene */\n                EditScene: {\n                    Cancel: {\n                        eventName: 'SceneList.EditScene.Confirm'\n                    },\n                    Confirm: {\n                        eventName: 'SceneList.EditScene.Confirm'\n                    },\n                    Initiate: {\n                        eventName: 'SceneList.EditScene.Initiate',\n                        properties: {\n                            itemIndex: 'itemIndex'\n                        }\n                    }\n                },\n                /** Select a scene from the list */\n                SelectScene: {\n                    eventName: 'SceneList.SelectScene'\n                }\n            }\n        }\n    },\n    /** viewer section of the app */\n    Viewer: {},\n    /** tools provided by the library */\n    Tools: {\n        /** data history explorer component */\n        DataHistoryExplorer: {\n            SystemAction: {\n                ParseDataHistory: {\n                    eventName: 'ParseConfig.DataHistoryExplorerKpis',\n                    properties: {\n                        countSeries: 'countSeries'\n                    }\n                }\n            },\n            UserAction: {\n                /** opening modal to explore data history */\n                OpenModal: {\n                    eventName: 'DataHistoryExplorer.AddSeries'\n                },\n                /** adding a new series using the time series builder on the left */\n                AddSeries: {\n                    eventName: 'DataHistoryExplorer.AddSeries',\n                    properties: {\n                        hasCustomLabel: 'hasCustomLabel'\n                    }\n                },\n                /** editing series using the time series builder on the left */\n                EditSeries: {\n                    eventName: 'DataHistoryExplorer.EditSeries',\n                    properties: {\n                        seriesId: 'seriesId',\n                        hasCustomLabel: 'hasCustomLabel'\n                    }\n                },\n                /** removing a new series using the ellipsis menu of the list item in the builder on the left */\n                RemoveSeries: {\n                    eventName: 'DataHistoryExplorer.RemoveSeries',\n                    properties: {\n                        seriesId: 'seriesId'\n                    }\n                },\n                /** toggle the option to cast a property type to numeric */\n                ToggleNumericCasting: {\n                    eventName: 'DataHistoryExplorer.ToggleNumericCasting',\n                    properties: {\n                        toggleValue: 'toggleValue'\n                    }\n                },\n                /** changing view mode either to Chart or Table on the viewer component */\n                ChangeView: {\n                    eventName: 'DataHistoryExplorer.ChangeView',\n                    properties: {\n                        view: 'view'\n                    }\n                },\n                /** changing any chart options on the viewer under Chart tab like Y-axis type, Aggregation type or Quick Time */\n                ChangeChartOption: {\n                    eventName: 'DataHistoryExplorer.ChangeChartOption',\n                    properties: {\n                        chartOptions: 'chartOptions'\n                    }\n                },\n                /** clicking on Open in ADX action to view the chart data in Azure Data Explorer Web UI */\n                OpenSeriesInAdx: {\n                    eventName: 'DataHistoryExplorer.OpenInADX'\n                },\n                /** dowloading data in the Table tab in the viewer on right hand side */\n                DownloadTable: {\n                    eventName: 'DataHistoryExplorer.DownloadTable',\n                    properties: {\n                        numberOfRows: 'numberOfRows'\n                    }\n                },\n                /** triggering to force refresh data fetching */\n                ForceRefresh: {\n                    eventName: 'DataHistoryExplorer.ForceRefresh'\n                }\n            }\n        }\n    }\n};\n\n/**\n * The metrics the app can emit\n * Structure is like this:\n *  - App region (Builder/Viewer)\n *    - High level component (SceneList, ElementForm, etc)\n *      - User action/System metric\n *        - Event/action\n *           - eventName: the name of the beacon to emit\n *           - properties: names of the custom properties that the event will have attached to it\n */\nexport const TelemetryMetrics = {\n    Adapter: {},\n    Builder: {},\n    Viewer: {},\n    Tools: { DataHistoryExplorer: {} }\n};\n","import {\n    AppRegion,\n    ComponentName,\n    TelemetryTrigger\n} from '../../Constants/TelemetryConstants';\n\n/** Loosely based on the Application insights telemetry data model\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model\n */\nexport enum TelemetryType {\n    event = 'event',\n    exception = 'exception',\n    metric = 'metric',\n    request = 'request',\n    trace = 'trace'\n}\n\nexport interface ITelemetry {\n    type: TelemetryType;\n}\n\nexport type CustomProperties = Record<string, any>;\nexport type SeverityLevel =\n    | 'Verbose'\n    | 'Information'\n    | 'Warning'\n    | 'Error'\n    | 'Critical';\n\nexport interface IBaseTelemetryParams {\n    customProperties?: CustomProperties;\n    name: string;\n}\n\nexport interface IRequestTelemetryParams extends IBaseTelemetryParams {\n    url: string;\n    success?: boolean;\n    responseCode?: number;\n    responseMessage?: string;\n    requestMethod?: string;\n}\n\nexport interface IExceptionTelemetryParams extends IBaseTelemetryParams {\n    /** Identifier of where the exception was thrown in code.\n     * Used for exceptions grouping. Typically a combination of exception\n     * type and a function from the call stack. */\n    exceptionId: string;\n\n    /** Trace severity level */\n    severityLevel?: SeverityLevel;\n    message?: string;\n    stack?: string;\n}\n\nexport interface ITraceTelemetryParams extends IBaseTelemetryParams {\n    message: string;\n    /** Trace severity level */\n    severityLevel?: SeverityLevel;\n}\n\nexport type IEventTelemetryParams =\n    | IEventTelemetryForComponentAction\n    | IEventTelemetryForComponentView\n    | IEventTelemetryForService;\n\ninterface IEventTelemetryParamsBase extends IBaseTelemetryParams {\n    triggerType: TelemetryTrigger;\n}\ntype IEventTelemetryForComponentAction = IEventTelemetryParamsBase & {\n    triggerType: TelemetryTrigger.UserAction;\n    componentName: ComponentName;\n    appRegion: AppRegion;\n};\ntype IEventTelemetryForComponentView = IEventTelemetryParamsBase & {\n    triggerType: TelemetryTrigger.UserView;\n    componentName: ComponentName;\n    appRegion: AppRegion;\n};\ntype IEventTelemetryForService = IEventTelemetryParamsBase & {\n    triggerType: TelemetryTrigger.SystemAction;\n    componentName?: ComponentName;\n    appRegion?: AppRegion;\n};\n\nexport interface IMetricTelemetryParams extends IBaseTelemetryParams {\n    average: number;\n    min?: number;\n    max?: number;\n    sampleSize?: number;\n}\n","import { CUSTOM_PROPERTY_NAMES } from '../../Constants/TelemetryConstants';\nimport {\n    CustomProperties,\n    IEventTelemetryParams,\n    IExceptionTelemetryParams,\n    IMetricTelemetryParams,\n    IRequestTelemetryParams,\n    ITraceTelemetryParams,\n    SeverityLevel,\n    TelemetryType\n} from './TelemetryService.types';\n\nexport type TelemetryItem =\n    | TelemetryEvent\n    | TelemetryException\n    | TelemetryMetric\n    | TelemetryRequest\n    | TelemetryTrace;\n\nexport abstract class Telemetry {\n    name: string;\n    type: TelemetryType;\n    customProperties: CustomProperties;\n    timestamp: string;\n    constructor(name: string, customProperties: CustomProperties) {\n        this.name = name;\n        this.customProperties = customProperties || {};\n        this.timestamp = new Date().toUTCString();\n    }\n}\n\n/** Telemetry for network requests\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model-request-telemetry\n */\nexport class TelemetryRequest extends Telemetry {\n    type: TelemetryType.request;\n    name: string;\n    url: string;\n    success: boolean;\n    responseCode: number;\n    responseMessage: string;\n    requestMethod: string;\n    customProperties: CustomProperties;\n    constructor({\n        name,\n        url,\n        requestMethod,\n        responseCode,\n        responseMessage,\n        success,\n        customProperties\n    }: IRequestTelemetryParams) {\n        super(name, customProperties);\n        this.type = TelemetryType.request;\n        this.url = url;\n        this.success = success;\n        this.responseCode = responseCode;\n        this.responseMessage = responseMessage;\n        this.requestMethod = requestMethod;\n        this.customProperties = customProperties;\n    }\n}\n\n/** Telemetry for exceptions\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model-exception-telemetry\n */\nexport class TelemetryException extends Telemetry {\n    type: TelemetryType.exception;\n    exceptionId: string;\n    severityLevel: SeverityLevel;\n    message: string;\n    stack: string;\n\n    constructor({\n        name,\n        message,\n        exceptionId,\n        stack,\n        customProperties,\n        severityLevel\n    }: IExceptionTelemetryParams) {\n        super(name, customProperties);\n        this.type = TelemetryType.exception;\n        this.exceptionId = exceptionId;\n        this.severityLevel = severityLevel;\n        this.message = message;\n        this.stack = stack;\n    }\n}\n\n/** Telemetry for trace statements (similar to log entries)\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model-trace-telemetry\n */\nexport class TelemetryTrace extends Telemetry {\n    type: TelemetryType.trace;\n    message: string;\n    severityLevel: SeverityLevel;\n\n    constructor({\n        name,\n        message,\n        severityLevel,\n        customProperties\n    }: ITraceTelemetryParams) {\n        super(name, customProperties);\n        this.type = TelemetryType.trace;\n        this.message = message;\n        this.severityLevel = severityLevel;\n    }\n}\n\n/** Telemetry for application events (Typically it is a user interaction such as button click)\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model-event-telemetry\n */\nexport class TelemetryEvent extends Telemetry {\n    type: TelemetryType.event;\n    constructor({\n        appRegion,\n        componentName,\n        customProperties,\n        name,\n        triggerType\n    }: IEventTelemetryParams) {\n        super(name, customProperties);\n        this.type = TelemetryType.event;\n        this.customProperties = {\n            ...this.customProperties,\n            [CUSTOM_PROPERTY_NAMES.AppRegion]: appRegion || 'Unset',\n            [CUSTOM_PROPERTY_NAMES.ComponentName]: componentName || 'Unset',\n            [CUSTOM_PROPERTY_NAMES.TriggerType]: triggerType || 'Unset'\n        };\n    }\n}\n\n/** Telemetry for application measurements (Typically it is a state of the app like queue length, or duration something took to complete)\n * https://docs.microsoft.com/en-us/azure/azure-monitor/app/data-model-metric-telemetry\n */\nexport class TelemetryMetric extends Telemetry {\n    type: TelemetryType.metric;\n    average: number;\n    min?: number;\n    max?: number;\n    sampleSize?: number;\n    constructor({\n        name,\n        average,\n        min,\n        max,\n        sampleSize,\n        customProperties\n    }: IMetricTelemetryParams) {\n        super(name, customProperties);\n        this.type = TelemetryType.metric;\n        this.average = average;\n        this.min = min;\n        this.max = max;\n        this.sampleSize = sampleSize || 1;\n    }\n}\n","/*\n\nTypeScript Md5\n==============\n\nBased on work by\n* Joseph Myers: http://www.myersdaily.org/joseph/javascript/md5-text.html\n* André Cruz: https://github.com/satazor/SparkMD5\n* Raymond Hill: https://github.com/gorhill/yamd5.js\n\nEffectively a TypeScrypt re-write of Raymond Hill JS Library\n\nThe MIT License (MIT)\n\nCopyright (C) 2014 Raymond Hill\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n            DO WHAT YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2015 André Cruz <amdfcruz@gmail.com>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT YOU WANT TO.\n\n\n*/\n;\nexport class Md5 {\n    constructor() {\n        this._dataLength = 0;\n        this._bufferLength = 0;\n        this._state = new Int32Array(4);\n        this._buffer = new ArrayBuffer(68);\n        this._buffer8 = new Uint8Array(this._buffer, 0, 68);\n        this._buffer32 = new Uint32Array(this._buffer, 0, 17);\n        this.start();\n    }\n    static hashStr(str, raw = false) {\n        return this.onePassHasher\n            .start()\n            .appendStr(str)\n            .end(raw);\n    }\n    static hashAsciiStr(str, raw = false) {\n        return this.onePassHasher\n            .start()\n            .appendAsciiStr(str)\n            .end(raw);\n    }\n    static _hex(x) {\n        const hc = Md5.hexChars;\n        const ho = Md5.hexOut;\n        let n;\n        let offset;\n        let j;\n        let i;\n        for (i = 0; i < 4; i += 1) {\n            offset = i * 8;\n            n = x[i];\n            for (j = 0; j < 8; j += 2) {\n                ho[offset + 1 + j] = hc.charAt(n & 0x0F);\n                n >>>= 4;\n                ho[offset + 0 + j] = hc.charAt(n & 0x0F);\n                n >>>= 4;\n            }\n        }\n        return ho.join('');\n    }\n    static _md5cycle(x, k) {\n        let a = x[0];\n        let b = x[1];\n        let c = x[2];\n        let d = x[3];\n        // ff()\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        // gg()\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        // hh()\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        // ii()\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n    /**\n     * Initialise buffer to be hashed\n     */\n    start() {\n        this._dataLength = 0;\n        this._bufferLength = 0;\n        this._state.set(Md5.stateIdentity);\n        return this;\n    }\n    // Char to code point to to array conversion:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n    // #Example.3A_Fixing_charCodeAt_to_handle_non-Basic-Multilingual-Plane_characters_if_their_presence_earlier_in_the_string_is_unknown\n    /**\n     * Append a UTF-8 string to the hash buffer\n     * @param str String to append\n     */\n    appendStr(str) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let code;\n        let i;\n        for (i = 0; i < str.length; i += 1) {\n            code = str.charCodeAt(i);\n            if (code < 128) {\n                buf8[bufLen++] = code;\n            }\n            else if (code < 0x800) {\n                buf8[bufLen++] = (code >>> 6) + 0xC0;\n                buf8[bufLen++] = code & 0x3F | 0x80;\n            }\n            else if (code < 0xD800 || code > 0xDBFF) {\n                buf8[bufLen++] = (code >>> 12) + 0xE0;\n                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code & 0x3F) | 0x80;\n            }\n            else {\n                code = ((code - 0xD800) * 0x400) + (str.charCodeAt(++i) - 0xDC00) + 0x10000;\n                if (code > 0x10FFFF) {\n                    throw new Error('Unicode standard supports code points up to U+10FFFF');\n                }\n                buf8[bufLen++] = (code >>> 18) + 0xF0;\n                buf8[bufLen++] = (code >>> 12 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code & 0x3F) | 0x80;\n            }\n            if (bufLen >= 64) {\n                this._dataLength += 64;\n                Md5._md5cycle(this._state, buf32);\n                bufLen -= 64;\n                buf32[0] = buf32[16];\n            }\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n    /**\n     * Append an ASCII string to the hash buffer\n     * @param str String to append\n     */\n    appendAsciiStr(str) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let i;\n        let j = 0;\n        for (;;) {\n            i = Math.min(str.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = str.charCodeAt(j++);\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n    /**\n     * Append a byte array to the hash buffer\n     * @param input array to append\n     */\n    appendByteArray(input) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let i;\n        let j = 0;\n        for (;;) {\n            i = Math.min(input.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = input[j++];\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n    /**\n     * Get the state of the hash buffer\n     */\n    getState() {\n        const s = this._state;\n        return {\n            buffer: String.fromCharCode.apply(null, Array.from(this._buffer8)),\n            buflen: this._bufferLength,\n            length: this._dataLength,\n            state: [s[0], s[1], s[2], s[3]]\n        };\n    }\n    /**\n     * Override the current state of the hash buffer\n     * @param state New hash buffer state\n     */\n    setState(state) {\n        const buf = state.buffer;\n        const x = state.state;\n        const s = this._state;\n        let i;\n        this._dataLength = state.length;\n        this._bufferLength = state.buflen;\n        s[0] = x[0];\n        s[1] = x[1];\n        s[2] = x[2];\n        s[3] = x[3];\n        for (i = 0; i < buf.length; i += 1) {\n            this._buffer8[i] = buf.charCodeAt(i);\n        }\n    }\n    /**\n     * Hash the current state of the hash buffer and return the result\n     * @param raw Whether to return the value as an `Int32Array`\n     */\n    end(raw = false) {\n        const bufLen = this._bufferLength;\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        const i = (bufLen >> 2) + 1;\n        this._dataLength += bufLen;\n        const dataBitsLen = this._dataLength * 8;\n        buf8[bufLen] = 0x80;\n        buf8[bufLen + 1] = buf8[bufLen + 2] = buf8[bufLen + 3] = 0;\n        buf32.set(Md5.buffer32Identity.subarray(i), i);\n        if (bufLen > 55) {\n            Md5._md5cycle(this._state, buf32);\n            buf32.set(Md5.buffer32Identity);\n        }\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        if (dataBitsLen <= 0xFFFFFFFF) {\n            buf32[14] = dataBitsLen;\n        }\n        else {\n            const matches = dataBitsLen.toString(16).match(/(.*?)(.{0,8})$/);\n            if (matches === null) {\n                return;\n            }\n            const lo = parseInt(matches[2], 16);\n            const hi = parseInt(matches[1], 16) || 0;\n            buf32[14] = lo;\n            buf32[15] = hi;\n        }\n        Md5._md5cycle(this._state, buf32);\n        return raw ? this._state : Md5._hex(this._state);\n    }\n}\n// Private Static Variables\nMd5.stateIdentity = new Int32Array([1732584193, -271733879, -1732584194, 271733878]);\nMd5.buffer32Identity = new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nMd5.hexChars = '0123456789abcdef';\nMd5.hexOut = [];\n// Permanent instance is to use for one-call hashing\nMd5.onePassHasher = new Md5();\nif (Md5.hashStr('hello') !== '5d41402abc4b2a76b9719d911017c592') {\n    throw new Error('Md5 self test failed.');\n}\n//# sourceMappingURL=md5.js.map","import { Md5 } from 'ts-md5';\nimport { LOCAL_STORAGE_KEYS } from '../../Constants/Constants';\nimport { CUSTOM_PROPERTY_NAMES } from '../../Constants/TelemetryConstants';\nimport { getDebugLogger } from '../Utils';\nimport {\n    TelemetryEvent,\n    TelemetryException,\n    TelemetryItem,\n    TelemetryMetric,\n    TelemetryRequest,\n    TelemetryTrace\n} from './Telemetry';\n\nconst debugLogging =\n    localStorage.getItem(\n        LOCAL_STORAGE_KEYS.FeatureFlags.Telemetry.debugLogging\n    ) === 'true' || false;\nconst logDebugConsole = getDebugLogger('TelemetryService', debugLogging);\n\nclass TelemetryService {\n    static telemetryCallback: (telemetry: TelemetryItem) => Promise<void>;\n    private static adtInstanceHash: string; // the hashed value of the adt instance URL\n    private static storageContainerHash: string; // the hashed value of the storage container url\n    private static sceneHash: string; // the hash of the scene id\n\n    // Attach telemetry processing callback from consuming application\n    static registerTelemetryCallback(\n        telemetryCallback: (telemetry: TelemetryItem) => Promise<void>\n    ) {\n        TelemetryService.telemetryCallback = telemetryCallback;\n    }\n\n    // #region public telemetry emitters\n\n    static sendEvent(telemetry: TelemetryEvent) {\n        this.sendTelemetry(telemetry);\n    }\n\n    static sendException(telemetry: TelemetryException) {\n        this.sendTelemetry(telemetry);\n    }\n\n    static sendMetric(telemetry: TelemetryMetric) {\n        this.sendTelemetry(telemetry);\n    }\n\n    static sendRequest(telemetry: TelemetryRequest) {\n        this.sendTelemetry(telemetry);\n    }\n\n    static sendTrace(telemetry: TelemetryTrace) {\n        this.sendTelemetry(telemetry);\n    }\n\n    // #endregion\n\n    // #region public setters\n\n    /**\n     * store the current adt instance\n     * @param adtInstanceUrl\n     */\n    static setAdtInstance(adtInstanceUrl: string): void {\n        this.adtInstanceHash = Md5.hashStr(adtInstanceUrl);\n        logDebugConsole(\n            'debug',\n            `Updating adt instance hash to ${this.adtInstanceHash}. {adtInstance}`,\n            adtInstanceUrl\n        );\n    }\n\n    /**\n     * store the current blob storage container url\n     * @param blobStorageContainerUrl the url for the storage container\n     */\n    static setStorageContainerUrl(blobStorageContainerUrl: string): void {\n        this.storageContainerHash = Md5.hashStr(blobStorageContainerUrl);\n        logDebugConsole(\n            'debug',\n            `Updating storage URL to ${this.storageContainerHash}. {storageUrl}`,\n            blobStorageContainerUrl\n        );\n    }\n\n    /** store the scene id for the current scene */\n    static setSceneId(sceneId: string): void {\n        this.sceneHash = Md5.hashStr(sceneId);\n        logDebugConsole(\n            'debug',\n            `Updating scene hash to ${this.sceneHash}. {sceneId}`,\n            sceneId\n        );\n    }\n\n    // #endregion\n\n    // #region private methods\n\n    // Report telemetry to telemetry processing callback (if present)\n    private static sendTelemetry(telemetry: TelemetryItem) {\n        // add the common properties for all events\n        TelemetryService._addCommonTelemetryProperties(telemetry);\n\n        logDebugConsole(\n            'debug',\n            `[Telemetry] [${telemetry.type}] ${telemetry.name}`,\n            telemetry\n        );\n        if (TelemetryService.telemetryCallback)\n            TelemetryService.telemetryCallback(telemetry);\n    }\n\n    private static _addCommonTelemetryProperties(telemetry: TelemetryItem) {\n        if (!telemetry.customProperties) {\n            telemetry.customProperties = {};\n        }\n        // add the scene hash\n        if (this.sceneHash) {\n            telemetry.customProperties[\n                CUSTOM_PROPERTY_NAMES.SceneHash\n            ] = this.sceneHash;\n        }\n        // add the adt instance hash\n        if (this.adtInstanceHash) {\n            telemetry.customProperties[\n                CUSTOM_PROPERTY_NAMES.AdtInstanceHash\n            ] = this.adtInstanceHash;\n        }\n        // add the storage container hash\n        if (this.storageContainerHash) {\n            telemetry.customProperties[\n                CUSTOM_PROPERTY_NAMES.StorageContainerHash\n            ] = this.storageContainerHash;\n        }\n    }\n\n    // #endregion\n}\n\nexport default TelemetryService;\n"]},"metadata":{},"sourceType":"module"}