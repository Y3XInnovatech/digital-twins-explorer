{"ast":null,"code":"import * as React from 'react';\n/**\n * @deprecated Deprecated due to potential for misuse (see package readme).\n * Use `React.useCallback` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useConstCallback(callback) {\n  var ref = React.useRef();\n  if (!ref.current) {\n    ref.current = callback;\n  }\n  return ref.current;\n}","map":{"version":3,"sources":["useConstCallback.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAE9B;;;AAGG;AACH;AACA,OAAM,SAAU,gBAAgB,CAAoC,QAAW,EAAA;EAC7E,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAA,CAAK;EAC7B,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;IAChB,GAAG,CAAC,OAAO,GAAG,QAAQ;EACvB;EACD,OAAO,GAAG,CAAC,OAAO;AACpB","sourcesContent":["import * as React from 'react';\n\n/**\n * @deprecated Deprecated due to potential for misuse (see package readme).\n * Use `React.useCallback` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useConstCallback<T extends (...args: any[]) => any>(callback: T): T {\n  const ref = React.useRef<T>();\n  if (!ref.current) {\n    ref.current = callback;\n  }\n  return ref.current;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}